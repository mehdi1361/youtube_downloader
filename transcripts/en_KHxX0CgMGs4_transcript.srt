1
00:00:00,040 --> 00:00:02,280
learn how to make games and JavaScript

2
00:00:02,280 --> 00:00:05,720
using the Klay library in this course JS

3
00:00:05,720 --> 00:00:08,240
Legend Dev will first teach you the

4
00:00:08,240 --> 00:00:10,679
JavaScript you need to know to start

5
00:00:10,679 --> 00:00:13,480
creating games then he'll teach you how

6
00:00:13,480 --> 00:00:16,000
to create games hi everyone welcome to

7
00:00:16,000 --> 00:00:18,480
this crash course where the goal is to

8
00:00:18,480 --> 00:00:20,920
teach you how to program in JavaScript

9
00:00:20,920 --> 00:00:23,199
so that you can start making games with

10
00:00:23,199 --> 00:00:25,400
it so as opposed to all the crash

11
00:00:25,400 --> 00:00:28,039
courses you find on YouTube on learning

12
00:00:28,039 --> 00:00:30,039
JavaScript they usually teach you

13
00:00:30,039 --> 00:00:32,599
JavaScript with the intent of making

14
00:00:32,599 --> 00:00:35,320
websites and working in webdev now here

15
00:00:35,320 --> 00:00:37,719
it's different because I'm teaching you

16
00:00:37,719 --> 00:00:39,640
the barebones of JavaScript so that you

17
00:00:39,640 --> 00:00:41,640
can start making games and then you can

18
00:00:41,640 --> 00:00:43,079
start even watching my previous

19
00:00:43,079 --> 00:00:45,120
tutorials which all assume that you have

20
00:00:45,120 --> 00:00:47,640
a basic understanding of JavaScript now

21
00:00:47,640 --> 00:00:50,120
why learn JavaScript for making games so

22
00:00:50,120 --> 00:00:52,039
that's a good question you might have

23
00:00:52,039 --> 00:00:54,120
asked yourself and yep I'm here to

24
00:00:54,120 --> 00:00:57,199
answerer it so JavaScript is a very

25
00:00:57,199 --> 00:01:00,039
accessible language it's a very ass

26
00:01:00,039 --> 00:01:02,440
after skill that means that with

27
00:01:02,440 --> 00:01:04,199
JavaScript you can work as a web dev so

28
00:01:04,199 --> 00:01:06,439
why not use these same knowledge same

29
00:01:06,439 --> 00:01:09,240
tools to make games and especially web

30
00:01:09,240 --> 00:01:12,400
games so games that can run on the web

31
00:01:12,400 --> 00:01:15,240
without having to download or install

32
00:01:15,240 --> 00:01:16,920
anything and that's the first ADV

33
00:01:16,920 --> 00:01:19,040
advantages of web games and using

34
00:01:19,040 --> 00:01:21,439
JavaScript for making those games is

35
00:01:21,439 --> 00:01:23,560
that you don't have to install anything

36
00:01:23,560 --> 00:01:26,360
as a player which reduces the friction

37
00:01:26,360 --> 00:01:28,479
it's especially an advantage in game

38
00:01:28,479 --> 00:01:30,280
jams and especially an advant Advantage

39
00:01:30,280 --> 00:01:32,119
when you're a new game developer trying

40
00:01:32,119 --> 00:01:35,000
to build your reputation so by making a

41
00:01:35,000 --> 00:01:37,640
bunch of smaller web games you can not

42
00:01:37,640 --> 00:01:39,399
only build your skill as a game

43
00:01:39,399 --> 00:01:42,920
developer but also uh more easily a mass

44
00:01:42,920 --> 00:01:46,200
an audience or a like poent potential

45
00:01:46,200 --> 00:01:48,960
players now the advantage of doing this

46
00:01:48,960 --> 00:01:52,079
in JavaScript is because JavaScript is

47
00:01:52,079 --> 00:01:54,360
the lingua franka I think that's how you

48
00:01:54,360 --> 00:01:56,799
say it of the web that means that when

49
00:01:56,799 --> 00:01:58,439
you make your game in JavaScript things

50
00:01:58,439 --> 00:02:01,680
load fast and are Snappy so if I press

51
00:02:01,680 --> 00:02:04,039
this is a game I made a Pokemon Style

52
00:02:04,039 --> 00:02:06,399
game I made in JavaScript so I have even

53
00:02:06,399 --> 00:02:10,160
like 60 FPS Etc so yeah if you were to

54
00:02:10,160 --> 00:02:12,319
make the same game in unity which has a

55
00:02:12,319 --> 00:02:15,239
web export it's usually bloated very

56
00:02:15,239 --> 00:02:17,840
slow to start I have I had only bad

57
00:02:17,840 --> 00:02:20,319
experiences playing Unity games on the

58
00:02:20,319 --> 00:02:24,000
web now the other advantage of using

59
00:02:24,000 --> 00:02:25,360
JavaScript to make games is that you're

60
00:02:25,360 --> 00:02:27,760
not stuck on the web so if you want to

61
00:02:27,760 --> 00:02:30,680
make a game on Steam you can relatively

62
00:02:30,680 --> 00:02:33,400
easily transfer your game convert your

63
00:02:33,400 --> 00:02:36,239
game into a desktop application using

64
00:02:36,239 --> 00:02:38,720
Tori or electron or some other

65
00:02:38,720 --> 00:02:40,720
Technologies I have a tutorial on my

66
00:02:40,720 --> 00:02:42,280
channel teaching you how to make this

67
00:02:42,280 --> 00:02:44,840
how to do that to have a game that is

68
00:02:44,840 --> 00:02:46,879
written in JavaScript but works on

69
00:02:46,879 --> 00:02:50,680
desktop a prime example of this was

70
00:02:50,680 --> 00:02:52,680
vampire survivors which was a very

71
00:02:52,680 --> 00:02:56,879
popular game on PC which was a web game

72
00:02:56,879 --> 00:02:59,400
that was transferred into an electron

73
00:02:59,400 --> 00:03:01,560
application so you can have PC game you

74
00:03:01,560 --> 00:03:03,599
can publish your games on Steam so

75
00:03:03,599 --> 00:03:05,040
that's another Advantage without having

76
00:03:05,040 --> 00:03:07,440
to change your tools you can also do the

77
00:03:07,440 --> 00:03:09,799
same thing for web uh for mobile sorry

78
00:03:09,799 --> 00:03:12,120
so with one language JavaScript you can

79
00:03:12,120 --> 00:03:16,720
make games for uh the web desktop and

80
00:03:16,720 --> 00:03:19,519
mobile now the only missing part here is

81
00:03:19,519 --> 00:03:22,959
the consoles and for consoles I don't

82
00:03:22,959 --> 00:03:24,599
worry much about it because if you can

83
00:03:24,599 --> 00:03:26,720
make a very successful game on PC

84
00:03:26,720 --> 00:03:30,239
usually it makes business sense to just

85
00:03:30,239 --> 00:03:33,319
um pay a porting house to Port your game

86
00:03:33,319 --> 00:03:37,080
to consoles so as an indie developer

87
00:03:37,080 --> 00:03:39,239
really should be focusing on making a

88
00:03:39,239 --> 00:03:41,040
great game and if you want to make money

89
00:03:41,040 --> 00:03:43,720
usually you have to go to steam to do

90
00:03:43,720 --> 00:03:45,599
that and you can do that with JavaScript

91
00:03:45,599 --> 00:03:47,720
and I would say the last Advantage is

92
00:03:47,720 --> 00:03:49,920
the transferable knowledge you have with

93
00:03:49,920 --> 00:03:54,200
webdev so imagine you're a new developer

94
00:03:54,200 --> 00:03:56,599
you just started out you wanted to learn

95
00:03:56,599 --> 00:03:59,200
programming and you learn JavaScript and

96
00:03:59,200 --> 00:04:02,400
you realize like making games is fun but

97
00:04:02,400 --> 00:04:04,280
I would not be able to make this a

98
00:04:04,280 --> 00:04:06,319
sustainable career or something like

99
00:04:06,319 --> 00:04:09,439
that well the tool JavaScript language

100
00:04:09,439 --> 00:04:11,319
you learned is actually useful for

101
00:04:11,319 --> 00:04:14,959
making web applications and websites so

102
00:04:14,959 --> 00:04:16,320
the knowledge you have here is

103
00:04:16,320 --> 00:04:18,799
transferable into in demand skill which

104
00:04:18,799 --> 00:04:21,759
you can use as a software engineer Etc

105
00:04:21,759 --> 00:04:24,360
so and vice versa if you're a web dev

106
00:04:24,360 --> 00:04:28,120
already you might want to try to uh make

107
00:04:28,120 --> 00:04:30,280
games and you cannot justify the

108
00:04:30,280 --> 00:04:32,440
investment of time into learning maybe

109
00:04:32,440 --> 00:04:36,600
Unity or good Etc so you might it might

110
00:04:36,600 --> 00:04:38,400
be actually better for you to just stick

111
00:04:38,400 --> 00:04:40,440
to JavaScript and make games with it and

112
00:04:40,440 --> 00:04:42,240
there are many libraries you can use in

113
00:04:42,240 --> 00:04:44,400
JavaScript to make things easy and one

114
00:04:44,400 --> 00:04:46,560
of them that I teach on my channel cap

115
00:04:46,560 --> 00:04:50,400
play is really uh really fun to use and

116
00:04:50,400 --> 00:04:52,160
really quick to use that it makes it

117
00:04:52,160 --> 00:04:54,800
very fast to make games with it so

118
00:04:54,800 --> 00:04:57,520
that's uh that's that so what's the

119
00:04:57,520 --> 00:04:59,280
promise of this video so by the end of

120
00:04:59,280 --> 00:05:01,520
this video you should have a basic

121
00:05:01,520 --> 00:05:03,240
understanding of JavaScript even if you

122
00:05:03,240 --> 00:05:05,919
have never programmed before and you

123
00:05:05,919 --> 00:05:07,840
should be able to have made your first

124
00:05:07,840 --> 00:05:09,680
game so we're going to try to build by

125
00:05:09,680 --> 00:05:11,759
the end of this video a first simple

126
00:05:11,759 --> 00:05:13,600
game either a platformer or something

127
00:05:13,600 --> 00:05:16,400
very simple and then after that you are

128
00:05:16,400 --> 00:05:20,479
ready to watch my previous tutorials uh

129
00:05:20,479 --> 00:05:24,000
I have I can show them to you here so I

130
00:05:24,000 --> 00:05:25,960
have tutorials on how to make a Metroid

131
00:05:25,960 --> 00:05:29,160
Vania game how to make a Zelda likee

132
00:05:29,160 --> 00:05:30,759
fighting game GES

133
00:05:30,759 --> 00:05:33,720
Etc and of course you can use other

134
00:05:33,720 --> 00:05:35,800
resources and basically you can dive

135
00:05:35,800 --> 00:05:38,400
into and then into it so after that if

136
00:05:38,400 --> 00:05:41,199
you want to make uh go to webdev you can

137
00:05:41,199 --> 00:05:44,000
follow tutorials Etc and read

138
00:05:44,000 --> 00:05:46,919
documentations Etc so it's this is meant

139
00:05:46,919 --> 00:05:49,000
as a gateway

140
00:05:49,000 --> 00:05:51,560
to JavaScript but also like game

141
00:05:51,560 --> 00:05:53,840
development in JavaScript so it's a a

142
00:05:53,840 --> 00:05:56,080
gateaway to your programming career

143
00:05:56,080 --> 00:05:59,759
maybe so let's get started so you will

144
00:05:59,759 --> 00:06:02,639
need Visual Studio code here uh which is

145
00:06:02,639 --> 00:06:05,600
the video uh not video the code editor

146
00:06:05,600 --> 00:06:07,759
that I'm going to use you don't need it

147
00:06:07,759 --> 00:06:10,440
you if you if you're not a beginner uh

148
00:06:10,440 --> 00:06:11,680
let's say you're coming from another

149
00:06:11,680 --> 00:06:13,639
programming language let's say python

150
00:06:13,639 --> 00:06:15,680
you can use whatever you'd like that

151
00:06:15,680 --> 00:06:17,520
that is a code editor like Vim or

152
00:06:17,520 --> 00:06:19,759
whatever but I suggest that if you're a

153
00:06:19,759 --> 00:06:21,440
beginner an absolute beginner you have

154
00:06:21,440 --> 00:06:24,759
never programmed before you um pick this

155
00:06:24,759 --> 00:06:26,160
editor so you're going to have the same

156
00:06:26,160 --> 00:06:28,520
thing as me uh vs code by the way if you

157
00:06:28,520 --> 00:06:32,160
don't know is really like the the major

158
00:06:32,160 --> 00:06:34,560
uh code editor for web developers so

159
00:06:34,560 --> 00:06:37,639
here I have a window that contains VSS

160
00:06:37,639 --> 00:06:39,880
code so to open a new project you go to

161
00:06:39,880 --> 00:06:42,560
file and then open a new folder so first

162
00:06:42,560 --> 00:06:44,199
of all I recommend that you create a

163
00:06:44,199 --> 00:06:46,919
folder and then you open that folder and

164
00:06:46,919 --> 00:06:49,319
it's going to open it up for you here an

165
00:06:49,319 --> 00:06:52,080
empty window with your empty folder by

166
00:06:52,080 --> 00:06:53,560
the way I forgot to mention but this

167
00:06:53,560 --> 00:06:55,280
tutorial assumes that you have basic

168
00:06:55,280 --> 00:06:57,120
computer skills so that means you know

169
00:06:57,120 --> 00:07:00,560
what a folder is ETC and uh yeah it

170
00:07:00,560 --> 00:07:02,800
might sound surprising but for some

171
00:07:02,800 --> 00:07:04,840
people it's not something that they know

172
00:07:04,840 --> 00:07:07,560
Etc so usually if you if you grew on the

173
00:07:07,560 --> 00:07:09,639
iPad you might not know what a file

174
00:07:09,639 --> 00:07:11,800
system is how it works Etc if you're

175
00:07:11,800 --> 00:07:15,440
used to any like real operating system

176
00:07:15,440 --> 00:07:17,479
in the sense that uh it's either Windows

177
00:07:17,479 --> 00:07:21,479
Linux or Mac OS you should be good when

178
00:07:21,479 --> 00:07:23,680
it comes to following this tutorial this

179
00:07:23,680 --> 00:07:26,240
crash course all right so what is the

180
00:07:26,240 --> 00:07:28,879
shortest path to have your JavaScript

181
00:07:28,879 --> 00:07:30,560
code running

182
00:07:30,560 --> 00:07:32,800
so I'm going to open create a file by

183
00:07:32,800 --> 00:07:34,400
clicking on that

184
00:07:34,400 --> 00:07:37,080
button and I'm going to call it main.js

185
00:07:37,080 --> 00:07:40,120
it's going to be the entry point of our

186
00:07:40,120 --> 00:07:42,199
project of where we're going to write

187
00:07:42,199 --> 00:07:44,360
our JavaScript code so by so I'm going

188
00:07:44,360 --> 00:07:45,800
to first create that file write some

189
00:07:45,800 --> 00:07:48,240
JavaScript code so here if I do you

190
00:07:48,240 --> 00:07:49,800
might assume that you write your code in

191
00:07:49,800 --> 00:07:51,800
that file and then you click on a big

192
00:07:51,800 --> 00:07:53,639
green button somewhere to run the code

193
00:07:53,639 --> 00:07:55,120
and this is not how we do it in the

194
00:07:55,120 --> 00:07:57,840
JavaScript world so how you do it is you

195
00:07:57,840 --> 00:08:01,039
need to create an HTML file uh I usually

196
00:08:01,039 --> 00:08:03,560
like to call it index.html but it

197
00:08:03,560 --> 00:08:06,080
doesn't matter you it has to be called

198
00:08:06,080 --> 00:08:09,240
HTML so usually JavaScript is paired

199
00:08:09,240 --> 00:08:11,720
with HTML and CSS which are other

200
00:08:11,720 --> 00:08:13,960
programming languages they're domain

201
00:08:13,960 --> 00:08:15,680
specific programming language that means

202
00:08:15,680 --> 00:08:18,360
that they're not a general purpose

203
00:08:18,360 --> 00:08:21,360
programming languages like JavaScript is

204
00:08:21,360 --> 00:08:23,280
so let me explain just a brief overview

205
00:08:23,280 --> 00:08:25,960
of what HTML and CSS are but I'm not

206
00:08:25,960 --> 00:08:28,199
going to teach you them I'm really not

207
00:08:28,199 --> 00:08:29,879
going to dive into it I'm just going to

208
00:08:29,879 --> 00:08:32,159
teach you the bare minimum of HTML you

209
00:08:32,159 --> 00:08:35,919
need to get JavaScript onto your web

210
00:08:35,919 --> 00:08:40,760
browser and running so index. HTML so

211
00:08:40,760 --> 00:08:44,839
HTML is a language used to make a web

212
00:08:44,839 --> 00:08:47,279
page so describe a web page you have

213
00:08:47,279 --> 00:08:50,120
many tags for example the first the

214
00:08:50,120 --> 00:08:53,160
basic tag is the HTML tag which

215
00:08:53,160 --> 00:08:55,839
signifies like that you're going to

216
00:08:55,839 --> 00:08:58,320
create a document a web page and then

217
00:08:58,320 --> 00:09:00,480
you have the body tag which is going to

218
00:09:00,480 --> 00:09:02,959
not bot tag the body tag which is going

219
00:09:02,959 --> 00:09:06,279
to contain the content of your web page

220
00:09:06,279 --> 00:09:09,399
and Etc so the body tag the way tags are

221
00:09:09,399 --> 00:09:12,440
written htmls you need those thingy and

222
00:09:12,440 --> 00:09:14,279
then you have need to have a closing tag

223
00:09:14,279 --> 00:09:17,120
an open tag and a closing tag and then

224
00:09:17,120 --> 00:09:19,200
here the body is essential and then

225
00:09:19,200 --> 00:09:21,959
within the body I'm going to put a

226
00:09:21,959 --> 00:09:26,440
script tag which is the tag used to load

227
00:09:26,440 --> 00:09:30,040
JavaScript uh yeah JavaScript files so

228
00:09:30,040 --> 00:09:31,880
the way script tags work is that you

229
00:09:31,880 --> 00:09:34,399
have the tag here and you have a source

230
00:09:34,399 --> 00:09:37,079
attribute where you define where to find

231
00:09:37,079 --> 00:09:40,079
your Javascript file here since we are

232
00:09:40,079 --> 00:09:43,160
on the same level within the folder the

233
00:09:43,160 --> 00:09:44,800
path is going to be

234
00:09:44,800 --> 00:09:47,800
main.js so you could even remove that

235
00:09:47,800 --> 00:09:49,640
and then do main.js if you were to

236
00:09:49,640 --> 00:09:51,320
create a folder within that learn JS

237
00:09:51,320 --> 00:09:53,240
folder which is the folder I created for

238
00:09:53,240 --> 00:09:55,920
this project you when you created the

239
00:09:55,920 --> 00:09:58,240
the the project you would have gone here

240
00:09:58,240 --> 00:09:59,959
maybe open a folder and then you would

241
00:09:59,959 --> 00:10:01,760
have a different name but feel free to

242
00:10:01,760 --> 00:10:04,519
name it as as you want it does not

243
00:10:04,519 --> 00:10:07,000
matter at all so if I were to create a

244
00:10:07,000 --> 00:10:09,079
folder here I'm going to call it Source

245
00:10:09,079 --> 00:10:12,240
or I'm just going to call it

246
00:10:12,760 --> 00:10:16,519
code and then I put my main dods within

247
00:10:16,519 --> 00:10:20,959
it here the path is going to be code SL

248
00:10:20,959 --> 00:10:22,360
main.

249
00:10:22,360 --> 00:10:25,480
Jazz so that's how it would work now the

250
00:10:25,480 --> 00:10:28,000
first statement we're going to write

251
00:10:28,000 --> 00:10:29,600
first code line of code we're gener

252
00:10:29,600 --> 00:10:32,360
right it's going to be

253
00:10:32,360 --> 00:10:35,800
console. log and as the name applies

254
00:10:35,800 --> 00:10:37,600
it's going to log something the thing

255
00:10:37,600 --> 00:10:40,440
you pass in within the parentheses here

256
00:10:40,440 --> 00:10:43,240
to the console the console is in your

257
00:10:43,240 --> 00:10:46,000
web browser when you press

258
00:10:46,000 --> 00:10:49,720
F12 this is the console uh so if I were

259
00:10:49,720 --> 00:10:52,200
to depending on your browser you should

260
00:10:52,200 --> 00:10:54,560
have a symbol so here you have this

261
00:10:54,560 --> 00:10:56,240
symbol console this is because I I

262
00:10:56,240 --> 00:10:59,040
really have a big uh font so usually

263
00:10:59,040 --> 00:11:01,480
would see them displayed here but since

264
00:11:01,480 --> 00:11:03,839
the I've have increased the font so much

265
00:11:03,839 --> 00:11:05,560
I need to click on the plus to actually

266
00:11:05,560 --> 00:11:08,880
see the console here so if I this is the

267
00:11:08,880 --> 00:11:10,959
console and this is where your the

268
00:11:10,959 --> 00:11:13,959
output of your JavaScript code will

269
00:11:13,959 --> 00:11:17,519
appear so now here let's say I want to

270
00:11:17,519 --> 00:11:20,399
write a message to the console uh I need

271
00:11:20,399 --> 00:11:22,480
to pass in what is called in programming

272
00:11:22,480 --> 00:11:25,600
a string a string of characters

273
00:11:25,600 --> 00:11:28,120
so bunch of characters that makes up a

274
00:11:28,120 --> 00:11:30,040
string so hello

275
00:11:30,040 --> 00:11:32,320
world is a string of characters so we

276
00:11:32,320 --> 00:11:36,360
have the character H character e l l o

277
00:11:36,360 --> 00:11:39,240
space character and then W so this is a

278
00:11:39,240 --> 00:11:41,200
character even if it's not visible to

279
00:11:41,200 --> 00:11:44,720
the eye uh it is a character and W etc

280
00:11:44,720 --> 00:11:46,519
etc and it needs to be put within

281
00:11:46,519 --> 00:11:50,480
quotation marks so now everything should

282
00:11:50,480 --> 00:11:52,600
be all right but we still don't have a

283
00:11:52,600 --> 00:11:56,639
way to run the code so the most the

284
00:11:56,639 --> 00:11:58,800
basic way I would say is you would just

285
00:11:58,800 --> 00:12:01,120
open this in a web browser and you would

286
00:12:01,120 --> 00:12:03,760
get your your the result but usually the

287
00:12:03,760 --> 00:12:06,360
preferred preferred approach is to have

288
00:12:06,360 --> 00:12:08,880
a local web server that runs from your

289
00:12:08,880 --> 00:12:12,160
computer that is going to run the the

290
00:12:12,160 --> 00:12:15,199
code and display the run the web page uh

291
00:12:15,199 --> 00:12:17,000
this local server is usually called

292
00:12:17,000 --> 00:12:19,680
Local Host and there is there are many

293
00:12:19,680 --> 00:12:22,680
ways to run one but the simplest way if

294
00:12:22,680 --> 00:12:24,639
you're using vs code is to go to the

295
00:12:24,639 --> 00:12:28,480
extension Marketplace type in Live

296
00:12:28,480 --> 00:12:30,000
server

297
00:12:30,000 --> 00:12:31,959
and you're going to get this extension

298
00:12:31,959 --> 00:12:34,240
which as the name here launch a

299
00:12:34,240 --> 00:12:36,760
development local server so you cannot

300
00:12:36,760 --> 00:12:40,240
really see here so install it here you

301
00:12:40,240 --> 00:12:42,920
should it should be written install but

302
00:12:42,920 --> 00:12:45,199
since I have already installed it it's

303
00:12:45,199 --> 00:12:47,920
going to right uninstalled so install it

304
00:12:47,920 --> 00:12:50,880
once this is installed go back to your

305
00:12:50,880 --> 00:12:54,199
project and then here below you should

306
00:12:54,199 --> 00:12:57,360
see a go live button so click to run a

307
00:12:57,360 --> 00:12:59,399
live server if you click that it's going

308
00:12:59,399 --> 00:13:02,440
to open up a window now I'm just going

309
00:13:02,440 --> 00:13:03,279
to

310
00:13:03,279 --> 00:13:06,040
copy the

311
00:13:06,040 --> 00:13:08,440
address because I'm going to open it in

312
00:13:08,440 --> 00:13:12,120
this page so here we go so by the way

313
00:13:12,120 --> 00:13:13,839
look at the description to have all the

314
00:13:13,839 --> 00:13:16,079
links you need for example how where to

315
00:13:16,079 --> 00:13:19,519
install VSS code Etc so here is the the

316
00:13:19,519 --> 00:13:21,360
the Local Host server the address that

317
00:13:21,360 --> 00:13:22,519
was given to

318
00:13:22,519 --> 00:13:27,079
me and then click on that so by default

319
00:13:27,079 --> 00:13:29,160
uh live server should open into your

320
00:13:29,160 --> 00:13:30,480
default

321
00:13:30,480 --> 00:13:32,680
browser but here I'm using a different

322
00:13:32,680 --> 00:13:34,399
browser for recording this tutorial

323
00:13:34,399 --> 00:13:37,560
that's why I copied and pasted manually

324
00:13:37,560 --> 00:13:40,519
the address here now here we have a

325
00:13:40,519 --> 00:13:44,480
blank page because I as I said uh HTML

326
00:13:44,480 --> 00:13:47,079
is actually the language used to write

327
00:13:47,079 --> 00:13:49,680
the content of a web page but JavaScript

328
00:13:49,680 --> 00:13:52,639
is a language used to have animations

329
00:13:52,639 --> 00:13:54,920
and logic Etc so initially when

330
00:13:54,920 --> 00:13:57,160
JavaScript was created it would run only

331
00:13:57,160 --> 00:14:00,199
on web page like that as supporting

332
00:14:00,199 --> 00:14:02,199
character I would say just to add

333
00:14:02,199 --> 00:14:05,279
animations to HTML pages so the the

334
00:14:05,279 --> 00:14:07,759
actual web pages as the language evolve

335
00:14:07,759 --> 00:14:09,440
and you could do more stuff with it it

336
00:14:09,440 --> 00:14:11,920
is now possible to make games with it so

337
00:14:11,920 --> 00:14:14,079
here we go so now I'm going to open up

338
00:14:14,079 --> 00:14:17,360
the F12 the console tab you can also

339
00:14:17,360 --> 00:14:19,560
open this console tab using I think

340
00:14:19,560 --> 00:14:21,680
control uh command shift I if you're on

341
00:14:21,680 --> 00:14:24,920
Mac OS but it's F12 on Windows and you

342
00:14:24,920 --> 00:14:27,120
can see we can have our hello world

343
00:14:27,120 --> 00:14:29,440
output message appear here this is the

344
00:14:29,440 --> 00:14:32,040
console so we write our code in our

345
00:14:32,040 --> 00:14:35,279
main.js file here and then it's going to

346
00:14:35,279 --> 00:14:37,920
appear so if I instead of hello world I

347
00:14:37,920 --> 00:14:41,000
say h Hello ogs

348
00:14:41,000 --> 00:14:44,600
Legend and you can see that it updates

349
00:14:44,600 --> 00:14:47,040
here so now we're ready we have our

350
00:14:47,040 --> 00:14:48,639
programming our basic programming

351
00:14:48,639 --> 00:14:50,600
environment ready later on we're going

352
00:14:50,600 --> 00:14:52,480
to see more advanced tools and a

353
00:14:52,480 --> 00:14:56,160
different setup that is more um closer

354
00:14:56,160 --> 00:14:58,120
to what is actually what what's used

355
00:14:58,120 --> 00:15:00,519
professionally all right all right so

356
00:15:00,519 --> 00:15:03,440
now let's start actually learning The

357
00:15:03,440 --> 00:15:06,279
Core Concepts of programming in

358
00:15:06,279 --> 00:15:08,560
JavaScript so the first core concept I

359
00:15:08,560 --> 00:15:10,880
want to mention it's the core concept

360
00:15:10,880 --> 00:15:14,680
zero I would say is how code is executed

361
00:15:14,680 --> 00:15:16,959
so I'm assuming that you have zero

362
00:15:16,959 --> 00:15:19,079
knowledge of programming and then that

363
00:15:19,079 --> 00:15:22,240
means like code is usually run as a like

364
00:15:22,240 --> 00:15:25,360
a recipe imagine it as a recipe of steps

365
00:15:25,360 --> 00:15:27,519
you need to follow and those steps are

366
00:15:27,519 --> 00:15:29,279
extremely detailed because because if

367
00:15:29,279 --> 00:15:31,880
you do not detail those steps the

368
00:15:31,880 --> 00:15:33,720
computer will not know what to do it's

369
00:15:33,720 --> 00:15:36,639
not like a human recipe for cooking

370
00:15:36,639 --> 00:15:38,839
something where the instructions are

371
00:15:38,839 --> 00:15:42,000
mostly General and the human can fill in

372
00:15:42,000 --> 00:15:44,040
the gaps but with programming it's

373
00:15:44,040 --> 00:15:47,240
different so code usually runs

374
00:15:47,240 --> 00:15:49,480
sequentially so first line and then

375
00:15:49,480 --> 00:15:51,440
second line third line

376
00:15:51,440 --> 00:15:54,680
Etc so now that's like that's the basic

377
00:15:54,680 --> 00:15:56,680
concept comes at zero but the actual

378
00:15:56,680 --> 00:15:58,720
first concept we're going to talk about

379
00:15:58,720 --> 00:16:02,000
is is variables and constants so what is

380
00:16:02,000 --> 00:16:03,680
a variable and what is a constant so a

381
00:16:03,680 --> 00:16:06,360
variable you can imagine it as first of

382
00:16:06,360 --> 00:16:09,440
all your computer has memory imagine

383
00:16:09,440 --> 00:16:13,160
Slots of where you can place data a

384
00:16:13,160 --> 00:16:16,199
variable is you putting a sticker on it

385
00:16:16,199 --> 00:16:20,120
with a name let's say my

386
00:16:20,120 --> 00:16:23,920
variable and then storing into that cell

387
00:16:23,920 --> 00:16:26,399
so imagine you have cells that could

388
00:16:26,399 --> 00:16:28,680
contain data in your computer so it's

389
00:16:28,680 --> 00:16:30,199
basic basically a representation of your

390
00:16:30,199 --> 00:16:32,319
memory and then you pick one of those

391
00:16:32,319 --> 00:16:35,639
boxes or those slots you put a name it

392
00:16:35,639 --> 00:16:38,079
on it to know basically to be able to

393
00:16:38,079 --> 00:16:40,000
tell it apart from the other memory

394
00:16:40,000 --> 00:16:43,560
slots and then you put data in it so the

395
00:16:43,560 --> 00:16:46,199
type of data you can put inside of a

396
00:16:46,199 --> 00:16:50,440
variable are many you can put numbers in

397
00:16:50,440 --> 00:16:53,040
JavaScript so that's the number type the

398
00:16:53,040 --> 00:16:54,639
data type so you have data types those

399
00:16:54,639 --> 00:16:56,759
are called data types for example I I

400
00:16:56,759 --> 00:16:59,839
would put four inside of the slots

401
00:16:59,839 --> 00:17:03,600
of the slot my variable and if I do this

402
00:17:03,600 --> 00:17:06,600
and I again use the console.log message

403
00:17:06,600 --> 00:17:09,640
and pass in the name of the variable my

404
00:17:09,640 --> 00:17:12,160
variable it's going to print out the

405
00:17:12,160 --> 00:17:14,199
content of that so if I look at the

406
00:17:14,199 --> 00:17:16,360
results it's going to print

407
00:17:16,360 --> 00:17:19,520
four at the console in the

408
00:17:19,520 --> 00:17:22,559
console all right now the way you

409
00:17:22,559 --> 00:17:25,079
declare a variable so you create a

410
00:17:25,079 --> 00:17:27,480
variable is you need to use the let

411
00:17:27,480 --> 00:17:29,880
keyword so you usually key important

412
00:17:29,880 --> 00:17:33,840
keywords in JavaScript are in blue like

413
00:17:33,840 --> 00:17:36,039
that if you're using VSS code without

414
00:17:36,039 --> 00:17:39,360
any themes but anyway let is how you

415
00:17:39,360 --> 00:17:41,440
declare a variable once you have

416
00:17:41,440 --> 00:17:44,640
declared a variable you can call it

417
00:17:44,640 --> 00:17:47,000
elsewhere but and you can even modify

418
00:17:47,000 --> 00:17:50,679
its content so if I have my

419
00:17:50,679 --> 00:17:53,760
variable and put five

420
00:17:53,760 --> 00:17:56,120
instead then

421
00:17:56,120 --> 00:17:58,440
console.log my variable you can see the

422
00:17:58,440 --> 00:18:01,240
content is going to be different if I go

423
00:18:01,240 --> 00:18:04,559
here first it was four at line two and

424
00:18:04,559 --> 00:18:06,480
then when the computer arrives here it

425
00:18:06,480 --> 00:18:09,840
modifies the content of the my my

426
00:18:09,840 --> 00:18:13,039
variable and then we console log again

427
00:18:13,039 --> 00:18:16,480
at line four and the content is now

428
00:18:16,480 --> 00:18:19,360
different okay now there's a bunch of

429
00:18:19,360 --> 00:18:22,240
questions that you might have is why the

430
00:18:22,240 --> 00:18:25,520
name my variable so here when you

431
00:18:25,520 --> 00:18:27,600
declare a variable you can basically

432
00:18:27,600 --> 00:18:29,360
choose whatever you want as a name there

433
00:18:29,360 --> 00:18:32,120
are certain symbols that are not allowed

434
00:18:32,120 --> 00:18:34,679
for example you cannot use numbers to

435
00:18:34,679 --> 00:18:36,480
name a variable so you will have

436
00:18:36,480 --> 00:18:38,360
squiggly lines to tell you that it's not

437
00:18:38,360 --> 00:18:41,840
allowed you cannot use dashes to name

438
00:18:41,840 --> 00:18:42,720
your

439
00:18:42,720 --> 00:18:46,320
variable uh however a letters from A to

440
00:18:46,320 --> 00:18:50,280
Z you can actually use a z l so you can

441
00:18:50,280 --> 00:18:52,520
use numbers I think

442
00:18:52,520 --> 00:18:56,960
within uh mixed in with letters but

443
00:18:56,960 --> 00:18:59,240
usually I prefer to keep

444
00:18:59,240 --> 00:19:01,919
keep my varibles um actually can you

445
00:19:01,919 --> 00:19:04,120
actually do that I I never almost never

446
00:19:04,120 --> 00:19:07,240
do this so let's say z0 as the name of

447
00:19:07,240 --> 00:19:12,000
the variable and then here and then so

448
00:19:12,000 --> 00:19:13,320
I'm just going to remove it and see if

449
00:19:13,320 --> 00:19:15,320
it works it should work but I'm just

450
00:19:15,320 --> 00:19:19,080
making sure yeah so basically there are

451
00:19:19,080 --> 00:19:21,320
certain names you cannot pick as well

452
00:19:21,320 --> 00:19:23,799
you cannot call a variable letl because

453
00:19:23,799 --> 00:19:26,240
this is a reserved keyword so those

454
00:19:26,240 --> 00:19:27,919
reserved keyword in the JavaScript

455
00:19:27,919 --> 00:19:31,000
language cannot be used to declare

456
00:19:31,000 --> 00:19:34,320
variables and as you saw I wrote my

457
00:19:34,320 --> 00:19:36,000
variable this is a convention that is

458
00:19:36,000 --> 00:19:39,600
used in JavaScript code where when you

459
00:19:39,600 --> 00:19:41,640
name a variable if you have multiple

460
00:19:41,640 --> 00:19:43,960
words that comprise this name the name

461
00:19:43,960 --> 00:19:47,080
of that variable then the the the first

462
00:19:47,080 --> 00:19:51,919
letter of the second word used used in

463
00:19:51,919 --> 00:19:54,000
that variable name always start with a

464
00:19:54,000 --> 00:19:57,320
capital so for example just to show you

465
00:19:57,320 --> 00:19:59,440
if I call my

466
00:19:59,440 --> 00:20:02,320
variable name then I can just leave it

467
00:20:02,320 --> 00:20:05,600
like that if I call it my

468
00:20:05,600 --> 00:20:09,400
name I need to put the capital here it's

469
00:20:09,400 --> 00:20:11,520
it's not the actual rules that means if

470
00:20:11,520 --> 00:20:14,280
you don't respect this the code the code

471
00:20:14,280 --> 00:20:16,679
will still run but it it but it's

472
00:20:16,679 --> 00:20:18,280
against the convention which is called

473
00:20:18,280 --> 00:20:21,320
camel case because it looks like a camel

474
00:20:21,320 --> 00:20:24,520
you know so for example my

475
00:20:24,520 --> 00:20:29,600
full name so capital here Capital here

476
00:20:29,600 --> 00:20:33,360
like it it does a camel thing camel hump

477
00:20:33,360 --> 00:20:35,679
I guess that's the name in English for

478
00:20:35,679 --> 00:20:39,840
the yeah Ty animal the the thing behind

479
00:20:39,840 --> 00:20:42,679
anyway so that's uh yep that's how you

480
00:20:42,679 --> 00:20:45,480
declare variables so now it we saw that

481
00:20:45,480 --> 00:20:48,760
you could put um you could put numbers

482
00:20:48,760 --> 00:20:51,280
in it but you can actually put text a

483
00:20:51,280 --> 00:20:53,360
string of characters as I said strings

484
00:20:53,360 --> 00:20:57,120
we call them here I can put a name for

485
00:20:57,120 --> 00:20:59,480
example

486
00:20:59,480 --> 00:21:01,919
and then if you print that out so be

487
00:21:01,919 --> 00:21:03,880
careful when you write your code to only

488
00:21:03,880 --> 00:21:07,679
put like defined variables not uh random

489
00:21:07,679 --> 00:21:10,080
names and then here if I look at the

490
00:21:10,080 --> 00:21:12,559
result you can have like you can

491
00:21:12,559 --> 00:21:15,720
see all right so now you know how to

492
00:21:15,720 --> 00:21:18,120
declare a variable but you can do much

493
00:21:18,120 --> 00:21:19,720
more than that than just declaring

494
00:21:19,720 --> 00:21:22,000
variables you can also declare constants

495
00:21:22,000 --> 00:21:25,480
so a constant is like a variable but the

496
00:21:25,480 --> 00:21:27,320
content of it will not

497
00:21:27,320 --> 00:21:30,360
change and there are some Nuance to it

498
00:21:30,360 --> 00:21:33,360
later on but for now just keep that in

499
00:21:33,360 --> 00:21:37,480
mind so for example I want to have as a

500
00:21:37,480 --> 00:21:39,000
constant

501
00:21:39,000 --> 00:21:43,120
um let's say the width the width of the

502
00:21:43,120 --> 00:21:44,799
screen for example I would call it

503
00:21:44,799 --> 00:21:48,480
screen width screen

504
00:21:48,480 --> 00:21:52,640
width and then let's say 1080 this is a

505
00:21:52,640 --> 00:21:54,679
concept it's if you don't want something

506
00:21:54,679 --> 00:21:57,240
to change means if I try to change the

507
00:21:57,240 --> 00:22:00,200
value scre with and then put something

508
00:22:00,200 --> 00:22:03,080
else let's say

509
00:22:04,360 --> 00:22:08,480
720 then if you look let me remove that

510
00:22:08,480 --> 00:22:10,799
variable if you look at the console it's

511
00:22:10,799 --> 00:22:12,480
not going to let me and you're going to

512
00:22:12,480 --> 00:22:15,200
get an uncut type error assignment to

513
00:22:15,200 --> 00:22:17,039
constant variable which means that

514
00:22:17,039 --> 00:22:19,960
you're not allowed to change the content

515
00:22:19,960 --> 00:22:24,600
of a constant makes sense right so this

516
00:22:24,600 --> 00:22:28,600
so the general rule of thumb is that if

517
00:22:28,600 --> 00:22:31,720
you're using a if you're sure that

518
00:22:31,720 --> 00:22:33,559
you're not going to change so by default

519
00:22:33,559 --> 00:22:35,679
what I do is that I always declare

520
00:22:35,679 --> 00:22:38,400
everything as a constant only when I

521
00:22:38,400 --> 00:22:40,240
know that I'm going to need to modify

522
00:22:40,240 --> 00:22:42,720
the content itself of the

523
00:22:42,720 --> 00:22:46,000
variable so the default for me is Con I

524
00:22:46,000 --> 00:22:49,679
always use const unless I need to change

525
00:22:49,679 --> 00:22:52,880
the the content of the the variable the

526
00:22:52,880 --> 00:22:55,799
the the slot the the cell then I used

527
00:22:55,799 --> 00:22:58,960
let to be able to do so

528
00:22:58,960 --> 00:23:03,480
all right hope this was clear now let's

529
00:23:03,480 --> 00:23:06,559
try to write something more useful so

530
00:23:06,559 --> 00:23:09,559
let's say you have a

531
00:23:09,559 --> 00:23:12,880
constant called okay yeah I have a

532
00:23:12,880 --> 00:23:16,799
constant called number one and it's

533
00:23:16,799 --> 00:23:19,559
going to hold five by the way when you

534
00:23:19,559 --> 00:23:22,520
see me adding a semicolon this is

535
00:23:22,520 --> 00:23:24,840
a this is something in JavaScript and

536
00:23:24,840 --> 00:23:27,400
even in Java where you each time you

537
00:23:27,400 --> 00:23:31,039
finish a line of code you write this uh

538
00:23:31,039 --> 00:23:33,080
after its statement because there are

539
00:23:33,080 --> 00:23:36,000
some other types of constructs in

540
00:23:36,000 --> 00:23:38,960
programming that don't require the

541
00:23:38,960 --> 00:23:40,960
semicolon but I usually prefer not to

542
00:23:40,960 --> 00:23:42,720
use it because most of the it's not

543
00:23:42,720 --> 00:23:45,720
mandatory most of the time so I usually

544
00:23:45,720 --> 00:23:47,440
do this but you know just so that you

545
00:23:47,440 --> 00:23:49,679
don't get confused uh if you try to use

546
00:23:49,679 --> 00:23:51,840
other resources I'm going to from now on

547
00:23:51,840 --> 00:23:54,520
always write the semicolon when it's

548
00:23:54,520 --> 00:23:57,919
needed so const number one let's have an

549
00:23:57,919 --> 00:24:00,080
a second constant number two let's say

550
00:24:00,080 --> 00:24:03,679
four and then you can do math so let's

551
00:24:03,679 --> 00:24:04,960
have another

552
00:24:04,960 --> 00:24:07,279
constant and then we can have number

553
00:24:07,279 --> 00:24:08,960
three or we can call it

554
00:24:08,960 --> 00:24:11,799
result and it's going to be number one

555
00:24:11,799 --> 00:24:14,760
plus number

556
00:24:14,760 --> 00:24:17,799
two so this is basic arithmetic so it's

557
00:24:17,799 --> 00:24:20,640
an addition and that means result should

558
00:24:20,640 --> 00:24:23,200
contain

559
00:24:23,200 --> 00:24:26,559
the nine basically so if I do console

560
00:24:26,559 --> 00:24:29,799
log and I want to print out the result

561
00:24:29,799 --> 00:24:31,080
and then look at the result here it's

562
00:24:31,080 --> 00:24:33,799
going to be nine now the other way you

563
00:24:33,799 --> 00:24:36,399
can do multiplication so to multip

564
00:24:36,399 --> 00:24:39,120
multiply in JavaScript you use the dot

565
00:24:39,120 --> 00:24:42,880
um the star symbol not an X symbol but

566
00:24:42,880 --> 00:24:46,480
this one so now this should be

567
00:24:46,480 --> 00:24:50,279
20 and it is and then you can divide

568
00:24:50,279 --> 00:24:53,200
here by using the slash so those

569
00:24:53,200 --> 00:24:55,320
operations are the same as math but the

570
00:24:55,320 --> 00:24:56,960
symbols used are different so you might

571
00:24:56,960 --> 00:24:58,760
not be used to them that's why I'm

572
00:24:58,760 --> 00:25:02,279
telling you that like which is which

573
00:25:02,279 --> 00:25:04,240
here

574
00:25:04,240 --> 00:25:09,440
1.25 and then I think here uh that's um

575
00:25:09,440 --> 00:25:11,880
yeah for now let's those are the basic

576
00:25:11,880 --> 00:25:13,799
operations you can have exponents as

577
00:25:13,799 --> 00:25:17,679
well so for exponents you use the this I

578
00:25:17,679 --> 00:25:20,760
don't this symbol I don't know how it's

579
00:25:20,760 --> 00:25:25,240
called so if I look at the result one so

580
00:25:25,240 --> 00:25:27,279
uh wait a minute that's not that's not

581
00:25:27,279 --> 00:25:30,600
right I think it's it's two two dot like

582
00:25:30,600 --> 00:25:33,320
that yeah that's how you do expon

583
00:25:33,320 --> 00:25:37,679
exponents so if you have let's say 2

584
00:25:37,679 --> 00:25:39,399
exponent

585
00:25:39,399 --> 00:25:43,799
2 2 to the^ of two it's four uh the

586
00:25:43,799 --> 00:25:45,760
operation that I just did this is

587
00:25:45,760 --> 00:25:48,360
something different and is I think it's

588
00:25:48,360 --> 00:25:50,799
something different uh actually don't

589
00:25:50,799 --> 00:25:54,080
remember but there's bitwise operations

590
00:25:54,080 --> 00:25:56,559
but for now I don't think it's uh really

591
00:25:56,559 --> 00:26:00,200
relevant for game de JavaScript for now

592
00:26:00,200 --> 00:26:01,320
all

593
00:26:01,320 --> 00:26:06,000
right uh okay so now we have you have

594
00:26:06,000 --> 00:26:08,120
seen as a first core concept how to

595
00:26:08,120 --> 00:26:09,039
declare

596
00:26:09,039 --> 00:26:11,200
variables and how to change the content

597
00:26:11,200 --> 00:26:12,960
of a variable but you cannot do that for

598
00:26:12,960 --> 00:26:15,000
constants and that you can put numbers

599
00:26:15,000 --> 00:26:18,960
and strings in them now what happens if

600
00:26:18,960 --> 00:26:23,000
you have let's say a constant called uh

601
00:26:23,000 --> 00:26:27,000
text and it has a string called hello

602
00:26:27,000 --> 00:26:32,600
world and then you have a number let's

603
00:26:32,600 --> 00:26:36,039
say four or number one I we going to

604
00:26:36,039 --> 00:26:38,440
say maybe just number but I think number

605
00:26:38,440 --> 00:26:40,960
is a reserved keyword maybe it's not and

606
00:26:40,960 --> 00:26:42,799
what happens if I want the result so by

607
00:26:42,799 --> 00:26:45,440
the way you don't have to store the the

608
00:26:45,440 --> 00:26:47,399
the result of the an operation inside of

609
00:26:47,399 --> 00:26:49,520
a constant or variable you can just do

610
00:26:49,520 --> 00:26:53,240
it within the parenthesis here so text

611
00:26:53,240 --> 00:26:56,760
plus number this in any other language

612
00:26:56,760 --> 00:26:59,279
with a sensible type system

613
00:26:59,279 --> 00:27:02,000
uh this should fail but in JavaScript it

614
00:27:02,000 --> 00:27:05,120
doesn't it actually tries to compute it

615
00:27:05,120 --> 00:27:08,960
and here it um it will do something

616
00:27:08,960 --> 00:27:11,360
called concatenation so it's going to

617
00:27:11,360 --> 00:27:14,360
concatenate for with hello world what

618
00:27:14,360 --> 00:27:17,200
does concatenate means is that you if

619
00:27:17,200 --> 00:27:19,480
you want to join text together join two

620
00:27:19,480 --> 00:27:20,880
strings of character together you

621
00:27:20,880 --> 00:27:23,760
usually use the plus sign for it so that

622
00:27:23,760 --> 00:27:25,840
might be confusing because this is uh

623
00:27:25,840 --> 00:27:28,640
usually understood as adding something

624
00:27:28,640 --> 00:27:31,120
with something but adding text with text

625
00:27:31,120 --> 00:27:34,440
how does that work so if I were to have

626
00:27:34,440 --> 00:27:39,799
hello world and then I would say

627
00:27:39,799 --> 00:27:44,279
hello world 2 you should have as the

628
00:27:44,279 --> 00:27:47,679
result in a console one single string

629
00:27:47,679 --> 00:27:50,519
with both of them so this how the

630
00:27:50,519 --> 00:27:52,799
concatenation operator which use the

631
00:27:52,799 --> 00:27:55,320
same symbol is

632
00:27:55,320 --> 00:27:57,799
plus now the reason I said that it

633
00:27:57,799 --> 00:28:01,799
should fail when a number and a a string

634
00:28:01,799 --> 00:28:04,320
of character are added together is is

635
00:28:04,320 --> 00:28:06,880
that it makes no sense you need to First

636
00:28:06,880 --> 00:28:09,039
in for example python you would first

637
00:28:09,039 --> 00:28:12,840
convert this into a character and then

638
00:28:12,840 --> 00:28:15,440
you would concatenate it but JavaScript

639
00:28:15,440 --> 00:28:17,399
doesn't have this thing and it's

640
00:28:17,399 --> 00:28:19,679
something that it has been CR criticized

641
00:28:19,679 --> 00:28:22,840
a lot uh so just keep that in mind to be

642
00:28:22,840 --> 00:28:25,200
careful with those operations so don't

643
00:28:25,200 --> 00:28:27,159
do that or if you're not if you don't

644
00:28:27,159 --> 00:28:29,159
know what you're doing

645
00:28:29,159 --> 00:28:32,000
so yeah this is cool and all but it's

646
00:28:32,000 --> 00:28:35,240
time to actually learn the second I

647
00:28:35,240 --> 00:28:38,760
would say or third core concept which

648
00:28:38,760 --> 00:28:41,600
are conditional statements and this is

649
00:28:41,600 --> 00:28:44,200
how like a program will truly like

650
00:28:44,200 --> 00:28:46,320
become alive in the in the sense that

651
00:28:46,320 --> 00:28:47,640
it's actually going to do a very

652
00:28:47,640 --> 00:28:51,279
interesting things so we have a few

653
00:28:51,279 --> 00:28:53,559
constructs we can use the main one is

654
00:28:53,559 --> 00:28:55,000
the if

655
00:28:55,000 --> 00:28:58,320
statement so an if statement allow you

656
00:28:58,320 --> 00:29:00,960
to have conditional code code that will

657
00:29:00,960 --> 00:29:03,760
execute only in certain situations for

658
00:29:03,760 --> 00:29:05,720
example let's say I'm going to have a

659
00:29:05,720 --> 00:29:08,840
variable this time and this variable is

660
00:29:08,840 --> 00:29:13,840
going to be called um is

661
00:29:13,840 --> 00:29:17,200
true as just a name or maybe I'm going

662
00:29:17,200 --> 00:29:18,960
to call it

663
00:29:18,960 --> 00:29:21,640
execute one other type I follow I forgot

664
00:29:21,640 --> 00:29:24,039
to to mention is that you have something

665
00:29:24,039 --> 00:29:27,240
called a Boolean type so Boolean can be

666
00:29:27,240 --> 00:29:30,080
either true or false so here you could

667
00:29:30,080 --> 00:29:33,240
have a true uh statement so true means

668
00:29:33,240 --> 00:29:35,760
that it is true and the reason why the

669
00:29:35,760 --> 00:29:38,440
true and false thing is useful here is

670
00:29:38,440 --> 00:29:40,720
because it allows us to have conditional

671
00:29:40,720 --> 00:29:42,799
logic conditional logic is code that

672
00:29:42,799 --> 00:29:45,159
will execute only under certain

673
00:29:45,159 --> 00:29:47,519
circumstances or do something else

674
00:29:47,519 --> 00:29:50,000
otherwise so here in the if statement I

675
00:29:50,000 --> 00:29:53,240
can have the execute pass in the execute

676
00:29:53,240 --> 00:29:58,080
variable and now if execute is true it

677
00:29:58,080 --> 00:30:00,399
going to run what's within the brackets

678
00:30:00,399 --> 00:30:02,840
so here I can have a console.log

679
00:30:02,840 --> 00:30:05,799
statement

680
00:30:06,480 --> 00:30:10,720
console.log and I could say

681
00:30:11,640 --> 00:30:16,120
hello and now if I look at the execution

682
00:30:16,120 --> 00:30:18,159
the the result of the code you can see

683
00:30:18,159 --> 00:30:20,080
hello

684
00:30:20,080 --> 00:30:23,840
here all right now the issue here is

685
00:30:23,840 --> 00:30:26,440
that let's have something more complex

686
00:30:26,440 --> 00:30:30,039
so what if EX is false first of all you

687
00:30:30,039 --> 00:30:32,399
put false in nothing will

688
00:30:32,399 --> 00:30:36,559
happen so nothing will happen nothing is

689
00:30:36,559 --> 00:30:41,120
happening now you can use this to have

690
00:30:41,120 --> 00:30:43,480
more complex code so let's

691
00:30:43,480 --> 00:30:46,360
say if let's create two constants let's

692
00:30:46,360 --> 00:30:50,760
say if the age let's say

693
00:30:50,760 --> 00:30:58,799
25 and the height is 182

694
00:30:58,799 --> 00:31:00,880
so you can have you could have an

695
00:31:00,880 --> 00:31:03,360
expression execute and then instead of

696
00:31:03,360 --> 00:31:05,480
passing in a Boolean directly you could

697
00:31:05,480 --> 00:31:07,799
do F

698
00:31:07,799 --> 00:31:14,000
age is superior to or equal let's say

699
00:31:14,000 --> 00:31:15,360
I'm going to teach you those symbols

700
00:31:15,360 --> 00:31:17,159
they on this is like this is what we

701
00:31:17,159 --> 00:31:21,039
call Boolean like comparison Expressions

702
00:31:21,039 --> 00:31:22,559
I don't know if it's the actual term I

703
00:31:22,559 --> 00:31:26,120
forgot but anyway so if the age is above

704
00:31:26,120 --> 00:31:30,080
18 then it's is going to execute

705
00:31:30,080 --> 00:31:33,840
here so you're an

706
00:31:33,840 --> 00:31:38,720
adult for example and then here if you

707
00:31:38,720 --> 00:31:43,240
put some code outside you're considered

708
00:31:43,240 --> 00:31:47,320
a minor all right so here we go and now

709
00:31:47,320 --> 00:31:50,360
if I run the code you can see though

710
00:31:50,360 --> 00:31:53,840
both of them has executed because the

711
00:31:53,840 --> 00:31:57,600
age here is actually above 18 so if you

712
00:31:57,600 --> 00:32:00,519
want to uh only run this and not this

713
00:32:00,519 --> 00:32:02,480
you would use an extension called the

714
00:32:02,480 --> 00:32:05,559
else statement the else statement what

715
00:32:05,559 --> 00:32:06,200
it

716
00:32:06,200 --> 00:32:09,399
does is that if this condition is not

717
00:32:09,399 --> 00:32:11,960
true it's going to run what's within I

718
00:32:11,960 --> 00:32:13,840
mostly prefer not to use it so I'm going

719
00:32:13,840 --> 00:32:16,559
to show you the alternative uh right

720
00:32:16,559 --> 00:32:19,519
after so here we can can see because the

721
00:32:19,519 --> 00:32:23,360
age constant was set to 25 manually at

722
00:32:23,360 --> 00:32:25,480
declaration that's why I can you can

723
00:32:25,480 --> 00:32:28,000
modify by the way a constant you can mod

724
00:32:28,000 --> 00:32:30,320
ify it manually here what it prevents

725
00:32:30,320 --> 00:32:32,440
you to do is to modify it later on like

726
00:32:32,440 --> 00:32:36,559
age set a new age just make sure I yeah

727
00:32:36,559 --> 00:32:38,919
this is UN understood so I said I would

728
00:32:38,919 --> 00:32:42,320
show you an alternative to using an lse

729
00:32:42,320 --> 00:32:46,000
statement what I prefer to do is to have

730
00:32:46,000 --> 00:32:48,440
H actually I cannot do it here so I'll

731
00:32:48,440 --> 00:32:51,279
wait before I before showing you because

732
00:32:51,279 --> 00:32:52,840
there's another concept that you don't

733
00:32:52,840 --> 00:32:54,639
have yet so you will not understand the

734
00:32:54,639 --> 00:32:58,120
trick so basically for now else if you

735
00:32:58,120 --> 00:33:00,039
don't want so if you want to have more

736
00:33:00,039 --> 00:33:02,880
than one condition though for example if

737
00:33:02,880 --> 00:33:05,960
you are here and if and then you can

738
00:33:05,960 --> 00:33:07,600
have an else

739
00:33:07,600 --> 00:33:10,399
if and then else if you can pass in

740
00:33:10,399 --> 00:33:13,720
another condition and then have it

741
00:33:13,720 --> 00:33:18,519
here so y so that's the the proper

742
00:33:18,519 --> 00:33:20,919
syntax and then you pass in the the

743
00:33:20,919 --> 00:33:22,799
condition here for example here instead

744
00:33:22,799 --> 00:33:24,840
of putting this inside of a variable

745
00:33:24,840 --> 00:33:26,679
which there is no need to it it was just

746
00:33:26,679 --> 00:33:28,880
to show you you can put the expression

747
00:33:28,880 --> 00:33:31,200
within the F statement it's usually what

748
00:33:31,200 --> 00:33:35,080
happens in an actual code so if age is

749
00:33:35,080 --> 00:33:38,760
superior to 18 or if age is equal to

750
00:33:38,760 --> 00:33:42,320
18 uh equal equal but uh to 18 and then

751
00:33:42,320 --> 00:33:44,399
you move here to so in certain

752
00:33:44,399 --> 00:33:47,480
situations for example the if statement

753
00:33:47,480 --> 00:33:52,880
you don't add the semic colum

754
00:33:54,159 --> 00:33:56,880
thingy so that's why I I usually prefer

755
00:33:56,880 --> 00:33:58,320
not to use it but anyway I'm going to

756
00:33:58,320 --> 00:34:01,880
use it so here you have first if the age

757
00:34:01,880 --> 00:34:03,679
is above 18 so I'm going to remove this

758
00:34:03,679 --> 00:34:05,840
this no longer valid expression

759
00:34:05,840 --> 00:34:09,040
JavaScript expression so if the age is

760
00:34:09,040 --> 00:34:10,079
superior to

761
00:34:10,079 --> 00:34:14,599
18 then it's going to print that if AG

762
00:34:14,599 --> 00:34:16,560
is equal equal to 18 you could have

763
00:34:16,560 --> 00:34:20,560
another message I say console. log you

764
00:34:20,560 --> 00:34:24,560
just turn into an

765
00:34:24,560 --> 00:34:27,839
adult legally

766
00:34:27,839 --> 00:34:29,119
let's

767
00:34:29,119 --> 00:34:34,280
go and now um if I go

768
00:34:34,280 --> 00:34:37,040
here and modify the the content let's

769
00:34:37,040 --> 00:34:38,079
say

770
00:34:38,079 --> 00:34:41,159
18 you're going to see that you're going

771
00:34:41,159 --> 00:34:43,159
to have a different message and you can

772
00:34:43,159 --> 00:34:45,119
actually start making games like that

773
00:34:45,119 --> 00:34:48,280
where you would change the depending on

774
00:34:48,280 --> 00:34:51,359
what the player does you have different

775
00:34:51,359 --> 00:34:53,800
constants or variables and then you show

776
00:34:53,800 --> 00:34:57,000
different things but this is the basic

777
00:34:57,000 --> 00:34:59,640
of an if if statement now here equal

778
00:34:59,640 --> 00:35:02,119
equal that might sound strange so equal

779
00:35:02,119 --> 00:35:04,839
equal means that since in JavaScript you

780
00:35:04,839 --> 00:35:07,480
we use the equal sign to declare a

781
00:35:07,480 --> 00:35:12,760
variable or store in it some value um we

782
00:35:12,760 --> 00:35:14,440
need a different symbol in order to

783
00:35:14,440 --> 00:35:17,240
compare if two things are equal and the

784
00:35:17,240 --> 00:35:19,320
double equal is what's used but actually

785
00:35:19,320 --> 00:35:21,760
that's not true what's used is the

786
00:35:21,760 --> 00:35:24,000
triple equal because in JavaScript so in

787
00:35:24,000 --> 00:35:27,280
any other Pro San programming language

788
00:35:27,280 --> 00:35:29,920
you would for example python you would

789
00:35:29,920 --> 00:35:32,480
have two equals to determine if

790
00:35:32,480 --> 00:35:34,520
something is equal to

791
00:35:34,520 --> 00:35:36,920
another and this is an error I would do

792
00:35:36,920 --> 00:35:39,200
a lot so by the way just be when you

793
00:35:39,200 --> 00:35:41,040
read when you start writing code you

794
00:35:41,040 --> 00:35:43,280
need to be very careful that this symbol

795
00:35:43,280 --> 00:35:45,280
is to store something inside of a

796
00:35:45,280 --> 00:35:47,760
variable or a constant when you declare

797
00:35:47,760 --> 00:35:51,119
it but the double equal is used to

798
00:35:51,119 --> 00:35:52,839
compare things but in JavaScript

799
00:35:52,839 --> 00:35:54,880
specifically you don't use don't ever

800
00:35:54,880 --> 00:35:58,040
use this use the triple equal because a

801
00:35:58,040 --> 00:35:59,680
triple equal the reason why we have a

802
00:35:59,680 --> 00:36:01,599
triple equal is that if you have the

803
00:36:01,599 --> 00:36:04,000
equal equal and let's say instead I'm

804
00:36:04,000 --> 00:36:05,839
going to remove all of this and have an

805
00:36:05,839 --> 00:36:10,319
if statement and have age equal equal

806
00:36:10,319 --> 00:36:15,240
18 so here if it if this uh condition

807
00:36:15,240 --> 00:36:18,280
actually occurs we're going to say I

808
00:36:18,280 --> 00:36:21,200
don't know something like a BC it

809
00:36:21,200 --> 00:36:24,720
doesn't matter so

810
00:36:24,720 --> 00:36:28,040
here if we have this that means you

811
00:36:28,040 --> 00:36:32,280
could have declared a a a string 18 and

812
00:36:32,280 --> 00:36:33,760
then this is actually going to be true

813
00:36:33,760 --> 00:36:35,560
and it's going to print out even though

814
00:36:35,560 --> 00:36:38,040
this is a a string another a number so

815
00:36:38,040 --> 00:36:41,000
if I go here it's going to print out

816
00:36:41,000 --> 00:36:44,800
ABC and this is a problematic because

817
00:36:44,800 --> 00:36:47,680
usually when you write this condition

818
00:36:47,680 --> 00:36:50,359
you're expecting that age is a

819
00:36:50,359 --> 00:36:53,000
number so that's why if you use the

820
00:36:53,000 --> 00:36:55,280
triple equal which I was added later on

821
00:36:55,280 --> 00:36:58,440
in JavaScript Life Time as it was

822
00:36:58,440 --> 00:37:01,240
developed like years later it's not

823
00:37:01,240 --> 00:37:03,200
going to print it out so the default I

824
00:37:03,200 --> 00:37:05,480
always use triple

825
00:37:05,480 --> 00:37:08,599
equal so now if I put back a

826
00:37:08,599 --> 00:37:11,760
number it's going to actually work so

827
00:37:11,760 --> 00:37:14,359
what triple equal does it makes sure

828
00:37:14,359 --> 00:37:16,599
that the not only the values are the

829
00:37:16,599 --> 00:37:18,760
same but the type is the same so the

830
00:37:18,760 --> 00:37:21,359
type being either string number Boolean

831
00:37:21,359 --> 00:37:23,880
Etc are the

832
00:37:23,880 --> 00:37:27,119
same so I go here ABC is going to print

833
00:37:27,119 --> 00:37:29,520
out

834
00:37:29,720 --> 00:37:30,560
all

835
00:37:30,560 --> 00:37:34,119
right now there's many different um

836
00:37:34,119 --> 00:37:37,760
Expressions so when you use for example

837
00:37:37,760 --> 00:37:40,280
you cannot do

838
00:37:40,280 --> 00:37:43,160
this actually yeah you cannot do this so

839
00:37:43,160 --> 00:37:46,440
when you're using above or equal

840
00:37:46,440 --> 00:37:51,599
Etc uh you use um single quotation marks

841
00:37:51,599 --> 00:37:55,560
um a single equal sign sorry with before

842
00:37:55,560 --> 00:37:59,560
it the either greater greater than

843
00:37:59,560 --> 00:38:03,839
symbol lower than symbol and also a new

844
00:38:03,839 --> 00:38:06,800
one that you might not be uh familiar

845
00:38:06,800 --> 00:38:10,079
with is the bang equal symbol so bang

846
00:38:10,079 --> 00:38:14,560
equal means it's not equal and it's uh

847
00:38:14,560 --> 00:38:18,800
if I go to here so bang equal the symbol

848
00:38:18,800 --> 00:38:20,760
is basically like this you see ma in

849
00:38:20,760 --> 00:38:23,560
math classes where you have

850
00:38:23,560 --> 00:38:25,839
a you know this

851
00:38:25,839 --> 00:38:28,680
symbol yeah it's basically that not

852
00:38:28,680 --> 00:38:31,040
equal you can also have just greater

853
00:38:31,040 --> 00:38:33,760
greater than itself and it means exactly

854
00:38:33,760 --> 00:38:35,560
what it means

855
00:38:35,560 --> 00:38:38,960
oops lower than

856
00:38:38,960 --> 00:38:42,560
Etc uh yep and that's it so that's all

857
00:38:42,560 --> 00:38:45,599
there is to it uh at the basic level so

858
00:38:45,599 --> 00:38:46,760
just

859
00:38:46,760 --> 00:38:50,520
to to summarize here are all the symbols

860
00:38:50,520 --> 00:38:51,640
we've

861
00:38:51,640 --> 00:38:56,240
seen lower and or equal greater or equal

862
00:38:56,240 --> 00:38:58,000
greater lower

863
00:38:58,000 --> 00:39:01,720
not equal equal equal but equal equal

864
00:39:01,720 --> 00:39:04,040
stricter or which is you prefer this

865
00:39:04,040 --> 00:39:06,200
over this so forget even that this

866
00:39:06,200 --> 00:39:10,160
exists all right so that's uh that's

867
00:39:10,160 --> 00:39:13,640
that now there is a yep so that's for

868
00:39:13,640 --> 00:39:15,480
conditional statements there is another

869
00:39:15,480 --> 00:39:17,119
type of conditional statement called The

870
00:39:17,119 --> 00:39:20,200
Switch statement so the switch statement

871
00:39:20,200 --> 00:39:24,480
is this and uh it takes in for example

872
00:39:24,480 --> 00:39:26,680
your age and then it will match it

873
00:39:26,680 --> 00:39:28,920
against Case

874
00:39:28,920 --> 00:39:32,240
I prefer to so the cases must be

875
00:39:32,240 --> 00:39:35,560
specific for example for case 18 you

876
00:39:35,560 --> 00:39:38,200
have you write some logic here and then

877
00:39:38,200 --> 00:39:40,319
you need to break out by using the break

878
00:39:40,319 --> 00:39:43,160
keyword Etc uh I think as a beginner

879
00:39:43,160 --> 00:39:46,800
don't really think of about it too much

880
00:39:46,800 --> 00:39:48,920
you know you can write you just use only

881
00:39:48,920 --> 00:39:50,920
if statements and you should be fine for

882
00:39:50,920 --> 00:39:52,800
now later on at the end of the video I'm

883
00:39:52,800 --> 00:39:55,760
going to point you to a great JavaScript

884
00:39:55,760 --> 00:39:58,800
resources uh resource for if you want to

885
00:39:58,800 --> 00:40:00,800
dive deeper all right now there is more

886
00:40:00,800 --> 00:40:04,839
complex types of U data you can put

887
00:40:04,839 --> 00:40:06,960
inside of a constant or a

888
00:40:06,960 --> 00:40:09,400
variable and those are arrays and

889
00:40:09,400 --> 00:40:12,880
objects so let's start with arrays so

890
00:40:12,880 --> 00:40:15,319
arrays the way you declare them so for

891
00:40:15,319 --> 00:40:18,280
example I usually prefer to do const and

892
00:40:18,280 --> 00:40:21,520
then let's say I have a bunch of

893
00:40:21,520 --> 00:40:24,000
numbers and I want to store them within

894
00:40:24,000 --> 00:40:25,640
a single constant I'm going to use an

895
00:40:25,640 --> 00:40:27,839
array the way you declare an array the

896
00:40:27,839 --> 00:40:29,760
simplest way is to use brackets like

897
00:40:29,760 --> 00:40:32,800
that and then for each slot you're going

898
00:40:32,800 --> 00:40:34,480
to have an element so 1 two three and

899
00:40:34,480 --> 00:40:37,480
then you separate them by commas so this

900
00:40:37,480 --> 00:40:42,319
is how you you declare a

901
00:40:42,319 --> 00:40:45,160
constant uh you declare an array sorry

902
00:40:45,160 --> 00:40:46,800
so 1 two three this is my array it

903
00:40:46,800 --> 00:40:49,640
contains the numbers one two and three

904
00:40:49,640 --> 00:40:51,640
uh you can have arrays where you can

905
00:40:51,640 --> 00:40:56,160
have one element uh one number and then

906
00:40:56,160 --> 00:40:58,760
a string and a number again Etc but

907
00:40:58,760 --> 00:41:00,480
let's keep it simple for

908
00:41:00,480 --> 00:41:04,359
now so here we have an array and one

909
00:41:04,359 --> 00:41:07,000
thing that is tricky is that you

910
00:41:07,000 --> 00:41:08,880
remember when I said that the constant

911
00:41:08,880 --> 00:41:10,920
means that you cannot modify this later

912
00:41:10,920 --> 00:41:13,000
on that means you cannot later on in

913
00:41:13,000 --> 00:41:15,520
your code come here and then change with

914
00:41:15,520 --> 00:41:18,640
another array for example which say 1 4

915
00:41:18,640 --> 00:41:20,680
6 this is it's not going to allow you to

916
00:41:20,680 --> 00:41:25,200
do that however you can actually change

917
00:41:25,200 --> 00:41:27,760
each um how we say each element itself

918
00:41:27,760 --> 00:41:29,800
each the content of each of the slots

919
00:41:29,800 --> 00:41:31,880
here this might be tricky because

920
00:41:31,880 --> 00:41:33,560
constant you might think that things

921
00:41:33,560 --> 00:41:36,359
must remain constant but here the array

922
00:41:36,359 --> 00:41:38,800
itself is constant it's just the content

923
00:41:38,800 --> 00:41:40,920
of the array that is changing so the way

924
00:41:40,920 --> 00:41:43,040
you access specific elements of an array

925
00:41:43,040 --> 00:41:45,440
is that you take the name of the the

926
00:41:45,440 --> 00:41:47,560
array that you determined and then in

927
00:41:47,560 --> 00:41:50,599
the brackets you put in the index so uh

928
00:41:50,599 --> 00:41:52,599
the way array works is that the first

929
00:41:52,599 --> 00:41:56,040
slot has an index of zero the second

930
00:41:56,040 --> 00:41:58,400
slot has an index of one one the third

931
00:41:58,400 --> 00:42:02,240
slot has an index of uh two and so that

932
00:42:02,240 --> 00:42:05,160
means that the first element is not the

933
00:42:05,160 --> 00:42:07,400
first index does not start with one but

934
00:42:07,400 --> 00:42:11,079
with zero so here if I do numbers zero

935
00:42:11,079 --> 00:42:13,880
and I print that

936
00:42:14,119 --> 00:42:16,640
out you're going to have something

937
00:42:16,640 --> 00:42:19,559
here so console. log and the numbers

938
00:42:19,559 --> 00:42:22,800
equal zero if I look at it the the

939
00:42:22,800 --> 00:42:24,559
results you can see one it's going to

940
00:42:24,559 --> 00:42:29,520
print out the curve this one if I do one

941
00:42:29,520 --> 00:42:32,760
as the index not the element the index

942
00:42:32,760 --> 00:42:34,880
of the it's going to point toward two

943
00:42:34,880 --> 00:42:36,599
it's going to print out two and then if

944
00:42:36,599 --> 00:42:39,480
I do two it's going to be three so you

945
00:42:39,480 --> 00:42:41,800
need to like really keep in mind that

946
00:42:41,800 --> 00:42:44,520
these are the values the elements of the

947
00:42:44,520 --> 00:42:46,960
array and these are the indexes so

948
00:42:46,960 --> 00:42:48,839
basically the address of each of those

949
00:42:48,839 --> 00:42:51,599
slots that contains one two and three so

950
00:42:51,599 --> 00:42:53,760
if you were to use names instead just to

951
00:42:53,760 --> 00:42:56,720
drive the point home so here we have an

952
00:42:56,720 --> 00:42:59,079
array of names so I'm going to call it

953
00:42:59,079 --> 00:43:01,160
names and then here you can have like I

954
00:43:01,160 --> 00:43:02,960
don't know

955
00:43:02,960 --> 00:43:04,920
John

956
00:43:04,920 --> 00:43:08,720
uh let's say I don't have any ideas for

957
00:43:08,720 --> 00:43:12,079
names here Max

958
00:43:12,079 --> 00:43:14,640
maybe then

959
00:43:14,640 --> 00:43:19,119
Chris you have three names and then here

960
00:43:19,119 --> 00:43:20,960
those are strings basically and then if

961
00:43:20,960 --> 00:43:24,559
you console. log names at index zero

962
00:43:24,559 --> 00:43:27,760
it's going to print you John

963
00:43:27,760 --> 00:43:30,760
John same thing if you do one instead

964
00:43:30,760 --> 00:43:32,720
it's going to print out Max and so on

965
00:43:32,720 --> 00:43:35,960
and so forth so max here

966
00:43:35,960 --> 00:43:38,599
Etc all right so now that we have arrays

967
00:43:38,599 --> 00:43:40,119
you can you know that you can have this

968
00:43:40,119 --> 00:43:41,800
so how if you were to instead of putting

969
00:43:41,800 --> 00:43:44,440
a cons to do let you could be able to

970
00:43:44,440 --> 00:43:46,839
replace the whole array itself uh so you

971
00:43:46,839 --> 00:43:50,720
could redeclare a variable like

972
00:43:50,720 --> 00:43:53,480
that but here I'm putting an empty array

973
00:43:53,480 --> 00:43:55,440
that means that when you're going to

974
00:43:55,440 --> 00:43:58,559
console that log to the

975
00:43:58,559 --> 00:44:01,160
console it's going to be

976
00:44:01,160 --> 00:44:03,480
empty it's going to print you in empty

977
00:44:03,480 --> 00:44:06,760
brackets yep empty

978
00:44:06,760 --> 00:44:09,720
array all right so hope you understood

979
00:44:09,720 --> 00:44:12,240
that how that's how arrays work at the

980
00:44:12,240 --> 00:44:14,640
basic level now there are operations

981
00:44:14,640 --> 00:44:17,559
that are available on arrays so for

982
00:44:17,559 --> 00:44:20,240
example let's say you want to remove the

983
00:44:20,240 --> 00:44:23,079
last element of an array what you can do

984
00:44:23,079 --> 00:44:27,400
is you do names. pop

985
00:44:27,400 --> 00:44:32,119
this is a function or yeah method so I

986
00:44:32,119 --> 00:44:34,960
need to explain what a function is first

987
00:44:34,960 --> 00:44:37,839
uh so you know what let's wait before

988
00:44:37,839 --> 00:44:41,280
teaching you that uh those operations so

989
00:44:41,280 --> 00:44:43,319
now you know what now I'm going to talk

990
00:44:43,319 --> 00:44:45,000
uh call them operations because because

991
00:44:45,000 --> 00:44:47,760
anyway console.log is a function that

992
00:44:47,760 --> 00:44:49,680
you call me a

993
00:44:49,680 --> 00:44:52,559
method uh but you might so I'm just

994
00:44:52,559 --> 00:44:54,720
going to just for now call them

995
00:44:54,720 --> 00:44:57,200
operations so there are certain

996
00:44:57,200 --> 00:44:59,440
operations you can

997
00:44:59,440 --> 00:45:02,319
have on arrays and one of them in

998
00:45:02,319 --> 00:45:05,520
JavaScript is pop which removes the last

999
00:45:05,520 --> 00:45:09,400
element if I go here you can see that we

1000
00:45:09,400 --> 00:45:11,880
have John Max but Chris is not no longer

1001
00:45:11,880 --> 00:45:15,319
there we have Push if you want to add an

1002
00:45:15,319 --> 00:45:18,160
element to an existing array what you

1003
00:45:18,160 --> 00:45:20,440
can do is use the push operation and

1004
00:45:20,440 --> 00:45:22,839
from within the parenthesis you can pass

1005
00:45:22,839 --> 00:45:25,200
in the the the next the element you want

1006
00:45:25,200 --> 00:45:27,559
to add to that array so here I could

1007
00:45:27,559 --> 00:45:33,599
decide to add uh let's say um

1008
00:45:33,599 --> 00:45:37,680
takuya and now here if I console. log

1009
00:45:37,680 --> 00:45:42,760
that uh names the name can see the array

1010
00:45:42,760 --> 00:45:45,720
is going to have now one two three four

1011
00:45:45,720 --> 00:45:49,000
elements you can get the length of an

1012
00:45:49,000 --> 00:45:52,240
array by doing Dot

1013
00:45:52,240 --> 00:45:54,480
length so this gives you the length of

1014
00:45:54,480 --> 00:45:57,119
an ARR this is all things Concepts to R

1015
00:45:57,119 --> 00:45:58,720
revise by the way because I don't think

1016
00:45:58,720 --> 00:46:01,200
you're going to remember them like that

1017
00:46:01,200 --> 00:46:02,559
if you don't use

1018
00:46:02,559 --> 00:46:07,240
them all right so another type of data

1019
00:46:07,240 --> 00:46:10,079
type you can pass you can in a constant

1020
00:46:10,079 --> 00:46:13,559
or variable is the object type so here

1021
00:46:13,559 --> 00:46:16,640
let's say I have an object

1022
00:46:16,640 --> 00:46:19,960
const my data I'm going to call it this

1023
00:46:19,960 --> 00:46:23,440
way you can define an object by using

1024
00:46:23,440 --> 00:46:26,480
brackets like that uh I always forgot to

1025
00:46:26,480 --> 00:46:28,960
put the semic column here at the End by

1026
00:46:28,960 --> 00:46:31,040
the way my editor will replace will put

1027
00:46:31,040 --> 00:46:32,839
it automatically for me that's why it

1028
00:46:32,839 --> 00:46:37,319
was always there anyway um here uh an

1029
00:46:37,319 --> 00:46:41,559
object can be think of like it's where

1030
00:46:41,559 --> 00:46:46,000
you can store properties and of data so

1031
00:46:46,000 --> 00:46:47,599
I think the best way is just to show you

1032
00:46:47,599 --> 00:46:51,079
an example so you have key value pairs

1033
00:46:51,079 --> 00:46:53,319
you def Define a key that you want to

1034
00:46:53,319 --> 00:46:56,319
use and then the value that is going to

1035
00:46:56,319 --> 00:46:59,599
be paired with it so for example let's

1036
00:46:59,599 --> 00:47:01,839
say we have a name you can decide on the

1037
00:47:01,839 --> 00:47:04,520
key name you you can write it out like

1038
00:47:04,520 --> 00:47:07,480
that without a string however if you

1039
00:47:07,480 --> 00:47:09,119
want as a key to use something that is

1040
00:47:09,119 --> 00:47:11,800
more than one word let's say name two

1041
00:47:11,800 --> 00:47:13,960
you need to put this within bracket uh

1042
00:47:13,960 --> 00:47:17,079
within U how you say quotation marks so

1043
00:47:17,079 --> 00:47:19,280
here because we're not using them within

1044
00:47:19,280 --> 00:47:21,760
we're only using a default name uh a

1045
00:47:21,760 --> 00:47:24,720
single no space

1046
00:47:24,720 --> 00:47:27,599
uh name we don't need and then you use

1047
00:47:27,599 --> 00:47:30,160
the two Dot and then what's come what

1048
00:47:30,160 --> 00:47:33,960
comes to the right is the value and here

1049
00:47:33,960 --> 00:47:35,760
what you can put here is the exact same

1050
00:47:35,760 --> 00:47:39,680
you could put inside of a variable or a

1051
00:47:39,680 --> 00:47:41,920
constant it's the same type of data so

1052
00:47:41,920 --> 00:47:44,040
for example the name I could decide on

1053
00:47:44,040 --> 00:47:45,400
John for

1054
00:47:45,400 --> 00:47:47,920
example and then here you need to always

1055
00:47:47,920 --> 00:47:50,440
put the coma the comma I think if you

1056
00:47:50,440 --> 00:47:52,240
only have one element you might not need

1057
00:47:52,240 --> 00:47:55,520
it but usually you use comma and then

1058
00:47:55,520 --> 00:47:58,040
you can add another thing age let's say

1059
00:47:58,040 --> 00:48:00,760
say 25 24 let's

1060
00:48:00,760 --> 00:48:04,160
say and then so on and so forth and it's

1061
00:48:04,160 --> 00:48:06,920
a handy way to store a lot a lot of data

1062
00:48:06,920 --> 00:48:11,040
so age um

1063
00:48:11,040 --> 00:48:14,520
nationality for example we can say

1064
00:48:14,520 --> 00:48:17,839
America or US

1065
00:48:17,839 --> 00:48:19,480
USA

1066
00:48:19,480 --> 00:48:23,280
Etc so what's cool with those objects is

1067
00:48:23,280 --> 00:48:26,480
that you can do my data so to access it

1068
00:48:26,480 --> 00:48:29,000
you can do console.log either you can

1069
00:48:29,000 --> 00:48:32,640
print out the whole thing using my data

1070
00:48:32,640 --> 00:48:35,160
so if I have the name of the object so

1071
00:48:35,160 --> 00:48:36,800
you're going to have the age the the

1072
00:48:36,800 --> 00:48:37,920
name the

1073
00:48:37,920 --> 00:48:41,240
nationality or you can print out

1074
00:48:41,240 --> 00:48:44,839
specific pieces here by using the dot

1075
00:48:44,839 --> 00:48:47,920
notation so dot and then you can see the

1076
00:48:47,920 --> 00:48:50,119
various properties so the age I just

1077
00:48:50,119 --> 00:48:52,680
want to print out the age you can have

1078
00:48:52,680 --> 00:48:55,799
it here uh one thing that is interesting

1079
00:48:55,799 --> 00:48:57,240
with um

1080
00:48:57,240 --> 00:48:59,520
object is that you can declare new

1081
00:48:59,520 --> 00:49:02,280
records or Properties by do using the

1082
00:49:02,280 --> 00:49:04,559
dot notation itself so I could decide on

1083
00:49:04,559 --> 00:49:08,920
a new property after having declared my

1084
00:49:08,920 --> 00:49:12,079
object so here I would call it

1085
00:49:12,079 --> 00:49:13,720
maybe

1086
00:49:13,720 --> 00:49:16,960
height let's say and then put an equal

1087
00:49:16,960 --> 00:49:18,000
sign and

1088
00:49:18,000 --> 00:49:22,359
then 182 maybe CM uh probably should put

1089
00:49:22,359 --> 00:49:26,440
it in an inch so let's say uh five uh

1090
00:49:26,440 --> 00:49:29,359
six six 6

1091
00:49:29,359 --> 00:49:33,200
foot so my data height 6

1092
00:49:33,200 --> 00:49:35,440
foot and then maybe it should be a

1093
00:49:35,440 --> 00:49:39,280
string here so 6

1094
00:49:39,839 --> 00:49:44,200
FD so now if I print out the console by

1095
00:49:44,200 --> 00:49:45,040
using

1096
00:49:45,040 --> 00:49:47,920
console.log the my data you can see that

1097
00:49:47,920 --> 00:49:50,799
a new record has been added let's see a

1098
00:49:50,799 --> 00:49:53,079
height you can see that even though it's

1099
00:49:53,079 --> 00:49:56,319
a constant like with the arrays it will

1100
00:49:56,319 --> 00:49:59,359
let you add new properties from within

1101
00:49:59,359 --> 00:50:01,359
the same array what it will not allow

1102
00:50:01,359 --> 00:50:03,480
you to do is replace the whole thing

1103
00:50:03,480 --> 00:50:06,240
with a new object so by doing my data if

1104
00:50:06,240 --> 00:50:09,079
you were to do this then it will not

1105
00:50:09,079 --> 00:50:11,839
allow you to do that so this is how

1106
00:50:11,839 --> 00:50:13,640
object works and I would say arrays and

1107
00:50:13,640 --> 00:50:15,559
objects are one of the most useful data

1108
00:50:15,559 --> 00:50:17,880
structures that you're going to use

1109
00:50:17,880 --> 00:50:20,240
there are others of course uh the reason

1110
00:50:20,240 --> 00:50:22,839
I decide not to talk about them here is

1111
00:50:22,839 --> 00:50:25,359
just not to overburden you with uh

1112
00:50:25,359 --> 00:50:27,040
complex and I'm really teach teing you

1113
00:50:27,040 --> 00:50:29,920
only the concepts you need to make like

1114
00:50:29,920 --> 00:50:32,520
your game a game simple game and then as

1115
00:50:32,520 --> 00:50:34,760
you going to get deeper you're going to

1116
00:50:34,760 --> 00:50:36,960
probably search and then find new

1117
00:50:36,960 --> 00:50:40,200
features new data structures you can use

1118
00:50:40,200 --> 00:50:44,200
Etc all right so now now that you have

1119
00:50:44,200 --> 00:50:46,680
this key value pairs Etc uh there's

1120
00:50:46,680 --> 00:50:48,520
another way actually I forgot to mention

1121
00:50:48,520 --> 00:50:51,960
that you can access properties uh from a

1122
00:50:51,960 --> 00:50:54,400
a an object you can do my data and then

1123
00:50:54,400 --> 00:50:56,359
pass in a bracket notation that is

1124
00:50:56,359 --> 00:50:57,880
similar similar to what you saw with

1125
00:50:57,880 --> 00:51:01,079
array but instead of passing in number

1126
00:51:01,079 --> 00:51:02,640
uh which is the index you can pass the

1127
00:51:02,640 --> 00:51:04,599
name of the property as a string it

1128
00:51:04,599 --> 00:51:07,480
needs to be a string here so so this is

1129
00:51:07,480 --> 00:51:09,960
especially useful when you have a

1130
00:51:09,960 --> 00:51:13,240
property that is two words for example

1131
00:51:13,240 --> 00:51:14,640
so for

1132
00:51:14,640 --> 00:51:19,599
example uh nice I don't know I don't

1133
00:51:19,599 --> 00:51:21,960
have any idea what to do here let's say

1134
00:51:21,960 --> 00:51:27,480
um years of experience years of EXP

1135
00:51:27,480 --> 00:51:31,160
XP and then let's say two

1136
00:51:31,160 --> 00:51:33,559
years and then here you cannot access

1137
00:51:33,559 --> 00:51:36,520
this by using the dot notation it's

1138
00:51:36,520 --> 00:51:39,680
maybe you could actually yeah you cannot

1139
00:51:39,680 --> 00:51:41,240
it's going to transfer you're going to

1140
00:51:41,240 --> 00:51:44,119
transform your the operation to a the

1141
00:51:44,119 --> 00:51:47,440
array notation uh I don't know what is

1142
00:51:47,440 --> 00:51:49,480
the the name of it but this is the other

1143
00:51:49,480 --> 00:51:52,319
way of accessing a specific property and

1144
00:51:52,319 --> 00:51:55,440
is mandatory when you have a property

1145
00:51:55,440 --> 00:51:58,599
that is a string in string form with

1146
00:51:58,599 --> 00:52:01,160
more than two more than one

1147
00:52:01,160 --> 00:52:04,760
word so you can actually use that way of

1148
00:52:04,760 --> 00:52:06,799
accessing properties this uh with the

1149
00:52:06,799 --> 00:52:08,599
other ones by just passing it as a

1150
00:52:08,599 --> 00:52:13,680
string instead age and then name Etc so

1151
00:52:13,680 --> 00:52:15,440
hope that was clear so the the next

1152
00:52:15,440 --> 00:52:17,000
concept I would say that is pretty

1153
00:52:17,000 --> 00:52:19,920
crucial to understand is Loops so Loops

1154
00:52:19,920 --> 00:52:22,680
allows you to repeat the same line of

1155
00:52:22,680 --> 00:52:24,839
code or multiple lines of code multiple

1156
00:52:24,839 --> 00:52:27,400
times this is very useful because it

1157
00:52:27,400 --> 00:52:30,240
will allow you to have to repeat stuff

1158
00:52:30,240 --> 00:52:33,640
and uh generalize so don't you don't

1159
00:52:33,640 --> 00:52:35,160
have to repeat yourself for example if I

1160
00:52:35,160 --> 00:52:37,680
want to print print 100 numbers I'm not

1161
00:52:37,680 --> 00:52:40,520
going to write console.log one

1162
00:52:40,520 --> 00:52:43,920
console.log 2 3 4 5 100 times that would

1163
00:52:43,920 --> 00:52:46,400
take me forever and this is where four

1164
00:52:46,400 --> 00:52:49,640
Loops come into handy so four Loops are

1165
00:52:49,640 --> 00:52:51,839
defined like this so for something so

1166
00:52:51,839 --> 00:52:54,880
for an expression condition do what's

1167
00:52:54,880 --> 00:52:59,440
inside here so for let's say uh this

1168
00:52:59,440 --> 00:53:01,520
where a

1169
00:53:01,520 --> 00:53:09,480
for let I equal z i inferior to

1170
00:53:09,480 --> 00:53:13,599
100 I ++ okay this might be strange and

1171
00:53:13,599 --> 00:53:18,400
I'm going to explain it so we declare a

1172
00:53:18,400 --> 00:53:20,839
variable that is going to act as a

1173
00:53:20,839 --> 00:53:23,520
counter the convention is usually to use

1174
00:53:23,520 --> 00:53:26,200
a single letter like I or J or something

1175
00:53:26,200 --> 00:53:28,480
like that that and then it's going to

1176
00:53:28,480 --> 00:53:30,400
contain so the for Loop contains three

1177
00:53:30,400 --> 00:53:33,280
Expressions the first one is the the

1178
00:53:33,280 --> 00:53:36,079
Declaration of that counter counter the

1179
00:53:36,079 --> 00:53:38,040
second one is the condition to look for

1180
00:53:38,040 --> 00:53:43,040
so for I inferior to 100 so as long as I

1181
00:53:43,040 --> 00:53:45,839
is inferior to 100 then it's going to

1182
00:53:45,839 --> 00:53:48,400
run what's it in there and the third

1183
00:53:48,400 --> 00:53:50,880
expression here is after running what's

1184
00:53:50,880 --> 00:53:54,200
in there it's going to increment so add

1185
00:53:54,200 --> 00:53:57,559
to the value of I by using the Plus+

1186
00:53:57,559 --> 00:54:01,160
sign so something I forgot to to to

1187
00:54:01,160 --> 00:54:02,880
teach is that let's say I have a

1188
00:54:02,880 --> 00:54:05,599
variable called number one and it

1189
00:54:05,599 --> 00:54:08,359
contains five you can add to it by using

1190
00:54:08,359 --> 00:54:10,839
number one plus plus that means the

1191
00:54:10,839 --> 00:54:12,640
content of number one is going to be

1192
00:54:12,640 --> 00:54:14,880
five uh another way you can do that is

1193
00:54:14,880 --> 00:54:19,079
doing plus plus equal and then one

1194
00:54:19,079 --> 00:54:21,520
that's another way of doing it uh you

1195
00:54:21,520 --> 00:54:25,319
can also do minus equal one or multiply

1196
00:54:25,319 --> 00:54:28,960
equal one if you want to multiply Etc uh

1197
00:54:28,960 --> 00:54:31,400
the long form of that is to do the

1198
00:54:31,400 --> 00:54:33,280
content of number one plus one that's

1199
00:54:33,280 --> 00:54:36,359
the the most verbose way of doing

1200
00:54:36,359 --> 00:54:41,200
it so just something to to yeah to to I

1201
00:54:41,200 --> 00:54:43,920
forgot to teach you all right so here so

1202
00:54:43,920 --> 00:54:48,720
if I have let I equal Z okay so let's

1203
00:54:48,720 --> 00:54:51,000
write something here so console of log

1204
00:54:51,000 --> 00:54:53,680
and I'm just going to log the actual

1205
00:54:53,680 --> 00:54:56,799
counter itself so here if I go here you

1206
00:54:56,799 --> 00:55:00,000
can see that it's going to run from 0 to

1207
00:55:00,000 --> 00:55:04,079
99 so zero because the count counter was

1208
00:55:04,079 --> 00:55:07,839
started at zero and 99 because you know

1209
00:55:07,839 --> 00:55:10,960
if I were to do one instead

1210
00:55:10,960 --> 00:55:15,760
here it's going to still run till 99 but

1211
00:55:15,760 --> 00:55:18,640
starting from one if you want to print

1212
00:55:18,640 --> 00:55:21,799
out numbers from one to 100 you need to

1213
00:55:21,799 --> 00:55:23,640
change this instead of being inferior

1214
00:55:23,640 --> 00:55:27,079
you need to be inferior or equal

1215
00:55:27,079 --> 00:55:28,400
so if I go

1216
00:55:28,400 --> 00:55:30,839
here you have up to

1217
00:55:30,839 --> 00:55:35,480
100 so Yep this is it so this is the

1218
00:55:35,480 --> 00:55:38,880
basic traditional way uh form of the for

1219
00:55:38,880 --> 00:55:41,319
Loop and now considering one thing let's

1220
00:55:41,319 --> 00:55:44,000
say you remember we had an array so

1221
00:55:44,000 --> 00:55:45,720
let's say we have an array of names and

1222
00:55:45,720 --> 00:55:47,559
you want to print out each name

1223
00:55:47,559 --> 00:55:50,920
individual so I have

1224
00:55:50,920 --> 00:55:55,119
John John Max

1225
00:55:55,119 --> 00:55:57,640
Chris and and we want to print each of

1226
00:55:57,640 --> 00:56:00,400
them using a for Loop so how would you

1227
00:56:00,400 --> 00:56:04,319
do that the basic way to do is to have

1228
00:56:04,319 --> 00:56:08,000
index I the counter to zero and down

1229
00:56:08,000 --> 00:56:11,119
here we just make sure that the index uh

1230
00:56:11,119 --> 00:56:13,039
the counter sorry is going to be

1231
00:56:13,039 --> 00:56:15,920
inferior to names. length if you

1232
00:56:15,920 --> 00:56:18,160
remember by using the dot length you're

1233
00:56:18,160 --> 00:56:20,440
going to get the length of an array and

1234
00:56:20,440 --> 00:56:22,119
here the length of an array is three

1235
00:56:22,119 --> 00:56:24,319
because there's three

1236
00:56:24,319 --> 00:56:27,119
elements so here in the console log I

1237
00:56:27,119 --> 00:56:29,039
can do names and then if you remember

1238
00:56:29,039 --> 00:56:31,880
you can pass in the index here so since

1239
00:56:31,880 --> 00:56:33,359
it start at zero and it's going to be

1240
00:56:33,359 --> 00:56:35,079
inferior to the length that means going

1241
00:56:35,079 --> 00:56:38,839
to be zero one and two maximum so if I

1242
00:56:38,839 --> 00:56:42,799
do here and I you can have John Max and

1243
00:56:42,799 --> 00:56:44,920
chis that's that is going to appear on

1244
00:56:44,920 --> 00:56:45,680
the

1245
00:56:45,680 --> 00:56:49,559
screen so in the console sorry so just

1246
00:56:49,559 --> 00:56:52,920
to illustrate what is happening is that

1247
00:56:52,920 --> 00:56:54,400
if I take this for

1248
00:56:54,400 --> 00:56:59,599
example and let's uh y so when okay I'm

1249
00:56:59,599 --> 00:57:02,559
just going to copy that that

1250
00:57:02,559 --> 00:57:06,240
code I'm going to go to the board here

1251
00:57:06,240 --> 00:57:07,839
going to paste it

1252
00:57:07,839 --> 00:57:11,359
here and let's let's zoom

1253
00:57:11,359 --> 00:57:15,079
in so what happens here is I'm going to

1254
00:57:15,079 --> 00:57:17,000
use the pen here so we

1255
00:57:17,000 --> 00:57:19,720
had three elements maybe I should

1256
00:57:19,720 --> 00:57:22,119
increase the font

1257
00:57:22,119 --> 00:57:26,799
size XL here you go so here

1258
00:57:26,799 --> 00:57:29,720
okay okay so if you remember we had

1259
00:57:29,720 --> 00:57:33,200
those three names inside of the array

1260
00:57:33,200 --> 00:57:35,119
and the for Loop what it does it's just

1261
00:57:35,119 --> 00:57:37,319
going to if I do the

1262
00:57:37,319 --> 00:57:40,119
execution it's I is first going to be

1263
00:57:40,119 --> 00:57:41,640
equal to

1264
00:57:41,640 --> 00:57:46,880
zero so during that first pass

1265
00:57:48,920 --> 00:57:52,160
names what's uh I is going to be

1266
00:57:52,160 --> 00:57:56,200
basically equal to names

1267
00:57:56,319 --> 00:57:59,480
with zero and if you remember the index

1268
00:57:59,480 --> 00:58:01,440
zero is the first index of the array

1269
00:58:01,440 --> 00:58:03,240
because we have one and

1270
00:58:03,240 --> 00:58:07,359
two so if we have I afterwards I equal

1271
00:58:07,359 --> 00:58:11,319
one names is going to be sorry for my

1272
00:58:11,319 --> 00:58:12,960
poor

1273
00:58:12,960 --> 00:58:16,319
handwriting one here so I mean name is

1274
00:58:16,319 --> 00:58:18,680
going to be one and it's going to print

1275
00:58:18,680 --> 00:58:21,160
out Max so the first time it prints

1276
00:58:21,160 --> 00:58:23,680
Chris uh John sorry second time it

1277
00:58:23,680 --> 00:58:27,520
prints Max the Third as the third time I

1278
00:58:27,520 --> 00:58:29,920
is going to be equal to

1279
00:58:29,920 --> 00:58:34,119
two and here so what happens is that I

1280
00:58:34,119 --> 00:58:37,680
is equal to zero we print out John and

1281
00:58:37,680 --> 00:58:42,280
then I ++ will make I equal now to

1282
00:58:42,280 --> 00:58:45,119
one and then here I is going to be equal

1283
00:58:45,119 --> 00:58:49,920
to one going to print out uh

1284
00:58:50,680 --> 00:58:55,440
Max here John

1285
00:58:58,440 --> 00:59:01,520
and then i++ is going to come into play

1286
00:59:01,520 --> 00:59:04,640
which is here remember and that means I

1287
00:59:04,640 --> 00:59:08,079
is now equal to two and then here I is

1288
00:59:08,079 --> 00:59:11,160
equal to two that means names square

1289
00:59:11,160 --> 00:59:14,880
bracket 2 is going to point towards the

1290
00:59:14,880 --> 00:59:18,160
Chris name so Chris is going to be

1291
00:59:18,160 --> 00:59:19,480
what's printed

1292
00:59:19,480 --> 00:59:23,960
out and i++ is going to make I equal to

1293
00:59:23,960 --> 00:59:27,119
three and now

1294
00:59:27,119 --> 00:59:29,599
we have I equal to 3

1295
00:59:29,599 --> 00:59:32,240
here and if you

1296
00:59:32,240 --> 00:59:37,520
remember we we run this as long as I is

1297
00:59:37,520 --> 00:59:40,920
inferior to names. length and names.

1298
00:59:40,920 --> 00:59:43,960
length means that the array names has a

1299
00:59:43,960 --> 00:59:46,799
length of three three elements that

1300
00:59:46,799 --> 00:59:49,319
means uh that this condition is no

1301
00:59:49,319 --> 00:59:52,799
longer true that means we will not run

1302
00:59:52,799 --> 00:59:55,599
the for Loop another time because I

1303
00:59:55,599 --> 00:59:59,480
inferior ior to

1304
00:59:59,480 --> 01:00:03,359
names do length which is the

1305
01:00:03,359 --> 01:00:09,839
array is now false equal to

1306
01:00:09,920 --> 01:00:13,240
false so hope that uh little schematic

1307
01:00:13,240 --> 01:00:15,880
uh drawing was clear all right so that's

1308
01:00:15,880 --> 01:00:19,039
how a for Loop works and now there is a

1309
01:00:19,039 --> 01:00:21,359
easier version of the for Loop that

1310
01:00:21,359 --> 01:00:24,000
doesn't where you don't need to think

1311
01:00:24,000 --> 01:00:26,079
like that uh this for Loop is still

1312
01:00:26,079 --> 01:00:28,200
useful in certain

1313
01:00:28,200 --> 01:00:30,640
situations uh but the easier version of

1314
01:00:30,640 --> 01:00:34,200
the for Loop is just to do here so const

1315
01:00:34,200 --> 01:00:37,400
name of names and then you can just

1316
01:00:37,400 --> 01:00:41,640
print out each of the names from that

1317
01:00:41,640 --> 01:00:44,079
array and then if I look

1318
01:00:44,079 --> 01:00:46,880
here at the result you can see that

1319
01:00:46,880 --> 01:00:48,599
everything was printed

1320
01:00:48,599 --> 01:00:51,079
out now this might be confusing because

1321
01:00:51,079 --> 01:00:53,119
where does name comes from so here the

1322
01:00:53,119 --> 01:00:56,039
easiest version of the for Loop is that

1323
01:00:56,039 --> 01:00:58,599
you create a constant called name but it

1324
01:00:58,599 --> 01:01:00,680
doesn't have to be name it can can be

1325
01:01:00,680 --> 01:01:03,280
any name here this is just a convention

1326
01:01:03,280 --> 01:01:04,760
because it makes more sense because in

1327
01:01:04,760 --> 01:01:07,599
the names array what you have for each

1328
01:01:07,599 --> 01:01:11,400
element is a name so you do const the

1329
01:01:11,400 --> 01:01:13,680
name of your variable that you just

1330
01:01:13,680 --> 01:01:17,640
created of and then the array and each

1331
01:01:17,640 --> 01:01:19,799
element is going to be assigned to that

1332
01:01:19,799 --> 01:01:21,799
constant and then you can refer to it

1333
01:01:21,799 --> 01:01:24,520
from within the for Loop all right so

1334
01:01:24,520 --> 01:01:25,920
now that you have the for Loop there's

1335
01:01:25,920 --> 01:01:28,599
's another loop that is very useful it's

1336
01:01:28,599 --> 01:01:31,839
called the while loop the while loop

1337
01:01:31,839 --> 01:01:35,440
what it does it continue continuously

1338
01:01:35,440 --> 01:01:40,319
print uh run the code within if uh the

1339
01:01:40,319 --> 01:01:41,559
condition is true as long as the

1340
01:01:41,559 --> 01:01:44,079
condition is true now it's equivalent I

1341
01:01:44,079 --> 01:01:46,440
think to a for Loop where you just do

1342
01:01:46,440 --> 01:01:49,720
empty expression here empty expression

1343
01:01:49,720 --> 01:01:50,920
I'm actually not sure if you can

1344
01:01:50,920 --> 01:01:52,640
actually do that in JavaScript so this

1345
01:01:52,640 --> 01:01:55,559
will run infinitely because it uh does

1346
01:01:55,559 --> 01:01:57,960
it run infinitely so let me test it out

1347
01:01:57,960 --> 01:02:01,119
I barely ever use this so going to do

1348
01:02:01,119 --> 01:02:02,880
this by the way something I'm just going

1349
01:02:02,880 --> 01:02:05,079
to teach you right now is if you want to

1350
01:02:05,079 --> 01:02:07,839
just for testing want to blank out

1351
01:02:07,839 --> 01:02:09,880
certain prevent certain codes from

1352
01:02:09,880 --> 01:02:12,720
executed can do control shift and it's

1353
01:02:12,720 --> 01:02:15,160
going to turn it into a comment later on

1354
01:02:15,160 --> 01:02:17,119
I'm going to teach you like what's the

1355
01:02:17,119 --> 01:02:18,839
utility of comments but comments are

1356
01:02:18,839 --> 01:02:21,920
things that are ignored by the compiler

1357
01:02:21,920 --> 01:02:24,599
so you don't so they're not treated as

1358
01:02:24,599 --> 01:02:26,599
code so basically it's a way to add

1359
01:02:26,599 --> 01:02:29,720
notes uh explaining why things are the

1360
01:02:29,720 --> 01:02:31,440
way they are in the code but you you

1361
01:02:31,440 --> 01:02:33,640
should not overdo it but this is the

1362
01:02:33,640 --> 01:02:35,520
utility and you can use it for to blank

1363
01:02:35,520 --> 01:02:38,039
out certain parts of the code you you

1364
01:02:38,039 --> 01:02:40,200
don't want to execute just for testing

1365
01:02:40,200 --> 01:02:44,039
purposes for example so if I do

1366
01:02:44,520 --> 01:02:48,559
console.log test just just to test what

1367
01:02:48,559 --> 01:02:51,760
happens and not I nothing happens so

1368
01:02:51,760 --> 01:02:54,000
nothing prints

1369
01:02:54,000 --> 01:02:57,599
out or maybe yeah it's going to actually

1370
01:02:57,599 --> 01:03:01,400
crash the the the browser so if I do

1371
01:03:01,400 --> 01:03:03,119
this I need to be careful I don't want

1372
01:03:03,119 --> 01:03:05,240
to crash

1373
01:03:05,240 --> 01:03:09,200
it and uh I think it crashed the

1374
01:03:09,200 --> 01:03:13,319
browser I'm just going to close it and

1375
01:03:13,319 --> 01:03:15,760
crash the web page not the browser but

1376
01:03:15,760 --> 01:03:17,359
so if I do

1377
01:03:17,359 --> 01:03:20,359
this

1378
01:03:21,520 --> 01:03:24,559
oops all right okay so it runs

1379
01:03:24,559 --> 01:03:26,200
infinitely

1380
01:03:26,200 --> 01:03:29,079
so if I just to show you how the while

1381
01:03:29,079 --> 01:03:32,599
loop is just a for Loop is if I have a

1382
01:03:32,599 --> 01:03:37,520
condition let's say we have let I equal

1383
01:03:37,520 --> 01:03:39,920
zero so like a for Loop

1384
01:03:39,920 --> 01:03:43,520
basically and then as long as I is

1385
01:03:43,520 --> 01:03:47,440
inferior to names.

1386
01:03:47,920 --> 01:03:50,319
length so I'm going to put back so I'm

1387
01:03:50,319 --> 01:03:52,400
going to remove it here I'm going to put

1388
01:03:52,400 --> 01:03:55,839
back the constant

1389
01:03:56,559 --> 01:03:59,079
so as long as name is inferior to length

1390
01:03:59,079 --> 01:04:00,680
what I'm going to do is I'm going to

1391
01:04:00,680 --> 01:04:05,599
console log the names. with the index so

1392
01:04:05,599 --> 01:04:08,599
the actual specific element and I'm

1393
01:04:08,599 --> 01:04:11,839
going to increment the

1394
01:04:11,839 --> 01:04:14,799
counter so if I do this you can see that

1395
01:04:14,799 --> 01:04:16,920
it gives you the exact same result as if

1396
01:04:16,920 --> 01:04:19,440
you were to use the for

1397
01:04:19,440 --> 01:04:23,079
Loop now one thing I just want to show

1398
01:04:23,079 --> 01:04:24,599
you is that if I were to do the same

1399
01:04:24,599 --> 01:04:26,799
with a for Loop instead so here I'm

1400
01:04:26,799 --> 01:04:29,839
going to comment out this one I'm going

1401
01:04:29,839 --> 01:04:33,799
to by the way hit control save

1402
01:04:33,799 --> 01:04:36,720
frequently and vs code to update what's

1403
01:04:36,720 --> 01:04:40,839
on the code editor forgot to to update

1404
01:04:40,839 --> 01:04:42,119
what the the code that is going to

1405
01:04:42,119 --> 01:04:43,960
actually be executed because live server

1406
01:04:43,960 --> 01:04:46,359
what it does is that every time you save

1407
01:04:46,359 --> 01:04:48,760
it's going to refresh the page and your

1408
01:04:48,760 --> 01:04:52,279
Local Host uh local

1409
01:04:52,279 --> 01:04:54,960
server so here if I instead of a while I

1410
01:04:54,960 --> 01:04:57,760
use a for Loop Loop and here I use the

1411
01:04:57,760 --> 01:04:59,520
empty thing so the expression I don't

1412
01:04:59,520 --> 01:05:01,359
Define it here I also don't Define the

1413
01:05:01,359 --> 01:05:02,279
other

1414
01:05:02,279 --> 01:05:04,079
expression I think it should actually

1415
01:05:04,079 --> 01:05:07,240
work the exact same way as a while loop

1416
01:05:07,240 --> 01:05:10,279
and it does all

1417
01:05:10,279 --> 01:05:12,760
right so just to show it but usually we

1418
01:05:12,760 --> 01:05:16,680
don't use uh a for Loop like that looks

1419
01:05:16,680 --> 01:05:18,760
kind of weird but we usually prefer to

1420
01:05:18,760 --> 01:05:20,960
use a while loop but I think go lank is

1421
01:05:20,960 --> 01:05:22,799
another programming language that

1422
01:05:22,799 --> 01:05:25,160
doesn't have a dedicated while loop they

1423
01:05:25,160 --> 01:05:27,039
just use the for Loop in the in the way

1424
01:05:27,039 --> 01:05:29,599
I've shown you I'm not sure about it

1425
01:05:29,599 --> 01:05:32,720
though I think it's that anyway so

1426
01:05:32,720 --> 01:05:35,240
that's how a while loop Works usually

1427
01:05:35,240 --> 01:05:37,920
for specific conditions uh you want to

1428
01:05:37,920 --> 01:05:40,279
check you want to run the condition as

1429
01:05:40,279 --> 01:05:42,440
long as the condition is false is true

1430
01:05:42,440 --> 01:05:45,160
or false you want to run what's in the Y

1431
01:05:45,160 --> 01:05:48,319
loop it's not usually used to what to

1432
01:05:48,319 --> 01:05:50,240
iterate through an array for example

1433
01:05:50,240 --> 01:05:52,240
this the terminology it's called iterate

1434
01:05:52,240 --> 01:05:54,000
through when you want to go through an

1435
01:05:54,000 --> 01:05:56,319
array and get every element so for

1436
01:05:56,319 --> 01:05:58,920
example you can make a calculation here

1437
01:05:58,920 --> 01:06:00,559
if the calculation is successful then

1438
01:06:00,559 --> 01:06:03,799
you change the like a a variable to from

1439
01:06:03,799 --> 01:06:05,920
True to false and then it stops running

1440
01:06:05,920 --> 01:06:07,960
so that's the use case for while loop

1441
01:06:07,960 --> 01:06:09,520
but for now you're going to see when

1442
01:06:09,520 --> 01:06:11,279
we're going to make our games there is a

1443
01:06:11,279 --> 01:06:12,760
lot of JavaScript features we're not

1444
01:06:12,760 --> 01:06:14,200
going to use and certain others that

1445
01:06:14,200 --> 01:06:15,920
we're going to use a

1446
01:06:15,920 --> 01:06:18,559
lot but I think it's a pretty important

1447
01:06:18,559 --> 01:06:20,440
construct so that's why I wanted to

1448
01:06:20,440 --> 01:06:22,279
teach you that all right I think one of

1449
01:06:22,279 --> 01:06:25,240
the most important Concepts is the

1450
01:06:25,240 --> 01:06:28,279
concept of the function so a function is

1451
01:06:28,279 --> 01:06:30,039
very important because it's actually

1452
01:06:30,039 --> 01:06:33,920
what allows you to uh have reusable

1453
01:06:33,920 --> 01:06:36,640
logic reusable code that you can instead

1454
01:06:36,640 --> 01:06:39,079
of copy pasting your code everywhere you

1455
01:06:39,079 --> 01:06:41,359
usually create a function by using the

1456
01:06:41,359 --> 01:06:42,400
function

1457
01:06:42,400 --> 01:06:44,200
keyword and then what the function

1458
01:06:44,200 --> 01:06:47,039
keyword does is first it's to declare

1459
01:06:47,039 --> 01:06:48,839
function and then you need to decide on

1460
01:06:48,839 --> 01:06:50,920
a name so here the name I'm going to

1461
01:06:50,920 --> 01:06:55,880
decide on is going to be I don't know um

1462
01:06:55,880 --> 01:06:57,279
let's call it let's call the function

1463
01:06:57,279 --> 01:07:00,200
add or addition or maybe uh you know

1464
01:07:00,200 --> 01:07:02,279
what let's call it add and it's going to

1465
01:07:02,279 --> 01:07:04,359
be used to add two numbers so this is

1466
01:07:04,359 --> 01:07:08,720
basic function so the function here what

1467
01:07:08,720 --> 01:07:10,640
you can use it the reason it's so

1468
01:07:10,640 --> 01:07:13,079
powerful is that you can see it as a

1469
01:07:13,079 --> 01:07:15,279
template so you can use a template you

1470
01:07:15,279 --> 01:07:17,279
pass in data here and then you put it

1471
01:07:17,279 --> 01:07:18,960
inside of your logic and then you can

1472
01:07:18,960 --> 01:07:21,440
adapt your logic to what you need so

1473
01:07:21,440 --> 01:07:23,279
here we're going to we need a function

1474
01:07:23,279 --> 01:07:25,559
that allows you to add any two numbers

1475
01:07:25,559 --> 01:07:29,680
any of them so here the parenthesis here

1476
01:07:29,680 --> 01:07:31,520
is useful because it's where we Define

1477
01:07:31,520 --> 01:07:34,880
the params params are parameters that

1478
01:07:34,880 --> 01:07:37,880
the function will accept and basically

1479
01:07:37,880 --> 01:07:40,720
you can think of it as a like tweaking

1480
01:07:40,720 --> 01:07:43,119
values so you can pass values to the

1481
01:07:43,119 --> 01:07:45,599
function to adapt it to your situation

1482
01:07:45,599 --> 01:07:48,119
so here let's say we have number one as

1483
01:07:48,119 --> 01:07:50,240
our first param so the way you define a

1484
01:07:50,240 --> 01:07:53,200
param when you declare a function is by

1485
01:07:53,200 --> 01:07:56,720
just call just deciding on a name and

1486
01:07:56,720 --> 01:07:58,599
then here I decided to call it number

1487
01:07:58,599 --> 01:08:02,119
one and then comma separate by a the the

1488
01:08:02,119 --> 01:08:04,319
the second param you want to use uh a

1489
01:08:04,319 --> 01:08:06,799
function can have no pams or it can have

1490
01:08:06,799 --> 01:08:10,359
one Pam two Pam Etc so it's up to you

1491
01:08:10,359 --> 01:08:12,359
here in our situation we want to be able

1492
01:08:12,359 --> 01:08:14,160
to add two numbers that's why I first

1493
01:08:14,160 --> 01:08:15,319
take the first number and then the

1494
01:08:15,319 --> 01:08:17,600
second number and then here a function

1495
01:08:17,600 --> 01:08:20,319
usually does can can either return

1496
01:08:20,319 --> 01:08:23,480
nothing or you can return a value so

1497
01:08:23,480 --> 01:08:24,920
here I'm just going to not return

1498
01:08:24,920 --> 01:08:26,719
anything but I'm going to console log so

1499
01:08:26,719 --> 01:08:30,159
I'm going to print out to the console

1500
01:08:30,159 --> 01:08:32,319
the result which is number one plus

1501
01:08:32,319 --> 01:08:33,719
number

1502
01:08:33,719 --> 01:08:36,120
two now here you need to be careful

1503
01:08:36,120 --> 01:08:37,920
because you could pass a string here

1504
01:08:37,920 --> 01:08:40,719
it's not it's up to you to be careful uh

1505
01:08:40,719 --> 01:08:42,799
if you were to use a typed programming

1506
01:08:42,799 --> 01:08:44,600
language that would be different because

1507
01:08:44,600 --> 01:08:46,759
you would have to specify the type so

1508
01:08:46,759 --> 01:08:47,960
for example if you were to use

1509
01:08:47,960 --> 01:08:50,799
typescript you would specify that this

1510
01:08:50,799 --> 01:08:52,719
should be a type number and the other

1511
01:08:52,719 --> 01:08:55,640
one as well so just uh keep in mind mind

1512
01:08:55,640 --> 01:08:57,040
that when you're using a dynamic

1513
01:08:57,040 --> 01:08:58,839
language a language that doesn't enforce

1514
01:08:58,839 --> 01:09:00,960
typing like JavaScript is you need to be

1515
01:09:00,960 --> 01:09:03,600
careful what you pass uh to your

1516
01:09:03,600 --> 01:09:06,359
functions or what operations you

1517
01:09:06,359 --> 01:09:08,920
do so there's a difference between

1518
01:09:08,920 --> 01:09:10,520
defining a function which uses the

1519
01:09:10,520 --> 01:09:12,520
function keyword and calling that

1520
01:09:12,520 --> 01:09:14,440
function so calling the function is what

1521
01:09:14,440 --> 01:09:17,359
actually executes the function defining

1522
01:09:17,359 --> 01:09:19,440
it it's like a variable like you have

1523
01:09:19,440 --> 01:09:21,120
the variable you can Define it where you

1524
01:09:21,120 --> 01:09:22,679
define the value and then you can call

1525
01:09:22,679 --> 01:09:24,880
it uh not call it but look at the

1526
01:09:24,880 --> 01:09:26,839
content of it or modify it by using

1527
01:09:26,839 --> 01:09:29,199
equal signs just the name without the

1528
01:09:29,199 --> 01:09:31,400
the keyword that comes before so here

1529
01:09:31,400 --> 01:09:33,600
for the function I declar the function

1530
01:09:33,600 --> 01:09:36,560
and then I can call it using add and

1531
01:09:36,560 --> 01:09:40,560
then passing one and two or three one

1532
01:09:40,560 --> 01:09:43,679
and two and what should print out to the

1533
01:09:43,679 --> 01:09:45,880
console is the result

1534
01:09:45,880 --> 01:09:48,480
three now one thing you need to keep in

1535
01:09:48,480 --> 01:09:51,239
mind is that while execution of code is

1536
01:09:51,239 --> 01:09:55,600
sequential so you have 1 2 3 4 5 6 Etc

1537
01:09:55,600 --> 01:09:57,840
step by step functions can be declared

1538
01:09:57,840 --> 01:10:00,560
in any order that means that it doesn't

1539
01:10:00,560 --> 01:10:03,040
matter if I call the function before it

1540
01:10:03,040 --> 01:10:05,199
is declared I think this should still

1541
01:10:05,199 --> 01:10:07,719
work so if I go I look at it it's going

1542
01:10:07,719 --> 01:10:10,199
to still give you the answer the reason

1543
01:10:10,199 --> 01:10:12,760
for this is because the way JavaScript

1544
01:10:12,760 --> 01:10:15,280
code is executed is that it first parses

1545
01:10:15,280 --> 01:10:18,000
your code and it's going to first like

1546
01:10:18,000 --> 01:10:20,000
look at the various functions you have

1547
01:10:20,000 --> 01:10:21,679
and parse them so it's going to

1548
01:10:21,679 --> 01:10:23,679
basically register them that they exist

1549
01:10:23,679 --> 01:10:25,679
so that's why it does not matter the

1550
01:10:25,679 --> 01:10:28,360
order of when you call that function so

1551
01:10:28,360 --> 01:10:31,120
I can call it before it is declared

1552
01:10:31,120 --> 01:10:33,080
because the the way functions are parsed

1553
01:10:33,080 --> 01:10:35,600
is not sequential but it's the code that

1554
01:10:35,600 --> 01:10:38,080
is executed sequentially hope that

1555
01:10:38,080 --> 01:10:39,280
distinction is

1556
01:10:39,280 --> 01:10:42,080
clear but usually I prefer you know to

1557
01:10:42,080 --> 01:10:43,840
First declare a function function and

1558
01:10:43,840 --> 01:10:47,600
then use it rather than uh you know do

1559
01:10:47,600 --> 01:10:50,400
this so now that we have that I need to

1560
01:10:50,400 --> 01:10:52,800
talk about return statements so as I

1561
01:10:52,800 --> 01:10:54,600
said a function can return something or

1562
01:10:54,600 --> 01:10:57,000
nothing here if instead of console.

1563
01:10:57,000 --> 01:10:59,760
logging the result I want to return it I

1564
01:10:59,760 --> 01:11:02,800
can do return and it's going to return

1565
01:11:02,800 --> 01:11:04,800
the the value so what does returning

1566
01:11:04,800 --> 01:11:06,520
mean that means it's going to just give

1567
01:11:06,520 --> 01:11:09,280
you the value so for example if I just

1568
01:11:09,280 --> 01:11:11,880
call the function here now nothing's

1569
01:11:11,880 --> 01:11:13,679
going to happen uh in the console

1570
01:11:13,679 --> 01:11:16,320
because nothing is visible however you

1571
01:11:16,320 --> 01:11:17,880
can do

1572
01:11:17,880 --> 01:11:19,880
console.log and

1573
01:11:19,880 --> 01:11:22,520
then call the function from within that

1574
01:11:22,520 --> 01:11:24,199
console.log and then you're going to

1575
01:11:24,199 --> 01:11:26,719
have the result uh not a number uh

1576
01:11:26,719 --> 01:11:30,040
that's not uh ah because I didn't pass a

1577
01:11:30,040 --> 01:11:32,760
The params we need so one and

1578
01:11:32,760 --> 01:11:36,280
two so doing this is going to give us

1579
01:11:36,280 --> 01:11:39,120
the result now why would you return here

1580
01:11:39,120 --> 01:11:41,440
is that it's not often the case that you

1581
01:11:41,440 --> 01:11:43,560
want to actually you know console log

1582
01:11:43,560 --> 01:11:45,239
immediately you might for example want

1583
01:11:45,239 --> 01:11:47,880
to have a constant result here call the

1584
01:11:47,880 --> 01:11:53,360
ad function let's say 1 + 2 and then um

1585
01:11:53,360 --> 01:11:56,080
and then with the result you want to to

1586
01:11:56,080 --> 01:12:00,800
have another call to the ad function

1587
01:12:00,800 --> 01:12:02,800
with a previous result plus let's say

1588
01:12:02,800 --> 01:12:05,000
two three again and then you want to

1589
01:12:05,000 --> 01:12:08,400
print out the final result so this is a

1590
01:12:08,400 --> 01:12:11,199
use case a very contrived use case but

1591
01:12:11,199 --> 01:12:12,679
it's a use case

1592
01:12:12,679 --> 01:12:15,560
nonetheless so that's uh that's it

1593
01:12:15,560 --> 01:12:17,679
that's how you declare a function how

1594
01:12:17,679 --> 01:12:19,920
you declare prams Etc that that's the

1595
01:12:19,920 --> 01:12:23,800
basics of it now another very important

1596
01:12:23,800 --> 01:12:26,199
part and another concept I would say is

1597
01:12:26,199 --> 01:12:29,400
extremely important is that we need to

1598
01:12:29,400 --> 01:12:32,719
know how what how things are passed to

1599
01:12:32,719 --> 01:12:33,400
the

1600
01:12:33,400 --> 01:12:35,199
function so there is something in

1601
01:12:35,199 --> 01:12:37,040
programming called passing by reference

1602
01:12:37,040 --> 01:12:39,840
or passing by value so passing by

1603
01:12:39,840 --> 01:12:43,239
reference is when let's say I have I

1604
01:12:43,239 --> 01:12:45,960
declare a constant number one

1605
01:12:45,960 --> 01:12:52,760
outside called five I declare another uh

1606
01:12:52,760 --> 01:12:56,639
called let's say four number for when I

1607
01:12:56,639 --> 01:13:00,880
call add here let's uh let's for the

1608
01:13:00,880 --> 01:13:02,560
sake of argument let's say you have a

1609
01:13:02,560 --> 01:13:06,920
let here and then let here as well if I

1610
01:13:06,920 --> 01:13:11,440
pass in number one and number

1611
01:13:11,639 --> 01:13:14,960
two and let's say instead of here of

1612
01:13:14,960 --> 01:13:16,840
just adding what I do is I actually try

1613
01:13:16,840 --> 01:13:19,600
to modify the content of number one if I

1614
01:13:19,600 --> 01:13:21,239
do instead of number one here it's going

1615
01:13:21,239 --> 01:13:24,000
to be like you know six and then number

1616
01:13:24,000 --> 01:13:26,600
two is going to be you know it's going

1617
01:13:26,600 --> 01:13:29,080
to be

1618
01:13:29,080 --> 01:13:31,719
five when I'm going to print

1619
01:13:31,719 --> 01:13:38,040
out um console. log number one and

1620
01:13:38,040 --> 01:13:40,639
console.log number

1621
01:13:40,639 --> 01:13:42,920
two if you look at the results you're

1622
01:13:42,920 --> 01:13:45,440
going to have five and four nothing has

1623
01:13:45,440 --> 01:13:48,159
changed so let's say even

1624
01:13:48,159 --> 01:13:50,920
like Let's ignore even this let's say

1625
01:13:50,920 --> 01:13:53,320
it's no longer called the ad function

1626
01:13:53,320 --> 01:13:55,600
let's call it modify I'm going to

1627
01:13:55,600 --> 01:13:59,120
attempt to modify these two variable you

1628
01:13:59,120 --> 01:14:01,320
cannot do that and the reason for that

1629
01:14:01,320 --> 01:14:04,880
is that what is passed to a function is

1630
01:14:04,880 --> 01:14:07,440
by value that means it takes the value

1631
01:14:07,440 --> 01:14:10,080
of your variable or constant and then

1632
01:14:10,080 --> 01:14:12,199
it's going to create within that

1633
01:14:12,199 --> 01:14:15,760
function a local variable called number

1634
01:14:15,760 --> 01:14:17,960
one and number two in this case that

1635
01:14:17,960 --> 01:14:20,120
means even if I modify it from within

1636
01:14:20,120 --> 01:14:22,400
the function it's not going to impact

1637
01:14:22,400 --> 01:14:25,159
what's from outside now this is tricky

1638
01:14:25,159 --> 01:14:28,199
because in JavaScript you can there are

1639
01:14:28,199 --> 01:14:30,800
certain things that are passed by

1640
01:14:30,800 --> 01:14:33,520
reference in a function so by values

1641
01:14:33,520 --> 01:14:34,600
when you just passed the value that

1642
01:14:34,600 --> 01:14:36,560
means there no matter what you do within

1643
01:14:36,560 --> 01:14:38,400
the function it's never going to modify

1644
01:14:38,400 --> 01:14:40,840
the outside content which is good but in

1645
01:14:40,840 --> 01:14:43,560
certain case with arrays and objects

1646
01:14:43,560 --> 01:14:46,920
it's actually going to modify the

1647
01:14:46,920 --> 01:14:49,679
content so that's something very tricky

1648
01:14:49,679 --> 01:14:53,719
let's say we have a single param which

1649
01:14:53,719 --> 01:14:55,679
is going to be an array I'm going to

1650
01:14:55,679 --> 01:14:58,840
call it my

1651
01:14:59,000 --> 01:15:02,320
array and I'm going to remove this and

1652
01:15:02,320 --> 01:15:04,639
I'm going to remove all of this as well

1653
01:15:04,639 --> 01:15:07,400
so this function modify let's say we're

1654
01:15:07,400 --> 01:15:11,440
going to try to overwrite the array by

1655
01:15:11,440 --> 01:15:14,440
putting it as an empty array and then

1656
01:15:14,440 --> 01:15:17,440
yeah just it just does

1657
01:15:17,440 --> 01:15:21,239
that now what I'm going to do here is

1658
01:15:21,239 --> 01:15:24,440
I'm going to Define an array called

1659
01:15:24,440 --> 01:15:25,520
actually I think

1660
01:15:25,520 --> 01:15:28,440
if I use const here like let's say my

1661
01:15:28,440 --> 01:15:31,320
array and let's say we have an array one

1662
01:15:31,320 --> 01:15:33,560
two three I think this actually might

1663
01:15:33,560 --> 01:15:35,760
prevent us from doing this because we

1664
01:15:35,760 --> 01:15:38,480
were using a constant anyway if I call

1665
01:15:38,480 --> 01:15:41,719
modify and pass in my array because

1666
01:15:41,719 --> 01:15:44,199
arrays and objects are passed by

1667
01:15:44,199 --> 01:15:47,480
reference if I console. log the array it

1668
01:15:47,480 --> 01:15:49,920
should be modify unless because I use

1669
01:15:49,920 --> 01:15:51,600
the constant it's going to protect it

1670
01:15:51,600 --> 01:15:54,440
against modification so if I do this

1671
01:15:54,440 --> 01:15:55,960
let's see

1672
01:15:55,960 --> 01:15:58,760
one two three and you can see that

1673
01:15:58,760 --> 01:16:02,560
nothing has changed okay that's

1674
01:16:02,560 --> 01:16:06,800
uh okay that's uh oh never mind um

1675
01:16:06,800 --> 01:16:09,639
that's not that's not it's it's normal

1676
01:16:09,639 --> 01:16:12,239
uh when you pass the array

1677
01:16:12,239 --> 01:16:14,719
itself it's not going to modify it so

1678
01:16:14,719 --> 01:16:17,920
you cannot modify the array so the array

1679
01:16:17,920 --> 01:16:19,639
is as if it were passed by value you

1680
01:16:19,639 --> 01:16:22,199
cannot overwrite the array uh the only

1681
01:16:22,199 --> 01:16:24,920
tricky part sorry if I confused you so

1682
01:16:24,920 --> 01:16:26,960
so it's passed as if it were passed by

1683
01:16:26,960 --> 01:16:29,880
value but however if you push that means

1684
01:16:29,880 --> 01:16:32,159
you add content to that array let's say

1685
01:16:32,159 --> 01:16:34,880
121 it's going to modify the original

1686
01:16:34,880 --> 01:16:36,880
array that mean that's why I say it's

1687
01:16:36,880 --> 01:16:39,920
passed by reference so if I go here you

1688
01:16:39,920 --> 01:16:42,400
can see that it added to the external

1689
01:16:42,400 --> 01:16:46,080
array here it added the number that was

1690
01:16:46,080 --> 01:16:50,360
added from within the um the modify

1691
01:16:50,360 --> 01:16:52,159
functions that means that the my array

1692
01:16:52,159 --> 01:16:55,920
here is not a copy uh it's not a

1693
01:16:55,920 --> 01:16:58,360
independent copy from the my array that

1694
01:16:58,360 --> 01:17:01,520
is outside of the function and this is

1695
01:17:01,520 --> 01:17:03,719
tricky because if you're not careful you

1696
01:17:03,719 --> 01:17:05,880
might be might think that you're not

1697
01:17:05,880 --> 01:17:08,400
modifying the array but you're actually

1698
01:17:08,400 --> 01:17:10,400
modifying the original array so you

1699
01:17:10,400 --> 01:17:12,000
might think that you're not modifying

1700
01:17:12,000 --> 01:17:15,239
the original array that it is safe but

1701
01:17:15,239 --> 01:17:18,239
it is not and operations like push pop

1702
01:17:18,239 --> 01:17:21,040
Etc modify the array the content of the

1703
01:17:21,040 --> 01:17:23,520
array even outside so that it's it's

1704
01:17:23,520 --> 01:17:25,719
passed by reference however you cannot

1705
01:17:25,719 --> 01:17:28,840
actually overwrite the aray so if I do

1706
01:17:28,840 --> 01:17:32,719
this it's not going to propagate so the

1707
01:17:32,719 --> 01:17:35,400
what's my array outside of the modify

1708
01:17:35,400 --> 01:17:37,719
function is still going to be the same

1709
01:17:37,719 --> 01:17:41,320
uh the same uh value so it gives you a

1710
01:17:41,320 --> 01:17:44,639
reference to it but if you remove the

1711
01:17:44,639 --> 01:17:47,520
content it's not going to propagate so

1712
01:17:47,520 --> 01:17:51,000
this is a trick tricky thing so if you

1713
01:17:51,000 --> 01:17:53,560
need to take an array from the outside

1714
01:17:53,560 --> 01:17:55,760
and do a bunch of operations inside of a

1715
01:17:55,760 --> 01:17:59,040
function what I recommend that you do is

1716
01:17:59,040 --> 01:18:01,960
you make a copy of that array so either

1717
01:18:01,960 --> 01:18:05,520
you can use uh the spread operator Etc

1718
01:18:05,520 --> 01:18:07,120
so the spread operator is something like

1719
01:18:07,120 --> 01:18:09,320
that so my

1720
01:18:09,320 --> 01:18:11,600
array can do

1721
01:18:11,600 --> 01:18:14,440
this I think this

1722
01:18:14,440 --> 01:18:17,520
should do the

1723
01:18:17,520 --> 01:18:22,320
trick does it from within an array that

1724
01:18:22,320 --> 01:18:24,800
so it takes the content of the array and

1725
01:18:24,800 --> 01:18:27,400
prad its element inside of a new array

1726
01:18:27,400 --> 01:18:30,440
the three dot dot does that so that's a

1727
01:18:30,440 --> 01:18:34,199
just something I want to

1728
01:18:34,199 --> 01:18:36,639
mention all right so now you've learned

1729
01:18:36,639 --> 01:18:38,560
about this Nuance you need to be careful

1730
01:18:38,560 --> 01:18:42,080
here um I think that we've gone over the

1731
01:18:42,080 --> 01:18:44,960
main I would say the Bare Bones Concepts

1732
01:18:44,960 --> 01:18:47,480
you need to

1733
01:18:47,480 --> 01:18:51,080
to learn JavaScript there's

1734
01:18:51,080 --> 01:18:54,360
one two last Concepts I would say the

1735
01:18:54,360 --> 01:18:55,280
first one

1736
01:18:55,280 --> 01:18:59,080
is local versus global variable so uh in

1737
01:18:59,080 --> 01:19:01,679
functions by the using functions you

1738
01:19:01,679 --> 01:19:04,239
probably like intuitively uh understood

1739
01:19:04,239 --> 01:19:06,080
the concept so if we have a function

1740
01:19:06,080 --> 01:19:08,400
let's say call it Main and you have a

1741
01:19:08,400 --> 01:19:11,600
constant outside John for example so if

1742
01:19:11,600 --> 01:19:14,760
you have a name called John you can have

1743
01:19:14,760 --> 01:19:17,560
access to it from the inside of a

1744
01:19:17,560 --> 01:19:22,239
function by printing name here so here

1745
01:19:22,239 --> 01:19:25,560
deprecated uh okay so that's something

1746
01:19:25,560 --> 01:19:28,000
with JavaScript so let's say my

1747
01:19:28,000 --> 01:19:30,760
name just to be different make sure that

1748
01:19:30,760 --> 01:19:33,520
the name is unique so okay so we have

1749
01:19:33,520 --> 01:19:36,080
here so if I call the main function for

1750
01:19:36,080 --> 01:19:38,400
example and look at the result you can

1751
01:19:38,400 --> 01:19:40,960
see John is printed out that means that

1752
01:19:40,960 --> 01:19:43,880
this what's declared outside is

1753
01:19:43,880 --> 01:19:47,000
accessible globally that means it is

1754
01:19:47,000 --> 01:19:48,520
accessible even from within functions

1755
01:19:48,520 --> 01:19:53,120
that are declare near near it or outside

1756
01:19:53,120 --> 01:19:55,719
so what that what that means is that if

1757
01:19:55,719 --> 01:19:58,560
you declare a function here

1758
01:19:58,560 --> 01:20:01,679
const uh my

1759
01:20:01,679 --> 01:20:03,760
name Max for

1760
01:20:03,760 --> 01:20:08,159
example then this this variable this

1761
01:20:08,159 --> 01:20:10,360
constant is not accessible from the

1762
01:20:10,360 --> 01:20:13,800
outside I cannot do console. log my name

1763
01:20:13,800 --> 01:20:16,880
here it's not going to work if I remove

1764
01:20:16,880 --> 01:20:19,080
this so actually just to test it out

1765
01:20:19,080 --> 01:20:21,840
it's going to print John but not Max but

1766
01:20:21,840 --> 01:20:24,000
the from within the main function it's

1767
01:20:24,000 --> 01:20:25,159
going to print Max

1768
01:20:25,159 --> 01:20:27,520
so it it takes the nearest Value the

1769
01:20:27,520 --> 01:20:30,520
nearest declaration so if I do this you

1770
01:20:30,520 --> 01:20:33,280
can see John Max so this uh you need to

1771
01:20:33,280 --> 01:20:34,600
be careful with this if you want

1772
01:20:34,600 --> 01:20:36,880
something to be globally accessible you

1773
01:20:36,880 --> 01:20:39,679
need to put it out outside if you want

1774
01:20:39,679 --> 01:20:42,440
something local you put it you declare

1775
01:20:42,440 --> 01:20:43,960
the the variable the constant from

1776
01:20:43,960 --> 01:20:46,480
within the function and this works the

1777
01:20:46,480 --> 01:20:48,440
same with if statement Etc so if you

1778
01:20:48,440 --> 01:20:50,960
have an if statement let's say I'm just

1779
01:20:50,960 --> 01:20:52,920
going to put it to true that means it's

1780
01:20:52,920 --> 01:20:56,199
going to run either way um if I declare

1781
01:20:56,199 --> 01:21:00,040
a variable call age and let's say 12

1782
01:21:00,040 --> 01:21:03,199
then console. log the

1783
01:21:03,199 --> 01:21:05,960
age uh this works but if I want to

1784
01:21:05,960 --> 01:21:09,320
console log the age from outside the if

1785
01:21:09,320 --> 01:21:11,320
statement is not going to work if I do

1786
01:21:11,320 --> 01:21:13,400
this age is not

1787
01:21:13,400 --> 01:21:17,600
defined so hope you understood this uh

1788
01:21:17,600 --> 01:21:19,199
the difference between a local Global

1789
01:21:19,199 --> 01:21:21,360
variable and how scope works so the

1790
01:21:21,360 --> 01:21:23,520
concept itself is called scope the scope

1791
01:21:23,520 --> 01:21:26,440
of variables and constant

1792
01:21:26,440 --> 01:21:28,520
so yeah so if you want to something to

1793
01:21:28,520 --> 01:21:30,960
be only accessible locally you declare

1794
01:21:30,960 --> 01:21:33,239
it as closely as possible as where you

1795
01:21:33,239 --> 01:21:35,719
need it so so that's that and then

1796
01:21:35,719 --> 01:21:38,239
finally there's the comments so in your

1797
01:21:38,239 --> 01:21:40,040
code you can add comments by using the

1798
01:21:40,040 --> 01:21:42,480
Das dash symbol and then writing your

1799
01:21:42,480 --> 01:21:44,719
text and usually comments are you leave

1800
01:21:44,719 --> 01:21:47,239
them for for others and yourself to

1801
01:21:47,239 --> 01:21:50,000
explain why things are this the way they

1802
01:21:50,000 --> 01:21:52,719
are and not what the code does because

1803
01:21:52,719 --> 01:21:54,639
what the code does you can read it

1804
01:21:54,639 --> 01:21:56,159
yourself when you first start

1805
01:21:56,159 --> 01:21:58,080
programming it's very difficult for you

1806
01:21:58,080 --> 01:21:59,639
to know what the code does you really

1807
01:21:59,639 --> 01:22:02,600
have to sit down read line by line Etc

1808
01:22:02,600 --> 01:22:04,320
but as you become a more experienced

1809
01:22:04,320 --> 01:22:06,719
programmer you can actually just it's

1810
01:22:06,719 --> 01:22:08,800
pretty pretty straightforward to read

1811
01:22:08,800 --> 01:22:10,760
piece of the code and understand what is

1812
01:22:10,760 --> 01:22:13,000
happening so useful comments are

1813
01:22:13,000 --> 01:22:15,040
comments that explain why things are the

1814
01:22:15,040 --> 01:22:18,320
way they are not how it works so why for

1815
01:22:18,320 --> 01:22:20,760
example you had to use this resolution

1816
01:22:20,760 --> 01:22:24,080
so you had to declare const with 1,000

1817
01:22:24,080 --> 01:22:27,719
something because this constraint and uh

1818
01:22:27,719 --> 01:22:30,040
we need to have this aspect ratio Etc

1819
01:22:30,040 --> 01:22:31,800
which is not clear to someone who would

1820
01:22:31,800 --> 01:22:33,760
read the code this is where a comment

1821
01:22:33,760 --> 01:22:35,560
adding a comment would be very

1822
01:22:35,560 --> 01:22:38,760
useful all right uh that's it I think we

1823
01:22:38,760 --> 01:22:42,360
have the basics concept down and then we

1824
01:22:42,360 --> 01:22:45,560
can actually uh there's one last thing

1825
01:22:45,560 --> 01:22:47,360
it's not actually a JavaScript concept

1826
01:22:47,360 --> 01:22:50,600
itself but it's very important is how to

1827
01:22:50,600 --> 01:22:53,520
modularize your code there are other

1828
01:22:53,520 --> 01:22:56,000
Concepts uh JavaScript I've purposely

1829
01:22:56,000 --> 01:22:59,639
left uh unexplained and not in this

1830
01:22:59,639 --> 01:23:02,840
course just so to not uh make it too

1831
01:23:02,840 --> 01:23:04,679
heavy for you as an introduction but now

1832
01:23:04,679 --> 01:23:06,880
this is very something very important

1833
01:23:06,880 --> 01:23:09,120
let's say you want to you cannot for

1834
01:23:09,120 --> 01:23:11,440
small programs you can write your Co

1835
01:23:11,440 --> 01:23:14,360
code all in a single file but as soon as

1836
01:23:14,360 --> 01:23:17,040
you become more your your projects

1837
01:23:17,040 --> 01:23:20,159
become more complex it it's going to

1838
01:23:20,159 --> 01:23:22,560
become time to be able to split that

1839
01:23:22,560 --> 01:23:24,800
into multiple different files and the

1840
01:23:24,800 --> 01:23:26,560
way to do that in JavaScript using this

1841
01:23:26,560 --> 01:23:29,320
setup is simple there's the old way and

1842
01:23:29,320 --> 01:23:31,840
there's the new way the old way is that

1843
01:23:31,840 --> 01:23:34,159
if you want to use multiple files the

1844
01:23:34,159 --> 01:23:36,360
way you do that is you let's say I

1845
01:23:36,360 --> 01:23:38,719
create another code file and I would say

1846
01:23:38,719 --> 01:23:41,280
for example UT tails. JS which is going

1847
01:23:41,280 --> 01:23:44,199
to contain a few functions that allows

1848
01:23:44,199 --> 01:23:46,719
certain operations like say number one

1849
01:23:46,719 --> 01:23:49,040
number

1850
01:23:49,280 --> 01:23:53,440
two so this is going to return the sum

1851
01:23:53,440 --> 01:23:56,280
between those two numbers numbers it's a

1852
01:23:56,280 --> 01:23:58,760
reusable piece of code I want to use in

1853
01:23:58,760 --> 01:24:01,159
my main.js the way you would do you

1854
01:24:01,159 --> 01:24:04,159
would import it in the old way is you

1855
01:24:04,159 --> 01:24:06,480
would go back to your HTML you would add

1856
01:24:06,480 --> 01:24:09,600
a script tag source and then the path

1857
01:24:09,600 --> 01:24:12,440
towards that

1858
01:24:12,440 --> 01:24:15,000
file and then uh don't forget the

1859
01:24:15,000 --> 01:24:17,360
closing brackets and then you would go

1860
01:24:17,360 --> 01:24:19,840
into your main Dess and then you you

1861
01:24:19,840 --> 01:24:22,000
would be able to call that function

1862
01:24:22,000 --> 01:24:24,040
where the is numbers you want so you'll

1863
01:24:24,040 --> 01:24:26,760
be able to use that function in that is

1864
01:24:26,760 --> 01:24:29,880
in the utils file from within your

1865
01:24:29,880 --> 01:24:33,239
main.js file so if I look at the result

1866
01:24:33,239 --> 01:24:35,360
you can see that it actually works now

1867
01:24:35,360 --> 01:24:38,120
this is the old way and this will

1868
01:24:38,120 --> 01:24:41,840
quickly become very messy as you go you

1869
01:24:41,840 --> 01:24:44,360
add a lot of script tags this is not the

1870
01:24:44,360 --> 01:24:46,840
the way to go because recently well

1871
01:24:46,840 --> 01:24:48,800
relatively recently there is something

1872
01:24:48,800 --> 01:24:51,639
called a JavaScript module so JavaScript

1873
01:24:51,639 --> 01:24:53,360
module what it allows you to do is to

1874
01:24:53,360 --> 01:24:54,960
use an import

1875
01:24:54,960 --> 01:24:57,880
sytax so instead of having your file

1876
01:24:57,880 --> 01:25:01,119
here uh you can just use the add

1877
01:25:01,119 --> 01:25:03,000
function out of nowhere like that

1878
01:25:03,000 --> 01:25:05,440
because you added the script tag before

1879
01:25:05,440 --> 01:25:07,159
and by the way with this old way the

1880
01:25:07,159 --> 01:25:10,440
order of which you import your script

1881
01:25:10,440 --> 01:25:13,239
tag is important because if you import I

1882
01:25:13,239 --> 01:25:16,080
think the script tag afterwards so let's

1883
01:25:16,080 --> 01:25:18,679
try it out just to make

1884
01:25:18,679 --> 01:25:22,239
sure if I do

1885
01:25:22,239 --> 01:25:25,760
code utils so let's say say I import the

1886
01:25:25,760 --> 01:25:28,600
utils the add function after declaring

1887
01:25:28,600 --> 01:25:30,320
now it's not going to work so here if I

1888
01:25:30,320 --> 01:25:32,480
look at the result you can say add is

1889
01:25:32,480 --> 01:25:34,840
not defined so that was one of the very

1890
01:25:34,840 --> 01:25:36,639
tricky things is that you need to be

1891
01:25:36,639 --> 01:25:38,679
careful with the order in which you

1892
01:25:38,679 --> 01:25:41,400
import you put your script tags so

1893
01:25:41,400 --> 01:25:43,080
that's really not the way to go I think

1894
01:25:43,080 --> 01:25:46,760
today so the way to go is to use

1895
01:25:46,760 --> 01:25:50,040
the JavaScript module feature which what

1896
01:25:50,040 --> 01:25:52,920
happens is that you specify a type the

1897
01:25:52,920 --> 01:25:55,159
type attribute

1898
01:25:55,159 --> 01:25:57,000
and what you're telling the H the

1899
01:25:57,000 --> 01:26:00,600
browser is that this type the the the JS

1900
01:26:00,600 --> 01:26:02,400
file is going to be of the type module

1901
01:26:02,400 --> 01:26:05,040
that means that you can use the new uh

1902
01:26:05,040 --> 01:26:08,040
import syntax so how does it work is the

1903
01:26:08,040 --> 01:26:10,280
following so I have in

1904
01:26:10,280 --> 01:26:12,840
.js I can add

1905
01:26:12,840 --> 01:26:16,480
export the export keyword and then from

1906
01:26:16,480 --> 01:26:19,440
the main.js I can do

1907
01:26:19,440 --> 01:26:22,480
import and then using bracket seed add

1908
01:26:22,480 --> 01:26:25,080
from utils you need to add

1909
01:26:25,080 --> 01:26:27,480
JS so UIL here is the

1910
01:26:27,480 --> 01:26:29,800
path the path where the function is

1911
01:26:29,800 --> 01:26:32,600
defined now here it's within brackets if

1912
01:26:32,600 --> 01:26:34,679
you just use the export but if you use

1913
01:26:34,679 --> 01:26:37,679
export default that means the only thing

1914
01:26:37,679 --> 01:26:40,000
exported uh the the named export is

1915
01:26:40,000 --> 01:26:41,960
going to be add directly so you're going

1916
01:26:41,960 --> 01:26:45,199
to do like that and now the add function

1917
01:26:45,199 --> 01:26:47,320
is going to be available and it's going

1918
01:26:47,320 --> 01:26:50,760
to run now the export unexpected token

1919
01:26:50,760 --> 01:26:55,440
export uh export default

1920
01:26:55,440 --> 01:27:00,040
uh why why is it not working

1921
01:27:00,040 --> 01:27:03,520
um Let me let me remove this let's see

1922
01:27:03,520 --> 01:27:06,239
if it actually

1923
01:27:07,000 --> 01:27:09,800
works UIL does not provide an export

1924
01:27:09,800 --> 01:27:12,600
name

1925
01:27:12,760 --> 01:27:16,159
default uh wait a minute so if I do this

1926
01:27:16,159 --> 01:27:20,000
like that okay okay so if you do export

1927
01:27:20,000 --> 01:27:21,320
and then you need to put this within

1928
01:27:21,320 --> 01:27:24,320
brackets

1929
01:27:25,679 --> 01:27:27,920
if I go to the result it prints out but

1930
01:27:27,920 --> 01:27:33,239
unexpected token export syntax error

1931
01:27:33,239 --> 01:27:36,000
.js if I go here okay by the way you

1932
01:27:36,000 --> 01:27:37,440
need to remove this otherwise you're

1933
01:27:37,440 --> 01:27:39,440
going to get an error so with this new

1934
01:27:39,440 --> 01:27:41,239
method you only need to import the entry

1935
01:27:41,239 --> 01:27:44,520
point which is the JS file the main.js

1936
01:27:44,520 --> 01:27:46,600
your actual this doesn't have to be

1937
01:27:46,600 --> 01:27:48,920
called main.js it's just the name you

1938
01:27:48,920 --> 01:27:51,280
decide on the entry point and then you

1939
01:27:51,280 --> 01:27:53,560
give it the type module when you're

1940
01:27:53,560 --> 01:27:55,960
importing it to your HTML with the

1941
01:27:55,960 --> 01:27:58,159
script tag and then you can have access

1942
01:27:58,159 --> 01:28:00,560
to the import syntax so you can in other

1943
01:28:00,560 --> 01:28:04,199
JS files you can do uh export function

1944
01:28:04,199 --> 01:28:06,280
Etc and then you can import with

1945
01:28:06,280 --> 01:28:08,600
brackets if you don't want brackets and

1946
01:28:08,600 --> 01:28:10,719
import directly you can have default but

1947
01:28:10,719 --> 01:28:12,360
I think you can only have one if you do

1948
01:28:12,360 --> 01:28:14,360
this so you might want to have a file

1949
01:28:14,360 --> 01:28:15,600
where you have multiple functions you

1950
01:28:15,600 --> 01:28:17,280
want to export individually you can use

1951
01:28:17,280 --> 01:28:19,360
the export keyword for them so export

1952
01:28:19,360 --> 01:28:21,280
function add export export function

1953
01:28:21,280 --> 01:28:23,679
multiply Etc but if you want to have

1954
01:28:23,679 --> 01:28:26,880
only one you can do a default and then

1955
01:28:26,880 --> 01:28:28,600
and you can mix I think you can mix so

1956
01:28:28,600 --> 01:28:29,880
you can have a default and then you can

1957
01:28:29,880 --> 01:28:32,480
have export function test let's say

1958
01:28:32,480 --> 01:28:34,600
let's say an empty function like that

1959
01:28:34,600 --> 01:28:36,880
and then that means here that while the

1960
01:28:36,880 --> 01:28:39,360
add function is going to be you can act

1961
01:28:39,360 --> 01:28:41,159
add it directly like that so if I look

1962
01:28:41,159 --> 01:28:43,800
at the result here you can also do a

1963
01:28:43,800 --> 01:28:47,600
comma and then have test as well as the

1964
01:28:47,600 --> 01:28:50,800
other name export you can use so if I go

1965
01:28:50,800 --> 01:28:54,159
here okay I haven't used it but yeah so

1966
01:28:54,159 --> 01:28:57,199
that's the the way to go uh I would say

1967
01:28:57,199 --> 01:29:00,239
all right so now we're ready to start

1968
01:29:00,239 --> 01:29:04,440
making games so and uh before that it's

1969
01:29:04,440 --> 01:29:07,840
time to just talk about what is a

1970
01:29:07,840 --> 01:29:11,760
library and I briefly covered it uh

1971
01:29:11,760 --> 01:29:14,320
later on uh earlier on sorry so a

1972
01:29:14,320 --> 01:29:16,719
library is code that is written by

1973
01:29:16,719 --> 01:29:19,560
someone else that you can reuse in your

1974
01:29:19,560 --> 01:29:21,480
own projects which allows you to not

1975
01:29:21,480 --> 01:29:24,760
have to reinvent the wheel and Library I

1976
01:29:24,760 --> 01:29:27,679
really like to use to make games is

1977
01:29:27,679 --> 01:29:30,679
called CAP playay by the way that's the

1978
01:29:30,679 --> 01:29:33,239
library and uh I have a whole crash

1979
01:29:33,239 --> 01:29:35,960
course that teaches you how to use it

1980
01:29:35,960 --> 01:29:37,840
all the the functions not all of them

1981
01:29:37,840 --> 01:29:39,880
but the main ones and you have a

1982
01:29:39,880 --> 01:29:41,800
playground where you can see examples

1983
01:29:41,800 --> 01:29:44,239
Etc so this a a really really cool

1984
01:29:44,239 --> 01:29:46,960
library to use to make games which

1985
01:29:46,960 --> 01:29:49,159
provides you with a bunch of things out

1986
01:29:49,159 --> 01:29:52,600
of the box to make games so let's use it

1987
01:29:52,600 --> 01:29:54,800
and make a simple platform

1988
01:29:54,800 --> 01:29:57,480
so here is where things are going to be

1989
01:29:57,480 --> 01:30:00,679
get different is that for now we have

1990
01:30:00,679 --> 01:30:04,600
written our code using this setup where

1991
01:30:04,600 --> 01:30:07,280
we create a local host server and then

1992
01:30:07,280 --> 01:30:09,440
with just index and HTML you can

1993
01:30:09,440 --> 01:30:12,000
actually uh start working on your game

1994
01:30:12,000 --> 01:30:14,600
this is all fine but this is not how

1995
01:30:14,600 --> 01:30:18,520
modern web development is done uh we

1996
01:30:18,520 --> 01:30:22,679
used nodejs and a the npm package

1997
01:30:22,679 --> 01:30:26,119
manager and a bunch of other flavors to

1998
01:30:26,119 --> 01:30:29,719
uh write our web code so I'm going to

1999
01:30:29,719 --> 01:30:32,280
explain how to set up that as well now

2000
01:30:32,280 --> 01:30:34,840
you could use K playay with just a

2001
01:30:34,840 --> 01:30:37,159
script tag the way you would do that is

2002
01:30:37,159 --> 01:30:39,800
you simply go to I think I need to go on

2003
01:30:39,800 --> 01:30:40,480
the

2004
01:30:40,480 --> 01:30:43,119
GitHub or in the installing K playay you

2005
01:30:43,119 --> 01:30:44,960
have the installation guide what you do

2006
01:30:44,960 --> 01:30:50,639
is you could have this thing here I copy

2007
01:30:50,639 --> 01:30:54,440
that and then you can basically have

2008
01:30:54,440 --> 01:30:56,800
that

2009
01:30:57,159 --> 01:31:00,360
here and then by the way even I just

2010
01:31:00,360 --> 01:31:03,159
need this first statement basically so

2011
01:31:03,159 --> 01:31:05,760
here I so the simplest way to import

2012
01:31:05,760 --> 01:31:08,360
capay is this so I'm going to just go

2013
01:31:08,360 --> 01:31:12,400
back to our main here can go here at the

2014
01:31:12,400 --> 01:31:14,840
top I can use the import statement using

2015
01:31:14,840 --> 01:31:16,639
native modules and it's going to import

2016
01:31:16,639 --> 01:31:18,960
the C player Library which is going to

2017
01:31:18,960 --> 01:31:21,440
bring you this capl name it's going to

2018
01:31:21,440 --> 01:31:24,280
import it from this link this URL which

2019
01:31:24,280 --> 01:31:27,679
host hosts the library as a MJS file

2020
01:31:27,679 --> 01:31:31,639
which is for module Javascript file so

2021
01:31:31,639 --> 01:31:33,080
now that you have that you can actually

2022
01:31:33,080 --> 01:31:34,960
start making your game so if I call the

2023
01:31:34,960 --> 01:31:36,040
capl

2024
01:31:36,040 --> 01:31:39,199
function which is provided by capl it's

2025
01:31:39,199 --> 01:31:42,119
going to initialize a canvas on your web

2026
01:31:42,119 --> 01:31:46,239
page so canvas is an HTML element that

2027
01:31:46,239 --> 01:31:48,840
allows you to work with graphics and

2028
01:31:48,840 --> 01:31:50,320
this is basically what you use for

2029
01:31:50,320 --> 01:31:51,600
making games in

2030
01:31:51,600 --> 01:31:54,400
JavaScript so you have here the canvas

2031
01:31:54,400 --> 01:31:57,280
now this uh this uh setup is all fine

2032
01:31:57,280 --> 01:31:58,719
you can start working and making your

2033
01:31:58,719 --> 01:32:01,639
games I usually prefer to download uh

2034
01:32:01,639 --> 01:32:04,040
the file at this link and then locally

2035
01:32:04,040 --> 01:32:06,800
put it in my project and then import

2036
01:32:06,800 --> 01:32:09,280
from that locally without having to rely

2037
01:32:09,280 --> 01:32:11,639
on the link being up otherwise if it

2038
01:32:11,639 --> 01:32:14,239
goes down one day uh your game will not

2039
01:32:14,239 --> 01:32:16,920
work but I want to try something

2040
01:32:16,920 --> 01:32:19,159
different just to teach you I want to

2041
01:32:19,159 --> 01:32:21,000
actually do it the way it web

2042
01:32:21,000 --> 01:32:23,440
development is done in the modern way

2043
01:32:23,440 --> 01:32:24,440
using

2044
01:32:24,440 --> 01:32:27,199
nodejs so nodejs is what you're going to

2045
01:32:27,199 --> 01:32:28,760
need to install on your machine it

2046
01:32:28,760 --> 01:32:31,520
allows you to run JavaScript on the

2047
01:32:31,520 --> 01:32:34,320
actual computer uh outside of the

2048
01:32:34,320 --> 01:32:36,920
browser now we use nodejs because we can

2049
01:32:36,920 --> 01:32:40,239
use npm uh a bunch of package managers

2050
01:32:40,239 --> 01:32:41,800
allows you to use a bunch of libraries

2051
01:32:41,800 --> 01:32:44,920
Etc but uh by the at the end of the day

2052
01:32:44,920 --> 01:32:46,880
our code is still going to run on the

2053
01:32:46,880 --> 01:32:48,880
browser it's just going to pass through

2054
01:32:48,880 --> 01:32:52,280
node.js it's going to be compiled into

2055
01:32:52,280 --> 01:32:54,440
JavaScript that can run on the web so

2056
01:32:54,440 --> 01:32:57,080
JavaScript that runs on the computer

2057
01:32:57,080 --> 01:32:58,840
using nodejs and JavaScript that runs on

2058
01:32:58,840 --> 01:33:01,080
the web are different they're mostly the

2059
01:33:01,080 --> 01:33:02,719
same but they're different and that's

2060
01:33:02,719 --> 01:33:04,560
why you need a compile step where it

2061
01:33:04,560 --> 01:33:07,000
compiles your JavaScript code that runs

2062
01:33:07,000 --> 01:33:11,400
in node.js and then compiles it to a

2063
01:33:11,400 --> 01:33:13,320
JavaScript code that can run in the

2064
01:33:13,320 --> 01:33:16,280
browser so the reason we did this is

2065
01:33:16,280 --> 01:33:19,840
because um in the past javascri no J

2066
01:33:19,840 --> 01:33:22,800
JavaScript uh implemented the JavaScript

2067
01:33:22,800 --> 01:33:26,040
standard I think uh more in a more

2068
01:33:26,040 --> 01:33:30,320
advanced way so it had a it implemented

2069
01:33:30,320 --> 01:33:34,040
new features faster I think and uh if

2070
01:33:34,040 --> 01:33:35,480
you wanted to have a nice development

2071
01:33:35,480 --> 01:33:38,159
experience you had to use nodejs to get

2072
01:33:38,159 --> 01:33:40,480
that and it would compile the code back

2073
01:33:40,480 --> 01:33:42,400
to JavaScript that could be used on the

2074
01:33:42,400 --> 01:33:43,920
browser which was less

2075
01:33:43,920 --> 01:33:46,320
Advanced so that's I think that's the

2076
01:33:46,320 --> 01:33:50,520
gist of it and but for really for this

2077
01:33:50,520 --> 01:33:52,119
you the only thing you need to

2078
01:33:52,119 --> 01:33:55,280
understand is that we need no JS we need

2079
01:33:55,280 --> 01:33:57,679
npm which comes with

2080
01:33:57,679 --> 01:34:00,920
nodejs and we need a bundler which is

2081
01:34:00,920 --> 01:34:03,360
going to actually do the work to

2082
01:34:03,360 --> 01:34:05,280
compiling the JavaScript code that runs

2083
01:34:05,280 --> 01:34:08,239
on nodejs into JavaScript code that runs

2084
01:34:08,239 --> 01:34:11,440
in the browser so this bundler is going

2085
01:34:11,440 --> 01:34:14,440
to be called vit and it's very like it's

2086
01:34:14,440 --> 01:34:16,719
it's it's newish and it's very like now

2087
01:34:16,719 --> 01:34:18,600
it's used everywhere so it's very

2088
01:34:18,600 --> 01:34:20,840
convenient to use and then after I teach

2089
01:34:20,840 --> 01:34:22,040
you how to make the platform I'm going

2090
01:34:22,040 --> 01:34:24,320
to actually teach you how to put it on

2091
01:34:24,320 --> 01:34:27,440
.io or some other how how to put your

2092
01:34:27,440 --> 01:34:29,440
how to publish it on the web and that

2093
01:34:29,440 --> 01:34:31,360
would be the end of this crash course

2094
01:34:31,360 --> 01:34:32,800
all right so now what I'm going to need

2095
01:34:32,800 --> 01:34:34,480
you to do is to install

2096
01:34:34,480 --> 01:34:36,960
nodejs so there's plenty of learning

2097
01:34:36,960 --> 01:34:38,880
materials and guides on how to do that

2098
01:34:38,880 --> 01:34:40,920
so I'm not going to do the installation

2099
01:34:40,920 --> 01:34:44,159
process with you so once you you've done

2100
01:34:44,159 --> 01:34:46,800
with you're done with it uh come back so

2101
01:34:46,800 --> 01:34:48,800
here we go in our editor I'm just going

2102
01:34:48,800 --> 01:34:50,719
to remove everything that we've created

2103
01:34:50,719 --> 01:34:53,360
so far so here I'm going to delete

2104
01:34:53,360 --> 01:34:55,000
everything

2105
01:34:55,000 --> 01:34:57,800
thing everything permanently and this is

2106
01:34:57,800 --> 01:34:59,679
where I'm going to open up the terminal

2107
01:34:59,679 --> 01:35:00,679
by

2108
01:35:00,679 --> 01:35:03,520
sliding my cursor here you could have

2109
01:35:03,520 --> 01:35:05,199
slideing here you're going to have the

2110
01:35:05,199 --> 01:35:08,280
terminal like that so now I'm going to

2111
01:35:08,280 --> 01:35:11,719
remove this I'm going to remove that I'm

2112
01:35:11,719 --> 01:35:13,880
going to remove this so we're going to

2113
01:35:13,880 --> 01:35:16,080
have only the terminal window here uh my

2114
01:35:16,080 --> 01:35:18,000
screen is big on purpose I don't

2115
01:35:18,000 --> 01:35:19,840
actually develop like that but it's just

2116
01:35:19,840 --> 01:35:22,360
for the video so that you can have a a

2117
01:35:22,360 --> 01:35:23,960
good view of things so if you have

2118
01:35:23,960 --> 01:35:26,880
nodejs installed you need to do node

2119
01:35:26,880 --> 01:35:30,119
uh-- version to see that you have

2120
01:35:30,119 --> 01:35:33,239
actually nodejs installed so here I have

2121
01:35:33,239 --> 01:35:34,560
version

2122
01:35:34,560 --> 01:35:37,400
20.11 I think the actual most current

2123
01:35:37,400 --> 01:35:40,199
version is 22.5 point1 so I should

2124
01:35:40,199 --> 01:35:42,880
probably update soon okay long-term

2125
01:35:42,880 --> 01:35:44,679
support so I have the long-term support

2126
01:35:44,679 --> 01:35:46,639
version all right so now what I'm going

2127
01:35:46,639 --> 01:35:48,159
to do is that once you have node.js

2128
01:35:48,159 --> 01:35:51,360
installed you have access to npm as well

2129
01:35:51,360 --> 01:35:54,360
and uh you also going to add have access

2130
01:35:54,360 --> 01:35:56,840
to npm based commands so here I'm going

2131
01:35:56,840 --> 01:35:59,159
to create the project so I have the the

2132
01:35:59,159 --> 01:36:01,360
folder learn JS which is the folder I

2133
01:36:01,360 --> 01:36:04,480
was in all that time ago and what I'm

2134
01:36:04,480 --> 01:36:09,040
going to do I'm going to do npm create

2135
01:36:09,040 --> 01:36:13,880
vit at latest dot so this command npm

2136
01:36:13,880 --> 01:36:17,000
create V at latest dot is a quick start

2137
01:36:17,000 --> 01:36:19,639
command that is offered by the vit

2138
01:36:19,639 --> 01:36:21,440
bundler which is what I've mentioned

2139
01:36:21,440 --> 01:36:24,719
earlier on and I use dot here so it's

2140
01:36:24,719 --> 01:36:26,400
going to use the latest version so

2141
01:36:26,400 --> 01:36:28,360
that's why it's at latest you can

2142
01:36:28,360 --> 01:36:30,159
specify specific version but I prefer

2143
01:36:30,159 --> 01:36:32,520
for this to use the latest version do

2144
01:36:32,520 --> 01:36:34,040
means that it's going to create

2145
01:36:34,040 --> 01:36:35,719
everything from within the folder we're

2146
01:36:35,719 --> 01:36:38,080
currently in if you wanted to create it

2147
01:36:38,080 --> 01:36:41,280
in its own folder you would type in a

2148
01:36:41,280 --> 01:36:44,239
name here that you want the folder to be

2149
01:36:44,239 --> 01:36:46,600
and then here if I press

2150
01:36:46,600 --> 01:36:49,280
enter it's going to give me a few

2151
01:36:49,280 --> 01:36:52,800
options so select a framework and then

2152
01:36:52,800 --> 01:36:54,320
here we're going to go with vanilla we

2153
01:36:54,320 --> 01:36:56,400
not we're not going to use react preact

2154
01:36:56,400 --> 01:37:00,119
Etc which are web Frameworks so going to

2155
01:37:00,119 --> 01:37:02,159
uh press enter on the vanilla option

2156
01:37:02,159 --> 01:37:04,280
using gar keys and then selecting then

2157
01:37:04,280 --> 01:37:06,960
enter and then between typescript and

2158
01:37:06,960 --> 01:37:09,159
JavaScript typescript is like JavaScript

2159
01:37:09,159 --> 01:37:12,719
with types it's uh it's becoming more

2160
01:37:12,719 --> 01:37:15,199
aitous I guess uh used professionally

2161
01:37:15,199 --> 01:37:16,800
because it makes your code easier to

2162
01:37:16,800 --> 01:37:18,800
reason about uh we're going to use

2163
01:37:18,800 --> 01:37:21,280
JavaScript for this project so by the by

2164
01:37:21,280 --> 01:37:24,159
the way if you know JavaScript it's

2165
01:37:24,159 --> 01:37:26,440
going to be easier for you later on to

2166
01:37:26,440 --> 01:37:28,960
learn typescript if you want to so now

2167
01:37:28,960 --> 01:37:30,800
that we have selected our JavaScript we

2168
01:37:30,800 --> 01:37:34,119
have a scaffold project so we have a few

2169
01:37:34,119 --> 01:37:36,520
folders and I'm going to go over them uh

2170
01:37:36,520 --> 01:37:39,599
here it tells you to run npm install npm

2171
01:37:39,599 --> 01:37:41,159
install is the general command to

2172
01:37:41,159 --> 01:37:42,960
install all the dependencies that are

2173
01:37:42,960 --> 01:37:46,239
listed in the package.json and

2174
01:37:46,239 --> 01:37:48,880
package.json is the actual file that is

2175
01:37:48,880 --> 01:37:51,239
very important to understand because it

2176
01:37:51,239 --> 01:37:53,040
defines your dependencies and the

2177
01:37:53,040 --> 01:37:55,719
various commands you have access to so

2178
01:37:55,719 --> 01:37:57,760
here our package.json have a name which

2179
01:37:57,760 --> 01:37:59,320
is the name of the project the version

2180
01:37:59,320 --> 01:38:02,480
you can decide it on which version the

2181
01:38:02,480 --> 01:38:04,360
type module this allows us to have the

2182
01:38:04,360 --> 01:38:07,480
import syntax uh using the JavaScript

2183
01:38:07,480 --> 01:38:10,840
modules this the import from and Export

2184
01:38:10,840 --> 01:38:13,239
thing here import from

2185
01:38:13,239 --> 01:38:16,639
Etc so package.json the scripts we have

2186
01:38:16,639 --> 01:38:19,040
access to is the dev script which will

2187
01:38:19,040 --> 01:38:22,679
run vit so typing npm run Dev in the

2188
01:38:22,679 --> 01:38:25,760
terminal we one vit which is the bundler

2189
01:38:25,760 --> 01:38:28,480
we're using which basically compiles our

2190
01:38:28,480 --> 01:38:32,199
code from JavaScript that is runs on NOS

2191
01:38:32,199 --> 01:38:33,960
in JavaScript that runs on the browser

2192
01:38:33,960 --> 01:38:36,840
now we also have the build command here

2193
01:38:36,840 --> 01:38:38,679
accessible to us which allows us to

2194
01:38:38,679 --> 01:38:40,360
build our project for the web this going

2195
01:38:40,360 --> 01:38:42,760
to be coming in handy when we're going

2196
01:38:42,760 --> 01:38:45,080
going to actually build the project and

2197
01:38:45,080 --> 01:38:47,520
uh publish it somewhere and then V

2198
01:38:47,520 --> 01:38:51,119
preview previews the build so Dev is

2199
01:38:51,119 --> 01:38:53,159
when in development preview is when you

2200
01:38:53,159 --> 01:38:54,639
have build the project you want to see

2201
01:38:54,639 --> 01:38:56,440
if that everything works correctly and

2202
01:38:56,440 --> 01:38:59,480
then Dev dependencies is the V bundler

2203
01:38:59,480 --> 01:39:00,639
tool

2204
01:39:00,639 --> 01:39:03,920
here so here there's not really much to

2205
01:39:03,920 --> 01:39:06,599
do except like we need to do npm install

2206
01:39:06,599 --> 01:39:09,760
so let's do that npm install in our

2207
01:39:09,760 --> 01:39:11,360
terminal it's going to install the

2208
01:39:11,360 --> 01:39:13,920
dependencies the the dev dependencies

2209
01:39:13,920 --> 01:39:16,560
probably yeah and it's going to add a

2210
01:39:16,560 --> 01:39:19,599
node underscore underscore modules

2211
01:39:19,599 --> 01:39:23,040
folder this nodecore modules is actually

2212
01:39:23,040 --> 01:39:26,320
where the code for the various libraries

2213
01:39:26,320 --> 01:39:28,760
you're using is going to be stored

2214
01:39:28,760 --> 01:39:30,960
usually you have a dogit ignore that

2215
01:39:30,960 --> 01:39:34,000
ignores that folder so git is another

2216
01:39:34,000 --> 01:39:36,080
thing you need to learn about uh I'm

2217
01:39:36,080 --> 01:39:37,800
going to leave this for another video

2218
01:39:37,800 --> 01:39:40,239
but git is very handy uh when you're

2219
01:39:40,239 --> 01:39:43,000
working on projects uh you you push them

2220
01:39:43,000 --> 01:39:45,159
to GitHub for example you have you can

2221
01:39:45,159 --> 01:39:47,560
have branches commits Etc allows you to

2222
01:39:47,560 --> 01:39:50,320
track your development Etc very nicely

2223
01:39:50,320 --> 01:39:51,920
I'm not going to touch the file today

2224
01:39:51,920 --> 01:39:53,679
I'm not going to explain what get is

2225
01:39:53,679 --> 01:39:55,639
today but I recommend watching a video

2226
01:39:55,639 --> 01:39:58,480
on kit uh I think you are watching a

2227
01:39:58,480 --> 01:40:01,480
video or reading about it it's very

2228
01:40:01,480 --> 01:40:04,920
useful okay so package. lock. Json is

2229
01:40:04,920 --> 01:40:07,360
not really important but it contains the

2230
01:40:07,360 --> 01:40:09,840
versions of each of our modules Etc but

2231
01:40:09,840 --> 01:40:12,040
package.json if you have a project

2232
01:40:12,040 --> 01:40:14,520
someone gives you a nodejs project and

2233
01:40:14,520 --> 01:40:16,800
has a package.json it's going to be very

2234
01:40:16,800 --> 01:40:19,400
straightforward uh you just uh npm

2235
01:40:19,400 --> 01:40:20,800
install it's going to list the

2236
01:40:20,800 --> 01:40:23,679
dependencies ETC so that's really great

2237
01:40:23,679 --> 01:40:26,040
now here we have an index.html with a

2238
01:40:26,040 --> 01:40:28,599
bunch of HTML that is irrelevant to our

2239
01:40:28,599 --> 01:40:30,520
project what I'm going to do is I'm

2240
01:40:30,520 --> 01:40:31,719
going to remove it everything I'm going

2241
01:40:31,719 --> 01:40:32,880
to remove everything I'm going to put

2242
01:40:32,880 --> 01:40:36,440
back HTML and the body tag by the way if

2243
01:40:36,440 --> 01:40:38,239
you want to go more into web development

2244
01:40:38,239 --> 01:40:40,560
I would recommend learning HTML CSS as

2245
01:40:40,560 --> 01:40:43,960
well more in depth here the script tag

2246
01:40:43,960 --> 01:40:45,960
we're going to use the exact same code

2247
01:40:45,960 --> 01:40:48,960
structure structure sorry I'm also going

2248
01:40:48,960 --> 01:40:51,440
to remove javascript. SVG with which is

2249
01:40:51,440 --> 01:40:54,320
just a logo I'm going to remove s. CSS

2250
01:40:54,320 --> 01:40:56,400
I'm going to remove counter all of these

2251
01:40:56,400 --> 01:40:59,920
are not necessary for a

2252
01:41:00,320 --> 01:41:03,920
project we have public uh as for the

2253
01:41:03,920 --> 01:41:05,480
public folder I'm going to keep it this

2254
01:41:05,480 --> 01:41:08,679
is where you put your assets uh but

2255
01:41:08,679 --> 01:41:10,159
actually it's not necessary for this

2256
01:41:10,159 --> 01:41:11,639
project I think we're going to do

2257
01:41:11,639 --> 01:41:13,960
without but let's keep it for now so

2258
01:41:13,960 --> 01:41:15,679
what I'm going to do is in

2259
01:41:15,679 --> 01:41:18,280
index.html um at the same level I'm

2260
01:41:18,280 --> 01:41:19,480
going to create a folder I'm going to

2261
01:41:19,480 --> 01:41:22,159
call it code like I did and here I'm

2262
01:41:22,159 --> 01:41:25,239
going to create our main JS file I

2263
01:41:25,239 --> 01:41:26,400
should have probably just drag and

2264
01:41:26,400 --> 01:41:27,800
dropped but because we're not going to

2265
01:41:27,800 --> 01:41:29,320
use any of the code I'm just going to

2266
01:41:29,320 --> 01:41:32,440
delete that one in index. HTML I'm going

2267
01:41:32,440 --> 01:41:38,400
to use the source as uh code

2268
01:41:38,400 --> 01:41:41,719
main.js and then as as the path and

2269
01:41:41,719 --> 01:41:44,199
don't forget to actually set the type

2270
01:41:44,199 --> 01:41:47,480
for this as a

2271
01:41:48,199 --> 01:41:51,679
module and then here I don't think you

2272
01:41:51,679 --> 01:41:53,800
need that um if I

2273
01:41:53,800 --> 01:41:57,360
let me just look at what was there

2274
01:41:57,719 --> 01:42:00,080
previously the original yeah it was

2275
01:42:00,080 --> 01:42:04,040
there so never mind so like we did in in

2276
01:42:04,040 --> 01:42:06,920
our simple setup we're going to do the

2277
01:42:06,920 --> 01:42:08,880
exact same thing here now you might be

2278
01:42:08,880 --> 01:42:11,960
wondering like why should I use npm well

2279
01:42:11,960 --> 01:42:14,000
actually you don't have to uh the reason

2280
01:42:14,000 --> 01:42:16,400
you would use it is maybe you want um

2281
01:42:16,400 --> 01:42:18,800
one of the advantage of using a bundler

2282
01:42:18,800 --> 01:42:21,800
that you can you do with npm is that

2283
01:42:21,800 --> 01:42:24,000
you're going to be able to have your

2284
01:42:24,000 --> 01:42:26,320
code minified into a single file which

2285
01:42:26,320 --> 01:42:29,119
is going to make it uh load faster in

2286
01:42:29,119 --> 01:42:31,280
the browser that's one of the main

2287
01:42:31,280 --> 01:42:34,360
advantages but otherwise um and also

2288
01:42:34,360 --> 01:42:36,119
it's going to be make your code less

2289
01:42:36,119 --> 01:42:38,119
readable to someone who wants to copy

2290
01:42:38,119 --> 01:42:40,440
you but even then minifying code is not

2291
01:42:40,440 --> 01:42:43,280
really a good security measure to

2292
01:42:43,280 --> 01:42:44,840
protect your code from reverse

2293
01:42:44,840 --> 01:42:46,800
engineering because since your code is

2294
01:42:46,800 --> 01:42:48,840
in the users browser there's nothing

2295
01:42:48,840 --> 01:42:51,400
pretty much you can do now now if you

2296
01:42:51,400 --> 01:42:53,239
want to

2297
01:42:53,239 --> 01:42:55,599
make a paid game I would just recommend

2298
01:42:55,599 --> 01:42:58,639
uh you know uh wrapping it as a desktop

2299
01:42:58,639 --> 01:43:01,040
app and I think you have more uh

2300
01:43:01,040 --> 01:43:03,599
security features but anyway I think if

2301
01:43:03,599 --> 01:43:06,679
anyone sufficiently motivated to reverse

2302
01:43:06,679 --> 01:43:09,639
engineering you reverse engineer you is

2303
01:43:09,639 --> 01:43:11,599
going to do it is going to be able to do

2304
01:43:11,599 --> 01:43:14,639
it uh but it it shouldn't be a a

2305
01:43:14,639 --> 01:43:16,719
showstopper I would say for example

2306
01:43:16,719 --> 01:43:18,800
there are many games where you have

2307
01:43:18,800 --> 01:43:20,560
access to this full source code for

2308
01:43:20,560 --> 01:43:23,800
example balatro uh is a game

2309
01:43:23,800 --> 01:43:27,639
made in Lua with love 2D and I saw I saw

2310
01:43:27,639 --> 01:43:29,599
a video on YouTube I think it was from

2311
01:43:29,599 --> 01:43:33,560
the Channel games from scratch where

2312
01:43:33,560 --> 01:43:36,920
the he he showed how you could have you

2313
01:43:36,920 --> 01:43:38,440
could access easily the source code

2314
01:43:38,440 --> 01:43:40,599
because if you use love love 2D which is

2315
01:43:40,599 --> 01:43:42,800
the framework that for making games with

2316
01:43:42,800 --> 01:43:45,760
love with Lua uh your code isn't really

2317
01:43:45,760 --> 01:43:47,960
protected you can because the way you

2318
01:43:47,960 --> 01:43:50,960
get the executable is just you zip your

2319
01:43:50,960 --> 01:43:53,639
your your source code and you do

2320
01:43:53,639 --> 01:43:55,320
something that transforms

2321
01:43:55,320 --> 01:43:58,400
intoe and then you can just open it up

2322
01:43:58,400 --> 01:44:00,360
open it back up as a zip or something

2323
01:44:00,360 --> 01:44:02,080
like that so you could see the whole

2324
01:44:02,080 --> 01:44:05,239
code of the the game but it did not

2325
01:44:05,239 --> 01:44:08,199
prevent balatro from becoming a very big

2326
01:44:08,199 --> 01:44:11,840
success in the gaming world so that's

2327
01:44:11,840 --> 01:44:14,639
something to keep in mind so here I'm

2328
01:44:14,639 --> 01:44:16,679
just going to add the type module as I

2329
01:44:16,679 --> 01:44:20,800
did earlier on

2330
01:44:20,880 --> 01:44:23,920
module here we come here we

2331
01:44:23,920 --> 01:44:27,840
go so now we have everything we're set

2332
01:44:27,840 --> 01:44:30,520
up now it's time to install the capl

2333
01:44:30,520 --> 01:44:32,760
library so K play is the library for

2334
01:44:32,760 --> 01:44:35,599
making games it was this one and for the

2335
01:44:35,599 --> 01:44:37,679
game we're going to actually

2336
01:44:37,679 --> 01:44:41,000
make let's do the exact same thing here

2337
01:44:41,000 --> 01:44:43,040
so here they show you how to do a basic

2338
01:44:43,040 --> 01:44:46,480
platformer in less than three 30 lines

2339
01:44:46,480 --> 01:44:51,360
of code so let's see so let's actually

2340
01:44:51,360 --> 01:44:53,840
do copy that code

2341
01:44:53,840 --> 01:44:57,960
uh I think we still need Onkey press yes

2342
01:44:57,960 --> 01:45:00,440
so it's going to be in mostly in jumping

2343
01:45:00,440 --> 01:45:02,320
mechanic probably going to expand a bit

2344
01:45:02,320 --> 01:45:05,920
on that but yeah uh that would be a good

2345
01:45:05,920 --> 01:45:09,560
first try with KL which is library and

2346
01:45:09,560 --> 01:45:12,000
then for more in-depth content regarding

2347
01:45:12,000 --> 01:45:14,360
this you can you you will be well served

2348
01:45:14,360 --> 01:45:16,239
on my channel I have plenty of other

2349
01:45:16,239 --> 01:45:18,000
tutorials by the way you don't have to

2350
01:45:18,000 --> 01:45:19,679
use KL there are many other libraries

2351
01:45:19,679 --> 01:45:21,840
like phaser uh by the way if you want to

2352
01:45:21,840 --> 01:45:24,880
use phaser uh you need to learn a bit

2353
01:45:24,880 --> 01:45:27,000
more about objectoriented programming

2354
01:45:27,000 --> 01:45:29,199
something I did not mention a lot in

2355
01:45:29,199 --> 01:45:32,560
this at all in this tutorial in this

2356
01:45:32,560 --> 01:45:35,360
course you can use also P5 for making

2357
01:45:35,360 --> 01:45:38,199
creative coding uh stuff very good and

2358
01:45:38,199 --> 01:45:41,199
it's I I Ed P5 to make this game by by

2359
01:45:41,199 --> 01:45:43,880
by the way you can watch a tutorial I

2360
01:45:43,880 --> 01:45:46,000
made on the channel on how to build this

2361
01:45:46,000 --> 01:45:49,440
exact game with P5 gz so that's uh just

2362
01:45:49,440 --> 01:45:51,000
to just to tell you that there are many

2363
01:45:51,000 --> 01:45:52,719
other options and it's not just that one

2364
01:45:52,719 --> 01:45:55,920
I'm not paid to to make videos on K play

2365
01:45:55,920 --> 01:45:57,960
uh so yeah it's just a library I really

2366
01:45:57,960 --> 01:46:00,199
like and that's why I've been using it a

2367
01:46:00,199 --> 01:46:05,320
lot all right so now um let's install

2368
01:46:05,320 --> 01:46:07,760
our library so to install K play you do

2369
01:46:07,760 --> 01:46:10,719
npm install C playay that's it and then

2370
01:46:10,719 --> 01:46:12,480
it's going to install it and it's going

2371
01:46:12,480 --> 01:46:15,520
to add it to your package.json here you

2372
01:46:15,520 --> 01:46:17,480
can see the in the dependency section is

2373
01:46:17,480 --> 01:46:19,360
going to add version

2374
01:46:19,360 --> 01:46:24,840
300.1 300 1.0.0 Alpha 191 so this is the

2375
01:46:24,840 --> 01:46:27,880
latest version of the KL library now if

2376
01:46:27,880 --> 01:46:30,639
you want to pin it to a specific version

2377
01:46:30,639 --> 01:46:32,520
by the way if someone else use your

2378
01:46:32,520 --> 01:46:35,000
project and just do npm install it's

2379
01:46:35,000 --> 01:46:37,040
going to install the correct version now

2380
01:46:37,040 --> 01:46:38,800
let's say you are watching this far into

2381
01:46:38,800 --> 01:46:42,800
the future uh you would do npm install C

2382
01:46:42,800 --> 01:46:48,440
play and then a specific uh AD Sign with

2383
01:46:48,800 --> 01:46:51,520
3,000 do0

2384
01:46:51,520 --> 01:46:54,840
do0 Das

2385
01:46:55,239 --> 01:46:59,320
Alpha 19.1 if you do that you're going

2386
01:46:59,320 --> 01:47:01,760
to have the exact same version now it's

2387
01:47:01,760 --> 01:47:03,679
nothing's going to change because it's

2388
01:47:03,679 --> 01:47:05,400
already the version but in case you're

2389
01:47:05,400 --> 01:47:07,560
watching this far enough into the future

2390
01:47:07,560 --> 01:47:09,239
you can use that to have the exact same

2391
01:47:09,239 --> 01:47:10,159
thing as

2392
01:47:10,159 --> 01:47:13,719
me so that's that's that all right so

2393
01:47:13,719 --> 01:47:16,040
now we have KL installed and we can go

2394
01:47:16,040 --> 01:47:21,000
to main.js and write import kep playay

2395
01:47:21,000 --> 01:47:23,080
from

2396
01:47:23,080 --> 01:47:24,560
ke

2397
01:47:24,560 --> 01:47:27,360
play uh ke play like that so when you

2398
01:47:27,360 --> 01:47:31,119
want to when you use nodejs you you use

2399
01:47:31,119 --> 01:47:33,560
the name of the library in strings not

2400
01:47:33,560 --> 01:47:35,639
the path of the library like we did with

2401
01:47:35,639 --> 01:47:40,840
the the other setup so now if I do capl

2402
01:47:40,840 --> 01:47:43,199
call the capl function one nice thing

2403
01:47:43,199 --> 01:47:47,080
about using Nos and V Etc is that you

2404
01:47:47,080 --> 01:47:50,040
have access to documentation when you

2405
01:47:50,040 --> 01:47:52,440
hover over over things like that that

2406
01:47:52,440 --> 01:47:54,599
you don't have when you use the other

2407
01:47:54,599 --> 01:47:58,119
setup I had so that's the one reason to

2408
01:47:58,119 --> 01:48:01,119
use it so we have cap which is which is

2409
01:48:01,119 --> 01:48:03,599
going to initialize our canvas so if I

2410
01:48:03,599 --> 01:48:06,800
go here go to the output

2411
01:48:06,800 --> 01:48:10,639
refresh okay relative must be

2412
01:48:10,639 --> 01:48:14,280
okay doesn't work for some reason

2413
01:48:14,280 --> 01:48:16,560
import

2414
01:48:16,560 --> 01:48:19,480
whoops oh okay I know why

2415
01:48:19,480 --> 01:48:22,280
sorry everything we wrote is fine the

2416
01:48:22,280 --> 01:48:24,080
issue is this just that now that we are

2417
01:48:24,080 --> 01:48:26,239
using the other setup this is no longer

2418
01:48:26,239 --> 01:48:28,800
relevant uh what we need to start our

2419
01:48:28,800 --> 01:48:30,560
local development server is that you

2420
01:48:30,560 --> 01:48:32,159
don't need live server anymore so you

2421
01:48:32,159 --> 01:48:34,840
can click on the go live button that was

2422
01:48:34,840 --> 01:48:36,920
previously and then it's going to

2423
01:48:36,920 --> 01:48:40,480
disable this uh the Local Host but to

2424
01:48:40,480 --> 01:48:42,360
run a server when you're using npm with

2425
01:48:42,360 --> 01:48:46,080
v is you do npm run Dev once you do that

2426
01:48:46,080 --> 01:48:47,840
it's going to start the server it gives

2427
01:48:47,840 --> 01:48:49,560
you the address I'm just going to copy

2428
01:48:49,560 --> 01:48:52,040
it and paste it into my browser as for

2429
01:48:52,040 --> 01:48:53,880
you you can just click on it with

2430
01:48:53,880 --> 01:48:55,679
control click and it's going to bring

2431
01:48:55,679 --> 01:48:57,719
you to the thing here here you're going

2432
01:48:57,719 --> 01:48:59,719
to get an error called favicon so

2433
01:48:59,719 --> 01:49:03,040
favicon I can use usually on HTML Pages

2434
01:49:03,040 --> 01:49:05,280
you need to Define an icon on top

2435
01:49:05,280 --> 01:49:06,920
because we're making games this is not

2436
01:49:06,920 --> 01:49:09,000
necessary and if you were to host a game

2437
01:49:09,000 --> 01:49:11,880
on edge. it's even more not necessary

2438
01:49:11,880 --> 01:49:14,360
I'm going to teach you how to prepare

2439
01:49:14,360 --> 01:49:16,960
your game for edge. I'm probably not

2440
01:49:16,960 --> 01:49:19,199
going to go into the it. iio thing

2441
01:49:19,199 --> 01:49:21,760
portal Etc and do the the steps but it

2442
01:49:21,760 --> 01:49:25,800
will just involve zipping your code base

2443
01:49:25,800 --> 01:49:28,199
uh zipping the build output and then

2444
01:49:28,199 --> 01:49:32,119
dropping it on h. that's it so we have a

2445
01:49:32,119 --> 01:49:33,880
canvas that takes the whole screen and

2446
01:49:33,880 --> 01:49:36,639
space so that's great now let's look at

2447
01:49:36,639 --> 01:49:39,560
the code here so I'm going to copy it

2448
01:49:39,560 --> 01:49:41,440
and I'm going to go over it so and I'm

2449
01:49:41,440 --> 01:49:43,280
going to explain everything so we don't

2450
01:49:43,280 --> 01:49:45,840
need this you can use load Bean I'm

2451
01:49:45,840 --> 01:49:50,280
going to explain why in an instant

2452
01:49:50,639 --> 01:49:54,199
so so if I look

2453
01:49:54,199 --> 01:49:56,599
you you can jump you see and now what

2454
01:49:56,599 --> 01:49:59,040
you can do is you can bring

2455
01:49:59,040 --> 01:50:02,800
forward squares rectangles Etc that that

2456
01:50:02,800 --> 01:50:04,560
are going to act as

2457
01:50:04,560 --> 01:50:08,080
obstacles now the way I'm going to go

2458
01:50:08,080 --> 01:50:11,560
about it is I'm going to keep that code

2459
01:50:11,560 --> 01:50:14,239
you know what just it might be confus

2460
01:50:14,239 --> 01:50:16,000
confusing for you so I'm just going to

2461
01:50:16,000 --> 01:50:20,719
write everything manual so capl is a

2462
01:50:20,719 --> 01:50:23,679
method uh not actually is the The

2463
01:50:23,679 --> 01:50:26,040
Constructor the the way to initialize

2464
01:50:26,040 --> 01:50:29,040
the canvas in so the canvas is the

2465
01:50:29,040 --> 01:50:31,719
canvas element is what is used to make

2466
01:50:31,719 --> 01:50:33,560
graphics appear on a web

2467
01:50:33,560 --> 01:50:37,199
page I prefer to hold it into a constant

2468
01:50:37,199 --> 01:50:40,639
called K because it's going to hold all

2469
01:50:40,639 --> 01:50:43,440
the what we call methods so methods are

2470
01:50:43,440 --> 01:50:45,679
functions that you can call from that

2471
01:50:45,679 --> 01:50:49,320
from a an object so remember I talked

2472
01:50:49,320 --> 01:50:52,239
about the fact that you could create

2473
01:50:52,239 --> 01:50:54,679
objects for example my object and you

2474
01:50:54,679 --> 01:50:56,840
could have properties and you know what

2475
01:50:56,840 --> 01:50:58,639
I forgot to mention but you can have a

2476
01:50:58,639 --> 01:51:01,040
property that that is a function so for

2477
01:51:01,040 --> 01:51:03,679
example you could have decided to have a

2478
01:51:03,679 --> 01:51:06,840
function called let's say um

2479
01:51:06,840 --> 01:51:09,840
add and you define it within like that

2480
01:51:09,840 --> 01:51:12,679
you can Define it either like that or

2481
01:51:12,679 --> 01:51:14,639
like that with using the arrow function

2482
01:51:14,639 --> 01:51:15,920
which is another way to declare a

2483
01:51:15,920 --> 01:51:18,599
function just to not confuse you this I

2484
01:51:18,599 --> 01:51:21,320
think is the better way so having this

2485
01:51:21,320 --> 01:51:23,320
like that is basically a method a method

2486
01:51:23,320 --> 01:51:26,679
that means you can from it's a a

2487
01:51:26,679 --> 01:51:29,159
function that this object can

2488
01:51:29,159 --> 01:51:32,440
call so yeah so that's a method so that

2489
01:51:32,440 --> 01:51:36,199
means that later on you could do my

2490
01:51:36,440 --> 01:51:39,320
object and then dot call the function

2491
01:51:39,320 --> 01:51:40,079
like

2492
01:51:40,079 --> 01:51:43,400
that so yeah might not be very

2493
01:51:43,400 --> 01:51:45,800
straightforward but that's how it

2494
01:51:45,800 --> 01:51:48,440
works so here what I'm going what I'm

2495
01:51:48,440 --> 01:51:51,800
doing is I'm creating the cap uh canvas

2496
01:51:51,800 --> 01:51:53,800
and I'm storing the context it's called

2497
01:51:53,800 --> 01:51:57,520
the context inside this K constant that

2498
01:51:57,520 --> 01:52:00,679
means that from now on for all methods

2499
01:52:00,679 --> 01:52:03,119
that come from klea you can do K Dot and

2500
01:52:03,119 --> 01:52:05,480
then the name of that method how I know

2501
01:52:05,480 --> 01:52:06,960
those methods is that you need to look

2502
01:52:06,960 --> 01:52:09,360
at the documentation so when a developer

2503
01:52:09,360 --> 01:52:12,159
creates a library uh they have multiple

2504
01:52:12,159 --> 01:52:14,599
an API a way of using it so an API

2505
01:52:14,599 --> 01:52:16,719
stands for application programming

2506
01:52:16,719 --> 01:52:20,119
interface and it's how to use what the

2507
01:52:20,119 --> 01:52:22,040
various functions and methods are

2508
01:52:22,040 --> 01:52:24,440
available or written by the LI the

2509
01:52:24,440 --> 01:52:26,440
library author that you can use in your

2510
01:52:26,440 --> 01:52:28,079
own project so what you're going to do

2511
01:52:28,079 --> 01:52:30,639
here is there are a bunch of of methods

2512
01:52:30,639 --> 01:52:32,679
and functions you can use and they're

2513
01:52:32,679 --> 01:52:34,840
documented inside of the documentation

2514
01:52:34,840 --> 01:52:36,800
in the docs section here you have

2515
01:52:36,800 --> 01:52:38,840
various names of reference docs and you

2516
01:52:38,840 --> 01:52:40,679
have the name of the various things now

2517
01:52:40,679 --> 01:52:42,800
for this tutorial you don't need to look

2518
01:52:42,800 --> 01:52:44,480
at that we're going to just do a simple

2519
01:52:44,480 --> 01:52:46,480
game I just want to you to have the a

2520
01:52:46,480 --> 01:52:48,239
quick win basically to have something at

2521
01:52:48,239 --> 01:52:50,199
the end of this tutorial and then later

2522
01:52:50,199 --> 01:52:52,960
on you can watch my K play Crash course

2523
01:52:52,960 --> 01:52:55,440
where I teach you more stuff in detail

2524
01:52:55,440 --> 01:52:58,079
or you can watch my other

2525
01:52:58,079 --> 01:53:00,719
tutorials so what I'm going to do is I'm

2526
01:53:00,719 --> 01:53:02,719
going to do a very simple game where

2527
01:53:02,719 --> 01:53:04,520
you're going to play a character and

2528
01:53:04,520 --> 01:53:06,679
it's going to jump over obstacles that

2529
01:53:06,679 --> 01:53:09,840
come from the right so think the dyo

2530
01:53:09,840 --> 01:53:12,880
game and you know the Google Chrome dyo

2531
01:53:12,880 --> 01:53:15,000
game if you when you don't have internet

2532
01:53:15,000 --> 01:53:18,599
connection so to do that that I'm going

2533
01:53:18,599 --> 01:53:21,960
to first pass in an object as a Pam to

2534
01:53:21,960 --> 01:53:25,199
the cap method the way why this is just

2535
01:53:25,199 --> 01:53:27,920
the way that this Library works and it

2536
01:53:27,920 --> 01:53:30,280
takes in properties that you can pass so

2537
01:53:30,280 --> 01:53:31,960
if you pass in an object with the

2538
01:53:31,960 --> 01:53:34,360
following properties it's cap is going

2539
01:53:34,360 --> 01:53:36,760
to do something for you so if I pass the

2540
01:53:36,760 --> 01:53:39,840
width property and specify width of

2541
01:53:39,840 --> 01:53:42,679
1,280 it's going to make the canvas so

2542
01:53:42,679 --> 01:53:45,199
the the screen where the game is

2543
01:53:45,199 --> 01:53:49,520
displayed width of 8 uh

2544
01:53:50,960 --> 01:53:56,239
12,080 uh yeah 100 uh 1,200 and 180 so

2545
01:53:56,239 --> 01:53:58,840
now if I specify the height as 720 we're

2546
01:53:58,840 --> 01:54:01,040
going to have a basic resolution so yeah

2547
01:54:01,040 --> 01:54:03,880
just remove that so the the code works

2548
01:54:03,880 --> 01:54:06,040
now if I go here you can have our canvis

2549
01:54:06,040 --> 01:54:07,560
here I'm going to keep it like that so

2550
01:54:07,560 --> 01:54:09,199
that you can see the whole game in my

2551
01:54:09,199 --> 01:54:11,400
screen like that now there's a bunch of

2552
01:54:11,400 --> 01:54:13,040
other options you could have passed but

2553
01:54:13,040 --> 01:54:16,159
I'm going to you know not explain them

2554
01:54:16,159 --> 01:54:19,880
here so here to load assets in cap you

2555
01:54:19,880 --> 01:54:24,360
use a load Sprite function but there is

2556
01:54:24,360 --> 01:54:26,840
a default called load Bean which is a

2557
01:54:26,840 --> 01:54:28,800
default Sprite that is available which

2558
01:54:28,800 --> 01:54:32,000
is the bean character you saw in the

2559
01:54:32,000 --> 01:54:35,440
homepage of KL which is this one this

2560
01:54:35,440 --> 01:54:39,400
guy so instead of you know uh worrying

2561
01:54:39,400 --> 01:54:41,719
about finding assets online Etc I'm just

2562
01:54:41,719 --> 01:54:44,000
going to use that for this project so

2563
01:54:44,000 --> 01:54:46,119
it's going to be easy to follow along so

2564
01:54:46,119 --> 01:54:48,159
now I'm going to create a game object

2565
01:54:48,159 --> 01:54:49,800
which is going to be our player so a

2566
01:54:49,800 --> 01:54:53,440
game object is an entity in Klay that

2567
01:54:53,440 --> 01:54:55,840
takes in uh that is created by using the

2568
01:54:55,840 --> 01:54:59,239
add method of the capl context and it

2569
01:54:59,239 --> 01:55:02,320
takes in an array of components those

2570
01:55:02,320 --> 01:55:05,920
components uh are offered by KL itself

2571
01:55:05,920 --> 01:55:08,000
that's why you can you need to use K Dot

2572
01:55:08,000 --> 01:55:12,119
and then you call them so here yeah so

2573
01:55:12,119 --> 01:55:15,920
okay and then using the Sprite component

2574
01:55:15,920 --> 01:55:18,440
I can display a specific Sprite since I

2575
01:55:18,440 --> 01:55:21,560
call the load Bean method offered by KL

2576
01:55:21,560 --> 01:55:24,840
I can call the Bean Sprite so Bean can

2577
01:55:24,840 --> 01:55:26,960
be called with this by passing a string

2578
01:55:26,960 --> 01:55:29,079
to the Sprite component with the the

2579
01:55:29,079 --> 01:55:32,079
string being Bean that's how now if I

2580
01:55:32,079 --> 01:55:34,880
look at this screen the the result

2581
01:55:34,880 --> 01:55:36,440
you're going to see a bean appear at the

2582
01:55:36,440 --> 01:55:39,079
top left corner now let's say we want

2583
01:55:39,079 --> 01:55:41,800
our Bean character to be at the center

2584
01:55:41,800 --> 01:55:44,560
so capl offers a way to change the

2585
01:55:44,560 --> 01:55:47,199
position of a game object you create by

2586
01:55:47,199 --> 01:55:49,440
using the pause component so all this

2587
01:55:49,440 --> 01:55:52,440
knowledge that that that comes from K

2588
01:55:52,440 --> 01:55:54,520
Etc K do it's not from JavaScript it's

2589
01:55:54,520 --> 01:55:56,920
from the library so there something to

2590
01:55:56,920 --> 01:55:59,480
keep in mind the separation between what

2591
01:55:59,480 --> 01:56:01,440
comes from the library and what our

2592
01:56:01,440 --> 01:56:04,560
Concepts from JavaScript is important so

2593
01:56:04,560 --> 01:56:07,119
here you can use the k. pause component

2594
01:56:07,119 --> 01:56:10,599
and then pass in either the width uh no

2595
01:56:10,599 --> 01:56:12,840
the x coordinate or the y coordinate or

2596
01:56:12,840 --> 01:56:16,880
you can call the center method from K

2597
01:56:16,880 --> 01:56:21,239
play for it to Center the um

2598
01:56:21,239 --> 01:56:23,480
oops to give you the position of the

2599
01:56:23,480 --> 01:56:26,360
center basically so here if I go you can

2600
01:56:26,360 --> 01:56:29,560
see that the character is at the center

2601
01:56:29,560 --> 01:56:32,719
and by by the way if if you press F1 the

2602
01:56:32,719 --> 01:56:35,920
F1 key you're going to have uh the debug

2603
01:56:35,920 --> 01:56:38,480
mode from cap which you can see like

2604
01:56:38,480 --> 01:56:39,719
various things but it's not very

2605
01:56:39,719 --> 01:56:42,400
important for now uh just remember that

2606
01:56:42,400 --> 01:56:45,760
if you're using Edge if you press F1 uh

2607
01:56:45,760 --> 01:56:47,599
it's going to open the support Microsoft

2608
01:56:47,599 --> 01:56:50,040
thingy which is not something we want

2609
01:56:50,040 --> 01:56:53,400
but you can rebind it by using uh I

2610
01:56:53,400 --> 01:56:55,719
forgot actually uh so yeah I'm going to

2611
01:56:55,719 --> 01:56:57,280
leave it for now like

2612
01:56:57,280 --> 01:57:01,199
that so now we have three components so

2613
01:57:01,199 --> 01:57:02,760
if I'm just going to display this in a

2614
01:57:02,760 --> 01:57:05,119
more readable fashion so we have two

2615
01:57:05,119 --> 01:57:07,719
components being used not

2616
01:57:07,719 --> 01:57:10,480
three and uh as I say the fact that this

2617
01:57:10,480 --> 01:57:12,639
is an array of elements this is

2618
01:57:12,639 --> 01:57:15,920
Javascript however Sprite pause Center

2619
01:57:15,920 --> 01:57:19,280
Etc are from Capa so this all these

2620
01:57:19,280 --> 01:57:21,719
components comp uh when composed

2621
01:57:21,719 --> 01:57:24,960
together gives us our player game object

2622
01:57:24,960 --> 01:57:26,599
now we're going to use the area

2623
01:57:26,599 --> 01:57:28,199
component which is going to create a

2624
01:57:28,199 --> 01:57:30,840
hitbox for our player a hitbox can be

2625
01:57:30,840 --> 01:57:34,679
seen as a square uh by default that

2626
01:57:34,679 --> 01:57:38,480
represents the body of our character

2627
01:57:38,480 --> 01:57:42,280
what part like what is going to be uh

2628
01:57:42,280 --> 01:57:45,719
susceptible to collisions so if I press

2629
01:57:45,719 --> 01:57:48,800
F1 again even though it will open it's

2630
01:57:48,800 --> 01:57:50,760
going to create a box here which is

2631
01:57:50,760 --> 01:57:52,960
useful because K play is to offer us

2632
01:57:52,960 --> 01:57:56,000
methods we can use and functions we can

2633
01:57:56,000 --> 01:57:58,000
use for colliding so by the way every

2634
01:57:58,000 --> 01:58:00,159
time I say method just just put in your

2635
01:58:00,159 --> 01:58:02,280
mind that it's a function

2636
01:58:02,280 --> 01:58:05,440
basically okay so

2637
01:58:05,440 --> 01:58:10,440
now we have this and then you can create

2638
01:58:10,440 --> 01:58:13,079
a body

2639
01:58:13,079 --> 01:58:15,760
oops we're going to use the

2640
01:58:15,760 --> 01:58:21,040
body oops component so now what the this

2641
01:58:21,040 --> 01:58:25,960
is a bit it's a bit not handy so my

2642
01:58:25,960 --> 01:58:29,079
formatter my code formatter does this

2643
01:58:29,079 --> 01:58:31,360
after five components or so it's going

2644
01:58:31,360 --> 01:58:33,239
to put them like this so it's going to

2645
01:58:33,239 --> 01:58:35,679
be more readable but anyway I use the

2646
01:58:35,679 --> 01:58:38,480
body uh component from kipa which is

2647
01:58:38,480 --> 01:58:40,560
going to make our game object

2648
01:58:40,560 --> 01:58:43,639
susceptible to gravity and Collis uh

2649
01:58:43,639 --> 01:58:45,599
yeah to gravity and collisions as

2650
01:58:45,599 --> 01:58:48,599
well so now we have if you just add this

2651
01:58:48,599 --> 01:58:50,800
like that uh to gra actually not to

2652
01:58:50,800 --> 01:58:52,599
gravity just collisions but

2653
01:58:52,599 --> 01:58:54,599
to have our player affected by gravity

2654
01:58:54,599 --> 01:58:58,760
you need to use the set gravity

2655
01:58:58,760 --> 01:59:00,719
method and here I'm going to put a

2656
01:59:00,719 --> 01:59:03,480
gravity of 1,000 so now if we look at

2657
01:59:03,480 --> 01:59:06,159
the result our Bean character is falling

2658
01:59:06,159 --> 01:59:08,360
down so we need to create a platform for

2659
01:59:08,360 --> 01:59:11,840
it to for the character to land on so

2660
01:59:11,840 --> 01:59:14,119
what I'm going to do is you don't have

2661
01:59:14,119 --> 01:59:15,800
to store your game object that you

2662
01:59:15,800 --> 01:59:17,840
create in a constant if you're not going

2663
01:59:17,840 --> 01:59:19,520
to use that later if you're not going to

2664
01:59:19,520 --> 01:59:22,639
call it later on so what I'm going to do

2665
01:59:22,639 --> 01:59:25,760
I'm going to just call the method the

2666
01:59:25,760 --> 01:59:28,880
add method directly pass in an array of

2667
01:59:28,880 --> 01:59:29,840
components I'm going to use the

2668
01:59:29,840 --> 01:59:31,920
rectangular component to just create a

2669
01:59:31,920 --> 01:59:34,159
rectangle and this rectangle is going to

2670
01:59:34,159 --> 01:59:37,000
have the width of the screen so I'm

2671
01:59:37,000 --> 01:59:40,040
going to use k. width which is a method

2672
01:59:40,040 --> 01:59:42,079
from KL that allows us to get the width

2673
01:59:42,079 --> 01:59:45,159
of the screen I'm going to have a height

2674
01:59:45,159 --> 01:59:48,400
though of um let's say I think 200 or

2675
01:59:48,400 --> 01:59:51,320
300 should be should be okay so now if I

2676
01:59:51,320 --> 01:59:53,000
look at the result you can see it's all

2677
01:59:53,000 --> 01:59:56,079
up there now I'm going to change the

2678
01:59:56,079 --> 02:00:00,520
position K do k.

2679
02:00:01,320 --> 02:00:04,840
pause and I'm going to put it at one Z

2680
02:00:04,840 --> 02:00:07,440
then maybe 300 maybe it's the correct

2681
02:00:07,440 --> 02:00:09,880
coordinates so by the way in Game

2682
02:00:09,880 --> 02:00:13,280
Dev by the way in Game Dev the farther

2683
02:00:13,280 --> 02:00:17,199
you go down the higher the value of y so

2684
02:00:17,199 --> 02:00:19,800
that's something uh very strange if

2685
02:00:19,800 --> 02:00:22,760
you're coming from if you're used to the

2686
02:00:22,760 --> 02:00:25,119
higher the value of y the more up you

2687
02:00:25,119 --> 02:00:27,360
should go so that's something you should

2688
02:00:27,360 --> 02:00:29,239
keep in

2689
02:00:29,239 --> 02:00:33,199
mind so here k. pause 0 through 100 I'm

2690
02:00:33,199 --> 02:00:36,280
going to put it at 500 and then I'm also

2691
02:00:36,280 --> 02:00:39,040
going to add an area component for the

2692
02:00:39,040 --> 02:00:44,480
same reason as the as I did um now this

2693
02:00:44,480 --> 02:00:46,679
is not really handy like cannot

2694
02:00:46,679 --> 02:00:48,840
apparently not see the whole thing so

2695
02:00:48,840 --> 02:00:50,760
I'm just going to reduce the font size a

2696
02:00:50,760 --> 02:00:53,400
bit

2697
02:00:53,400 --> 02:00:54,639
maybe you know what I'm just going to

2698
02:00:54,639 --> 02:00:57,239
keep it increase just so you can see

2699
02:00:57,239 --> 02:00:58,920
make making sure that you can actually

2700
02:00:58,920 --> 02:01:03,760
see so k. area and then K do body are

2701
02:01:03,760 --> 02:01:06,840
two components we're going to

2702
02:01:07,639 --> 02:01:10,880
add whoops did it add it no

2703
02:01:10,880 --> 02:01:14,639
okay so now the only difference here is

2704
02:01:14,639 --> 02:01:16,520
that in our

2705
02:01:16,520 --> 02:01:20,560
array we're going to have to pass an

2706
02:01:20,560 --> 02:01:25,239
object and specified is static property

2707
02:01:25,239 --> 02:01:27,360
to being true

2708
02:01:27,360 --> 02:01:31,239
so what this is is that the body okay

2709
02:01:31,239 --> 02:01:34,639
you see now it properly formats it so

2710
02:01:34,639 --> 02:01:37,079
what happens here is that KL has the

2711
02:01:37,079 --> 02:01:38,440
body

2712
02:01:38,440 --> 02:01:42,560
component which takes in an object and

2713
02:01:42,560 --> 02:01:45,520
the object you pass in can take can

2714
02:01:45,520 --> 02:01:49,040
Define the IST static property and IST

2715
02:01:49,040 --> 02:01:51,480
static if you set it to true what will

2716
02:01:51,480 --> 02:01:55,040
happen is it going to make your uh

2717
02:01:55,040 --> 02:01:57,159
platform your game object not

2718
02:01:57,159 --> 02:02:01,440
susceptible to gravity so it's ideal for

2719
02:02:01,440 --> 02:02:04,480
Platformers for platforms so if I go

2720
02:02:04,480 --> 02:02:07,320
here you see it lands perfectly now I'm

2721
02:02:07,320 --> 02:02:11,280
going to add an outline to the platform

2722
02:02:11,280 --> 02:02:15,239
and you can do so with the outline

2723
02:02:15,239 --> 02:02:18,040
component and specify a thickness here

2724
02:02:18,040 --> 02:02:22,199
is thickness of three should be okay

2725
02:02:22,199 --> 02:02:24,400
and you land on the

2726
02:02:24,400 --> 02:02:26,800
platform all right so that's all good

2727
02:02:26,800 --> 02:02:29,440
and all now let's implement the jumping

2728
02:02:29,440 --> 02:02:32,400
mechanic for a player so you can do this

2729
02:02:32,400 --> 02:02:34,320
um

2730
02:02:34,320 --> 02:02:37,760
here so you can have player and then

2731
02:02:37,760 --> 02:02:41,960
here you can have an Onkey press Onkey

2732
02:02:41,960 --> 02:02:46,000
press is a method offered by K play that

2733
02:02:46,000 --> 02:02:49,079
is also available when you create on the

2734
02:02:49,079 --> 02:02:51,199
game the resulting game object that you

2735
02:02:51,199 --> 02:02:54,239
create so on key press takes in as the

2736
02:02:54,239 --> 02:02:57,239
first param the key you want to uh

2737
02:02:57,239 --> 02:02:59,079
listen on and it's going to be the space

2738
02:02:59,079 --> 02:03:01,920
key I decided that so when you press the

2739
02:03:01,920 --> 02:03:06,360
space key you can uh it's going to run

2740
02:03:06,360 --> 02:03:08,480
the function that is passed as a second

2741
02:03:08,480 --> 02:03:10,719
parameter so here because I didn't teach

2742
02:03:10,719 --> 02:03:14,079
you the arrow function the arrow form

2743
02:03:14,079 --> 02:03:15,840
this is another way to write a function

2744
02:03:15,840 --> 02:03:17,760
because I didn't teach you that what I'm

2745
02:03:17,760 --> 02:03:19,840
going to do is I'm just going to do

2746
02:03:19,840 --> 02:03:22,360
Define the function from within here so

2747
02:03:22,360 --> 02:03:26,400
you define a function here uh let's say

2748
02:03:26,400 --> 02:03:29,159
um actually never mind when you want to

2749
02:03:29,159 --> 02:03:30,599
just have a throw away function you

2750
02:03:30,599 --> 02:03:32,840
don't want to spend time on naming it

2751
02:03:32,840 --> 02:03:34,880
Etc you can use the arrow function so an

2752
02:03:34,880 --> 02:03:37,079
arrow function can be defined like this

2753
02:03:37,079 --> 02:03:39,760
you pass in you you have the parenthesis

2754
02:03:39,760 --> 02:03:41,719
and then you have an equal sign and then

2755
02:03:41,719 --> 02:03:45,480
a greater than sign which gives an arrow

2756
02:03:45,480 --> 02:03:47,920
and then you have brackets here so if

2757
02:03:47,920 --> 02:03:49,920
you were to if you want to Define an

2758
02:03:49,920 --> 02:03:53,480
arrow function out side you would store

2759
02:03:53,480 --> 02:03:55,760
it inside of a constant or a variable

2760
02:03:55,760 --> 02:03:59,159
usually constant give it a name and then

2761
02:03:59,159 --> 02:04:01,480
do like that so that's another way to

2762
02:04:01,480 --> 02:04:04,639
define a function this the there is a

2763
02:04:04,639 --> 02:04:06,520
Nuance to the difference between using

2764
02:04:06,520 --> 02:04:09,280
the function keyword uh meaning

2765
02:04:09,280 --> 02:04:11,719
declaring function like this with the

2766
02:04:11,719 --> 02:04:15,159
keyword and using the error function but

2767
02:04:15,159 --> 02:04:17,280
I think for now just consider them the

2768
02:04:17,280 --> 02:04:19,760
same for now later on I'm going to point

2769
02:04:19,760 --> 02:04:22,280
you toward a great JavaScript resource

2770
02:04:22,280 --> 02:04:23,599
that you can use to deepen your

2771
02:04:23,599 --> 02:04:27,000
knowledge regarding that so here what

2772
02:04:27,000 --> 02:04:29,159
happens is that when the space key is

2773
02:04:29,159 --> 02:04:30,760
pressed which is what passed as the

2774
02:04:30,760 --> 02:04:33,480
first Pam the Onkey press method is

2775
02:04:33,480 --> 02:04:37,440
going to run the second function it's

2776
02:04:37,440 --> 02:04:39,000
going to run the function past as the

2777
02:04:39,000 --> 02:04:41,480
second Pam by the way you can pass

2778
02:04:41,480 --> 02:04:45,159
functions as Pam to other functions so

2779
02:04:45,159 --> 02:04:48,360
you canot not only pass in numbers

2780
02:04:48,360 --> 02:04:49,880
arrays

2781
02:04:49,880 --> 02:04:52,199
objects strings Boolean

2782
02:04:52,199 --> 02:04:54,480
you can also pass in

2783
02:04:54,480 --> 02:04:57,000
functions which is pretty

2784
02:04:57,000 --> 02:04:59,199
handy all right so now what I'm going to

2785
02:04:59,199 --> 02:05:02,920
do is write the logic so I can just call

2786
02:05:02,920 --> 02:05:05,280
the player from outside remember the

2787
02:05:05,280 --> 02:05:08,239
global versus local thing because player

2788
02:05:08,239 --> 02:05:10,199
is outside of the function definition we

2789
02:05:10,199 --> 02:05:12,760
can actually use it from the inside so

2790
02:05:12,760 --> 02:05:16,920
player Dot and then you can use the jump

2791
02:05:16,920 --> 02:05:20,960
method uh from K play which is uh

2792
02:05:20,960 --> 02:05:23,360
offered when you create a game object

2793
02:05:23,360 --> 02:05:26,079
with I think the body component so now

2794
02:05:26,079 --> 02:05:28,159
if I go back to the game and I press

2795
02:05:28,159 --> 02:05:30,719
space you can jump now you can see that

2796
02:05:30,719 --> 02:05:33,760
you can jump infinitely because we need

2797
02:05:33,760 --> 02:05:35,719
to actually make sure that the player

2798
02:05:35,719 --> 02:05:38,199
can only jump when the player is

2799
02:05:38,199 --> 02:05:40,920
grounded otherwise they can just fly off

2800
02:05:40,920 --> 02:05:43,599
like that which is not uh which is not

2801
02:05:43,599 --> 02:05:46,079
what we want so what we're going to do

2802
02:05:46,079 --> 02:05:48,159
here is we're going to have an if

2803
02:05:48,159 --> 02:05:50,199
statement so this is where it's going to

2804
02:05:50,199 --> 02:05:53,000
come in handy so this if statement by

2805
02:05:53,000 --> 02:05:55,000
the way if you have an if statement that

2806
02:05:55,000 --> 02:05:57,440
you the logic you want to run within the

2807
02:05:57,440 --> 02:05:59,880
if statement is only one line you can

2808
02:05:59,880 --> 02:06:01,920
you don't have to have the brackets like

2809
02:06:01,920 --> 02:06:05,079
that you can actually just you know do

2810
02:06:05,079 --> 02:06:07,440
this put everything on one line like

2811
02:06:07,440 --> 02:06:11,159
that so I'm going to do that so if the

2812
02:06:11,159 --> 02:06:14,559
player is grounded this is a method

2813
02:06:14,559 --> 02:06:18,559
offered by K play that tells you if the

2814
02:06:18,559 --> 02:06:20,800
player is grounded what it returns is a

2815
02:06:20,800 --> 02:06:22,760
Boolean value it says written here

2816
02:06:22,760 --> 02:06:25,079
Boolean that means it's it's going to

2817
02:06:25,079 --> 02:06:27,400
return either true or or false and if

2818
02:06:27,400 --> 02:06:29,239
you remember this is exactly what we

2819
02:06:29,239 --> 02:06:31,559
want in an if statement because if this

2820
02:06:31,559 --> 02:06:34,040
is true then this runs if it's not true

2821
02:06:34,040 --> 02:06:36,679
then this will not this will not

2822
02:06:36,679 --> 02:06:40,400
run so if I go back I will only be able

2823
02:06:40,400 --> 02:06:43,520
to jump while I'm

2824
02:06:43,520 --> 02:06:46,760
grounded so now the only thing left is

2825
02:06:46,760 --> 02:06:49,679
to have obstacles coming from the right

2826
02:06:49,679 --> 02:06:52,760
and then as soon as there is Collision

2827
02:06:52,760 --> 02:06:55,679
we are going to basically enter a game

2828
02:06:55,679 --> 02:06:57,159
over

2829
02:06:57,159 --> 02:07:00,239
state so here we go now what I'm going

2830
02:07:00,239 --> 02:07:05,239
to do is I'm going to have a loop

2831
02:07:05,239 --> 02:07:09,639
function so K do actually can use a k.

2832
02:07:09,639 --> 02:07:11,599
loop I think that's the

2833
02:07:11,599 --> 02:07:14,079
name so the loop function is something

2834
02:07:14,079 --> 02:07:18,440
from K so you the first param is how

2835
02:07:18,440 --> 02:07:20,800
many seconds so every time so every one

2836
02:07:20,800 --> 02:07:22,199
second

2837
02:07:22,199 --> 02:07:24,360
it's going to fire the function past as

2838
02:07:24,360 --> 02:07:26,480
a second

2839
02:07:26,480 --> 02:07:28,559
Pam so by the way if you have any

2840
02:07:28,559 --> 02:07:30,520
questions uh things you don't understand

2841
02:07:30,520 --> 02:07:32,320
feel free to ask them in the comment

2842
02:07:32,320 --> 02:07:36,040
section I think uh I've have tried to

2843
02:07:36,040 --> 02:07:39,280
teach programming in a few hours uh to

2844
02:07:39,280 --> 02:07:41,840
someone probably who had never uh

2845
02:07:41,840 --> 02:07:43,960
written a line of code in our lives so

2846
02:07:43,960 --> 02:07:46,559
if you're this case you might still be

2847
02:07:46,559 --> 02:07:48,159
confused because we we're doing a lot

2848
02:07:48,159 --> 02:07:50,199
we're speed running through a lot of

2849
02:07:50,199 --> 02:07:52,880
Concepts so you still need to practice

2850
02:07:52,880 --> 02:07:56,079
those uh basic Core Concepts that I was

2851
02:07:56,079 --> 02:07:58,119
teach taught you but now you actually

2852
02:07:58,119 --> 02:08:01,840
have a base from which to further your

2853
02:08:01,840 --> 02:08:03,559
knowledge so that's something you you

2854
02:08:03,559 --> 02:08:05,239
know what you don't know basically you

2855
02:08:05,239 --> 02:08:08,320
can you can you know where to look for

2856
02:08:08,320 --> 02:08:10,800
information Etc you know what terms to

2857
02:08:10,800 --> 02:08:12,559
use in your Google search so that's

2858
02:08:12,559 --> 02:08:15,520
something pretty cool as that is going

2859
02:08:15,520 --> 02:08:16,639
to help you a

2860
02:08:16,639 --> 02:08:19,400
lot so here the loop every 1 second

2861
02:08:19,400 --> 02:08:21,840
we're going to spawn a game object that

2862
02:08:21,840 --> 02:08:24,679
we're going to create here that is going

2863
02:08:24,679 --> 02:08:30,639
to be a rectangle let's say 50 by

2864
02:08:31,719 --> 02:08:34,000
5050

2865
02:08:34,000 --> 02:08:37,040
oops using direct component is going to

2866
02:08:37,040 --> 02:08:39,559
have a position of I don't know what the

2867
02:08:39,559 --> 02:08:40,840
position would

2868
02:08:40,840 --> 02:08:43,280
be

2869
02:08:43,280 --> 02:08:46,199
um let's

2870
02:08:46,199 --> 02:08:51,719
say what happens if we go 200 by 200

2871
02:08:51,719 --> 02:08:53,679
I'm just going to see it it's it's going

2872
02:08:53,679 --> 02:08:55,960
to put you here so if we increase the

2873
02:08:55,960 --> 02:08:59,480
value of x we're going to have let's say

2874
02:08:59,480 --> 02:09:02,719
8,000 and even more

2875
02:09:02,719 --> 02:09:04,920
1,000 and then here we're going to go

2876
02:09:04,920 --> 02:09:06,639
down so we need to increase the value of

2877
02:09:06,639 --> 02:09:11,920
y if you remember why because the the

2878
02:09:11,920 --> 02:09:14,480
higher you go in values of Y the lower

2879
02:09:14,480 --> 02:09:15,199
you

2880
02:09:15,199 --> 02:09:17,920
get okay so here I see it here it's bit

2881
02:09:17,920 --> 02:09:21,000
too low and by the way I'm going to add

2882
02:09:21,000 --> 02:09:24,040
the area

2883
02:09:25,040 --> 02:09:29,000
component I'm going to add the body

2884
02:09:29,000 --> 02:09:33,119
component and I'm going to add the

2885
02:09:33,119 --> 02:09:35,960
outline component by the way the order

2886
02:09:35,960 --> 02:09:38,000
of the components does not matter in

2887
02:09:38,000 --> 02:09:41,679
Klay and you're using the KL

2888
02:09:41,840 --> 02:09:45,119
Library so here we go and now what I'm

2889
02:09:45,119 --> 02:09:48,679
going to do yeah so it's increasing in

2890
02:09:48,679 --> 02:09:50,800
place which is not what we want but it's

2891
02:09:50,800 --> 02:09:52,719
pretty cool

2892
02:09:52,719 --> 02:09:55,360
Factor that's pretty nice it's

2893
02:09:55,360 --> 02:09:57,880
unintended but really

2894
02:09:57,880 --> 02:10:00,840
cool so what I'm going to do is after

2895
02:10:00,840 --> 02:10:03,320
having this I'm going to actually have a

2896
02:10:03,320 --> 02:10:05,639
move the move

2897
02:10:05,639 --> 02:10:08,520
component is you just determine the

2898
02:10:08,520 --> 02:10:10,800
direction so the direction at what speed

2899
02:10:10,800 --> 02:10:13,520
so the first param I think it's the

2900
02:10:13,520 --> 02:10:15,679
direction so you use a vector two so

2901
02:10:15,679 --> 02:10:17,800
Vector 2 is just an X and Y value it's a

2902
02:10:17,800 --> 02:10:21,559
data structure offered by capl and and

2903
02:10:21,559 --> 02:10:25,159
it's very useful for specific specifying

2904
02:10:25,159 --> 02:10:28,440
coordinates Etc so here the vector 2 is

2905
02:10:28,440 --> 02:10:31,360
just going to be let's say one zero and

2906
02:10:31,360 --> 02:10:32,440
then the

2907
02:10:32,440 --> 02:10:35,440
speed do you need to specify the speed

2908
02:10:35,440 --> 02:10:37,800
yeah the speed is a second per R I'm

2909
02:10:37,800 --> 02:10:39,520
going to explain why one zero in an

2910
02:10:39,520 --> 02:10:42,159
instant here the speed let's move at 300

2911
02:10:42,159 --> 02:10:45,639
speed let's see now it's well more it's

2912
02:10:45,639 --> 02:10:47,599
it's better formatted I think I better

2913
02:10:47,599 --> 02:10:50,960
like like this for format unfortunately

2914
02:10:50,960 --> 02:10:51,960
it

2915
02:10:51,960 --> 02:10:54,040
gets to this point after a while by my

2916
02:10:54,040 --> 02:10:58,000
format which does it yeah

2917
02:10:58,000 --> 02:10:59,920
automatically okay

2918
02:10:59,920 --> 02:11:03,400
so okay so here the the vector two is

2919
02:11:03,400 --> 02:11:05,679
used as a Direction so the X Direction

2920
02:11:05,679 --> 02:11:07,440
and then the Y Direction so the X

2921
02:11:07,440 --> 02:11:09,239
direction that means going to move in

2922
02:11:09,239 --> 02:11:12,679
the direction of uh X1 means to the

2923
02:11:12,679 --> 02:11:14,840
right so if I want this to move to the

2924
02:11:14,840 --> 02:11:17,719
left it needs to be minus one for the Y

2925
02:11:17,719 --> 02:11:19,280
AIS we don't need to move in any

2926
02:11:19,280 --> 02:11:20,840
direction and then it multiplies this by

2927
02:11:20,840 --> 02:11:24,159
the speed which is 3

2928
02:11:24,559 --> 02:11:26,719
300 here we

2929
02:11:26,719 --> 02:11:31,840
go so we have our now our jump is a bit

2930
02:11:31,840 --> 02:11:34,840
floaty

2931
02:11:35,440 --> 02:11:38,760
so so maybe if we did the game as

2932
02:11:38,760 --> 02:11:42,119
instead of uh dying as soon as you get

2933
02:11:42,119 --> 02:11:44,400
hit what if the game was you have those

2934
02:11:44,400 --> 02:11:46,960
box appearing and the goal is to survive

2935
02:11:46,960 --> 02:11:50,079
and not be pushed outside of the bounds

2936
02:11:50,079 --> 02:11:53,679
of the of the of the thing it's going to

2937
02:11:53,679 --> 02:11:57,400
be a nice Twist on the dino game so here

2938
02:11:57,400 --> 02:12:00,520
I'm going to reduce the grav uh reduce

2939
02:12:00,520 --> 02:12:03,280
the gravity to maybe 800 so I have

2940
02:12:03,280 --> 02:12:04,599
reduced the

2941
02:12:04,599 --> 02:12:07,719
gravity uh it's still a bit too floaty

2942
02:12:07,719 --> 02:12:10,119
to my taste maybe I should increase the

2943
02:12:10,119 --> 02:12:14,040
gravity not reduce it let's put 8 1,000

2944
02:12:14,040 --> 02:12:16,480
2,000 i''s say let's say 2,000 should be

2945
02:12:16,480 --> 02:12:17,880
a good

2946
02:12:17,880 --> 02:12:19,599
value all

2947
02:12:19,599 --> 02:12:22,960
right yeah 2,000 is

2948
02:12:22,960 --> 02:12:27,840
nice now we could you know have a speed

2949
02:12:27,840 --> 02:12:28,679
that

2950
02:12:28,679 --> 02:12:32,639
varies so let's do that so let's have a

2951
02:12:32,639 --> 02:12:36,679
couple of different speeds the the boxes

2952
02:12:36,679 --> 02:12:38,800
can move towards so here I'm going to

2953
02:12:38,800 --> 02:12:40,679
Define an

2954
02:12:40,679 --> 02:12:44,719
array oops const speeds and then I'm

2955
02:12:44,719 --> 02:12:46,960
going to have either 3,000 or you move

2956
02:12:46,960 --> 02:12:51,880
really fast at 500 or even faster at 800

2957
02:12:51,880 --> 02:12:54,040
and then the way I'm going to Define

2958
02:12:54,040 --> 02:12:56,920
when to choose what is I'm going to have

2959
02:12:56,920 --> 02:12:59,880
a random selection so in JavaScript you

2960
02:12:59,880 --> 02:13:02,599
have the math module which is Avail

2961
02:13:02,599 --> 02:13:05,480
available by default you just do math

2962
02:13:05,480 --> 02:13:07,920
and then random is the method I'm going

2963
02:13:07,920 --> 02:13:10,000
to use it's going to give me a random

2964
02:13:10,000 --> 02:13:14,159
number from 0o to one now here I'm going

2965
02:13:14,159 --> 02:13:17,239
to do the selection logic here so uh

2966
02:13:17,239 --> 02:13:19,040
current speed I'm going to call the the

2967
02:13:19,040 --> 02:13:21,760
the constant and I'm going to pass it

2968
02:13:21,760 --> 02:13:24,239
here current speed so you can see how

2969
02:13:24,239 --> 02:13:26,360
declaring constants and variables is

2970
02:13:26,360 --> 02:13:29,159
useful to make your code more readable

2971
02:13:29,159 --> 02:13:30,679
so here current speed what I'm going to

2972
02:13:30,679 --> 02:13:34,719
do is I'm going to select the speed by

2973
02:13:34,719 --> 02:13:37,520
using you remember the brackets here to

2974
02:13:37,520 --> 02:13:39,360
select a specific index and it's the way

2975
02:13:39,360 --> 02:13:40,880
we're going to select the index that is

2976
02:13:40,880 --> 02:13:43,920
going to be a New Concept here so if I'm

2977
02:13:43,920 --> 02:13:45,719
going to use the

2978
02:13:45,719 --> 02:13:47,719
math.

2979
02:13:47,719 --> 02:13:50,040
random method so it's coming from the

2980
02:13:50,040 --> 02:13:52,280
math module which is from JavaScript

2981
02:13:52,280 --> 02:13:54,199
this time around uh you have this axis

2982
02:13:54,199 --> 02:13:56,079
by default there's nothing to import

2983
02:13:56,079 --> 02:13:57,360
it's going to give you a number between

2984
02:13:57,360 --> 02:14:00,079
zero and one and then you multiply this

2985
02:14:00,079 --> 02:14:03,320
by using the remember multiplication is

2986
02:14:03,320 --> 02:14:07,159
with a star symbol by the length speed

2987
02:14:07,159 --> 02:14:08,440
speeds do

2988
02:14:08,440 --> 02:14:10,520
length you remember you could get the

2989
02:14:10,520 --> 02:14:12,440
length of any array by using a DOT

2990
02:14:12,440 --> 02:14:16,440
length uh yeah the dot length now this

2991
02:14:16,440 --> 02:14:18,239
is not going to give you a whole number

2992
02:14:18,239 --> 02:14:21,239
that's why you need to use another math

2993
02:14:21,239 --> 02:14:22,880
function called math

2994
02:14:22,880 --> 02:14:25,679
floor and you need to put in parentheses

2995
02:14:25,679 --> 02:14:27,440
because we're going to pass all of this

2996
02:14:27,440 --> 02:14:28,400
as a

2997
02:14:28,400 --> 02:14:30,679
peram and it's going to make sure that

2998
02:14:30,679 --> 02:14:32,719
the number is round so it's going to

2999
02:14:32,719 --> 02:14:35,199
floor the number so if it's 0.5 it's

3000
02:14:35,199 --> 02:14:37,000
going to be zero if it's 1.5 it's going

3001
02:14:37,000 --> 02:14:39,960
to be one Etc it's going to floor it

3002
02:14:39,960 --> 02:14:41,599
that means we have a whole number here

3003
02:14:41,599 --> 02:14:43,760
which is going to act as the index so

3004
02:14:43,760 --> 02:14:47,320
now let's look at the result here we go

3005
02:14:47,320 --> 02:14:48,639
you see the speed

3006
02:14:48,639 --> 02:14:51,760
varies and then

3007
02:14:51,760 --> 02:14:56,119
as soon as we go off screen we going to

3008
02:14:56,960 --> 02:15:02,320
lose so now it becomes a the time before

3009
02:15:02,320 --> 02:15:04,000
you

3010
02:15:04,000 --> 02:15:07,559
lose so here we can add different speeds

3011
02:15:07,559 --> 02:15:10,079
so what's nice about this piece of code

3012
02:15:10,079 --> 02:15:13,320
is that it is it scales regardless of

3013
02:15:13,320 --> 02:15:16,199
the length so I can add continue to add

3014
02:15:16,199 --> 02:15:18,760
elements and the code is still going to

3015
02:15:18,760 --> 02:15:21,040
work this one so that's something that

3016
02:15:21,040 --> 02:15:23,040
you really want when writing code is to

3017
02:15:23,040 --> 02:15:25,199
have code that can be adapted that

3018
02:15:25,199 --> 02:15:26,800
adapts to the

3019
02:15:26,800 --> 02:15:29,119
situation uh when you can do in when you

3020
02:15:29,119 --> 02:15:31,040
are in situations when you're able to

3021
02:15:31,040 --> 02:15:33,000
have code like that this is really great

3022
02:15:33,000 --> 02:15:35,960
this is great code so here I'm going to

3023
02:15:35,960 --> 02:15:37,320
let's say

3024
02:15:37,320 --> 02:15:40,119
2,000 let's say one to

3025
02:15:40,119 --> 02:15:43,800
4,000 let's see how it how easy or

3026
02:15:43,800 --> 02:15:45,040
difficult the game

3027
02:15:45,040 --> 02:15:48,960
becomes okay it becomes too fast that it

3028
02:15:48,960 --> 02:15:51,280
doesn't impact the gravity system like

3029
02:15:51,280 --> 02:15:54,480
the physic system struggles to handle so

3030
02:15:54,480 --> 02:15:58,280
let's add 1,1

3031
02:15:58,360 --> 02:16:00,480
1,500 here we

3032
02:16:00,480 --> 02:16:04,480
go all right so we have a game now the

3033
02:16:04,480 --> 02:16:07,239
last steps is to maybe add a

3034
02:16:07,239 --> 02:16:10,639
timer and

3035
02:16:10,639 --> 02:16:12,679
uh

3036
02:16:12,679 --> 02:16:16,599
oops add a timer and

3037
02:16:16,599 --> 02:16:19,360
yep I'm wondering if it's too easy

3038
02:16:19,360 --> 02:16:22,360
though

3039
02:16:25,960 --> 02:16:28,360
here we

3040
02:16:30,679 --> 02:16:33,719
go okay so let's have a

3041
02:16:33,719 --> 02:16:37,639
timer so the way to display text is the

3042
02:16:37,639 --> 02:16:40,840
same thing you use game objects and uh

3043
02:16:40,840 --> 02:16:43,559
yep so basically we could use this to

3044
02:16:43,559 --> 02:16:45,479
have a counter

3045
02:16:45,479 --> 02:16:49,840
outside so const counter let's say

3046
02:16:49,840 --> 02:16:52,080
zero and that would be the

3047
02:16:52,080 --> 02:16:55,760
score and the the longer you stay within

3048
02:16:55,760 --> 02:16:58,160
the bounds the higher the score and

3049
02:16:58,160 --> 02:17:00,280
every time this Loop is going to run we

3050
02:17:00,280 --> 02:17:02,760
do counter

3051
02:17:02,760 --> 02:17:06,439
Plus+ which is going to run uh increase

3052
02:17:06,439 --> 02:17:09,679
and then here you could add at the top

3053
02:17:09,679 --> 02:17:14,319
left corner so what you can do is uh

3054
02:17:14,319 --> 02:17:16,599
basically create a actually you don't

3055
02:17:16,599 --> 02:17:18,080
want to create a game new game object

3056
02:17:18,080 --> 02:17:20,080
what you can do is you create a game

3057
02:17:20,080 --> 02:17:22,840
object here

3058
02:17:23,840 --> 02:17:26,040
const

3059
02:17:26,040 --> 02:17:28,200
counter

3060
02:17:28,200 --> 02:17:31,280
UI and I'm going to use the add function

3061
02:17:31,280 --> 02:17:34,040
here I'm going to use the text property

3062
02:17:34,040 --> 02:17:36,679
and because by default game object are

3063
02:17:36,679 --> 02:17:39,399
positions are positioned to the top left

3064
02:17:39,399 --> 02:17:42,120
corner I don't really need to specify a

3065
02:17:42,120 --> 02:17:44,800
position or anything you I can just add

3066
02:17:44,800 --> 02:17:47,080
a text here zero so the text component

3067
02:17:47,080 --> 02:17:49,120
is from Kay it takes a text so I'm going

3068
02:17:49,120 --> 02:17:52,120
to just going to put zero here and

3069
02:17:52,120 --> 02:17:54,760
then what you can do is after

3070
02:17:54,760 --> 02:17:57,920
incrementing you can have counter. UI

3071
02:17:57,920 --> 02:17:59,399
and then have access to the text

3072
02:17:59,399 --> 02:18:01,040
property and then you can modify the

3073
02:18:01,040 --> 02:18:04,760
text with a new C counter now remember

3074
02:18:04,760 --> 02:18:07,359
here it's a number and usually you want

3075
02:18:07,359 --> 02:18:10,240
to do like two string using the two

3076
02:18:10,240 --> 02:18:12,679
string method to be like

3077
02:18:12,679 --> 02:18:16,880
really uh how we say to really be in the

3078
02:18:16,880 --> 02:18:20,880
correct the do the correct way however

3079
02:18:20,880 --> 02:18:23,240
JavaScript it works to just transform as

3080
02:18:23,240 --> 02:18:27,800
a text put as a text the the number

3081
02:18:27,800 --> 02:18:31,599
directly because remember um if you do

3082
02:18:31,599 --> 02:18:34,200
the plus sign it's going to concatenate

3083
02:18:34,200 --> 02:18:37,080
so yeah so just you know just put the

3084
02:18:37,080 --> 02:18:41,439
counter here and if I go here assignment

3085
02:18:41,439 --> 02:18:45,120
to a constant variable remember uh we

3086
02:18:45,120 --> 02:18:48,559
cannot what do you mean constant

3087
02:18:48,559 --> 02:18:51,040
variable uh okay so this needs to be

3088
02:18:51,040 --> 02:18:53,000
transformed into a let a variable

3089
02:18:53,000 --> 02:18:55,120
because we cannot increment it

3090
02:18:55,120 --> 02:18:57,599
otherwise and then that should work so

3091
02:18:57,599 --> 02:18:59,719
you see at the top left corner you have

3092
02:18:59,719 --> 02:19:04,160
three four as the loop starts oops and

3093
02:19:04,160 --> 02:19:06,160
then I lost so now what I'm going to do

3094
02:19:06,160 --> 02:19:08,840
is I'm going to have the game over

3095
02:19:08,840 --> 02:19:13,479
condition so what happens is we need to

3096
02:19:13,479 --> 02:19:16,280
in the player logic there's actually a

3097
02:19:16,280 --> 02:19:19,719
component called the

3098
02:19:19,719 --> 02:19:24,880
offscreen component so if I go

3099
02:19:25,280 --> 02:19:28,880
here here at the end of the player

3100
02:19:28,880 --> 02:19:31,240
definition If I Do offscreen by the way

3101
02:19:31,240 --> 02:19:34,040
use the line numbers to find yourself

3102
02:19:34,040 --> 02:19:36,399
there's this offscreen component that

3103
02:19:36,399 --> 02:19:38,760
means if you it's going to track when

3104
02:19:38,760 --> 02:19:41,319
you're off

3105
02:19:41,519 --> 02:19:47,120
screen so now here here which going to

3106
02:19:47,120 --> 02:19:48,399
which is going to allow you to have

3107
02:19:48,399 --> 02:19:52,359
access to a new method called is

3108
02:19:52,359 --> 02:19:56,359
or when the off

3109
02:19:56,359 --> 02:19:58,600
screen is off

3110
02:19:58,600 --> 02:20:00,840
screen that's a Boolean that's not what

3111
02:20:00,840 --> 02:20:02,040
I

3112
02:20:02,040 --> 02:20:06,319
want um what's the the

3113
02:20:06,800 --> 02:20:11,319
function is off screen on Destroyer on

3114
02:20:11,319 --> 02:20:13,240
exit

3115
02:20:13,240 --> 02:20:17,160
screen so this method is going to take

3116
02:20:17,160 --> 02:20:20,240
in a function as its peram and it's

3117
02:20:20,240 --> 02:20:22,640
going to run that function when the game

3118
02:20:22,640 --> 02:20:24,920
object leaves the screen so here you

3119
02:20:24,920 --> 02:20:30,439
what you can do is um display message in

3120
02:20:30,439 --> 02:20:35,280
the much the same way uh using the text

3121
02:20:35,399 --> 02:20:37,920
component working at big fonts like that

3122
02:20:37,920 --> 02:20:40,160
is really not handy because it it hides

3123
02:20:40,160 --> 02:20:44,040
the actual code so I hope in your editor

3124
02:20:44,040 --> 02:20:46,200
you don't have those behaviors though so

3125
02:20:46,200 --> 02:20:51,160
here game game over

3126
02:20:51,160 --> 02:20:53,200
so at the top left corner it's going to

3127
02:20:53,200 --> 02:20:56,640
display game over now if I let myself

3128
02:20:56,640 --> 02:20:59,760
beaten game over you can see now you see

3129
02:20:59,760 --> 02:21:02,720
the score continues though uh which is

3130
02:21:02,720 --> 02:21:05,120
kind of strange but um it's not what we

3131
02:21:05,120 --> 02:21:08,560
want basically what I meant um so what

3132
02:21:08,560 --> 02:21:12,520
happens is we can decide that

3133
02:21:12,520 --> 02:21:15,720
um we could

3134
02:21:15,720 --> 02:21:18,240
Define so I I don't want to complicate

3135
02:21:18,240 --> 02:21:22,960
things um so what we could do is Define

3136
02:21:22,960 --> 02:21:26,920
a scene so in KL you have scenes uh the

3137
02:21:26,920 --> 02:21:28,280
way you can Define them is just by

3138
02:21:28,280 --> 02:21:32,040
calling the scene method pass in a name

3139
02:21:32,040 --> 02:21:34,479
you want to use for that scene game

3140
02:21:34,479 --> 02:21:36,880
over and then the second param is going

3141
02:21:36,880 --> 02:21:38,720
to be the logic that is going to run for

3142
02:21:38,720 --> 02:21:41,120
that scene and it's going to be an arrow

3143
02:21:41,120 --> 02:21:43,399
function or here it's more handy to use

3144
02:21:43,399 --> 02:21:46,000
an error function as a so Arrow

3145
02:21:46,000 --> 02:21:49,200
functions are really useful in K play uh

3146
02:21:49,200 --> 02:21:51,160
maybe I should have taught them at the

3147
02:21:51,160 --> 02:21:54,359
beginning anyway uh I'm in a moment I'm

3148
02:21:54,359 --> 02:21:56,600
going to teach you the I'm going to

3149
02:21:56,600 --> 02:21:58,840
point you toward a really great resource

3150
02:21:58,840 --> 02:22:02,680
for JavaScript so yeah uh you're

3151
02:22:02,680 --> 02:22:04,200
probably going to learn

3152
02:22:04,200 --> 02:22:08,840
everything at once there anyway so I

3153
02:22:08,840 --> 02:22:10,760
named this scene game

3154
02:22:10,760 --> 02:22:14,319
over and what happens here you can

3155
02:22:14,319 --> 02:22:18,840
instead of displaying the game over text

3156
02:22:18,840 --> 02:22:21,399
here you can display it here

3157
02:22:21,399 --> 02:22:23,960
put a position k.

3158
02:22:23,960 --> 02:22:28,200
position component call from within the

3159
02:22:28,200 --> 02:22:31,399
center function method from Klay which

3160
02:22:31,399 --> 02:22:33,479
is going to Center the game object and

3161
02:22:33,479 --> 02:22:36,160
then here in on exit screen I'm just

3162
02:22:36,160 --> 02:22:38,840
going to do K.O which is the method used

3163
02:22:38,840 --> 02:22:40,840
to go to a specific scene and I can go

3164
02:22:40,840 --> 02:22:43,080
to the game over scene like that so now

3165
02:22:43,080 --> 02:22:46,720
if I go here and I let my save Pon it's

3166
02:22:46,720 --> 02:22:49,120
going to be game over and then you need

3167
02:22:49,120 --> 02:22:51,240
to refresh the page to play the game

3168
02:22:51,240 --> 02:22:54,920
again now that's it that's the game and

3169
02:22:54,920 --> 02:22:58,040
uh hope you learned a few things and uh

3170
02:22:58,040 --> 02:23:00,920
yep it's pretty fun to to play it's a

3171
02:23:00,920 --> 02:23:03,560
bit too easy though so you can tweak the

3172
02:23:03,560 --> 02:23:06,720
values but at least you have your first

3173
02:23:06,720 --> 02:23:09,760
very first game now it's time to teach

3174
02:23:09,760 --> 02:23:14,840
you how to export that game how to uh

3175
02:23:14,840 --> 02:23:17,240
publish it so the way you're going to do

3176
02:23:17,240 --> 02:23:20,640
that uh the simplest way put it on it. I

3177
02:23:20,640 --> 02:23:23,359
which accepts web export or game jolt

3178
02:23:23,359 --> 02:23:25,040
those websites the way you're going to

3179
02:23:25,040 --> 02:23:28,720
do that is you're going to first open up

3180
02:23:28,720 --> 02:23:32,920
the terminal again and then here you can

3181
02:23:32,920 --> 02:23:35,160
use control sorry this is the terminal

3182
02:23:35,160 --> 02:23:39,279
window you can use control C to cancel

3183
02:23:39,279 --> 02:23:42,200
uh the the server you started uh

3184
02:23:42,200 --> 02:23:44,920
terminate terminates the the server I

3185
02:23:44,920 --> 02:23:48,160
think in Mac OS it's command C or

3186
02:23:48,160 --> 02:23:49,880
control c as well I don't I don't

3187
02:23:49,880 --> 02:23:51,800
remember well it's been a while since I

3188
02:23:51,800 --> 02:23:55,040
haven't used a Mac so now here you're

3189
02:23:55,040 --> 02:23:58,399
going to run npm run

3190
02:23:58,399 --> 02:24:01,520
build now if you run npm run

3191
02:24:01,520 --> 02:24:04,200
build it's going to transform this and

3192
02:24:04,200 --> 02:24:06,760
build it for production and it's going

3193
02:24:06,760 --> 02:24:10,359
to create this disc folder now to to

3194
02:24:10,359 --> 02:24:13,080
check that actually it actually works

3195
02:24:13,080 --> 02:24:15,279
the build the output you're going to do

3196
02:24:15,279 --> 02:24:18,240
npm run um

3197
02:24:18,240 --> 02:24:20,680
preview which is going to preview your

3198
02:24:20,680 --> 02:24:22,960
build it's going to create another Local

3199
02:24:22,960 --> 02:24:26,399
Host I'm going to copy the link though

3200
02:24:26,399 --> 02:24:28,359
manually because I'm going to put it on

3201
02:24:28,359 --> 02:24:31,560
my edge browser and it works you see now

3202
02:24:31,560 --> 02:24:34,120
what you have to do is you simply open

3203
02:24:34,120 --> 02:24:37,160
this in your file explorer zip those

3204
02:24:37,160 --> 02:24:39,760
into a folder these three

3205
02:24:39,760 --> 02:24:42,600
things and then you can just drag and

3206
02:24:42,600 --> 02:24:46,040
drop them in the .io thing so h. iio

3207
02:24:46,040 --> 02:24:49,080
have their own guide on how to uh

3208
02:24:49,080 --> 02:24:51,279
publish uh the web you just have the zip

3209
02:24:51,279 --> 02:24:53,760
file and then you that contains the

3210
02:24:53,760 --> 02:24:55,080
entry point the

3211
02:24:55,080 --> 02:24:58,120
index.html the assets and uh basically

3212
02:24:58,120 --> 02:24:59,960
the your your output you just put it

3213
02:24:59,960 --> 02:25:02,720
there that you set it to web game web

3214
02:25:02,720 --> 02:25:06,680
export and that's it that's how you

3215
02:25:06,680 --> 02:25:08,680
publish your game uh how you get it

3216
02:25:08,680 --> 02:25:09,920
ready for

3217
02:25:09,920 --> 02:25:12,720
production so now what are the next

3218
02:25:12,720 --> 02:25:15,200
steps so you've learned quite a lot and

3219
02:25:15,200 --> 02:25:17,680
maybe too much and it's time to you know

3220
02:25:17,680 --> 02:25:21,160
relax and also talk about the next next

3221
02:25:21,160 --> 02:25:25,359
steps so here is my channel so I make

3222
02:25:25,359 --> 02:25:27,279
JavaScript and typescript Game Dev

3223
02:25:27,279 --> 02:25:30,760
tutorials mostly and you can see there's

3224
02:25:30,760 --> 02:25:33,200
plenty of tutorials that you that are

3225
02:25:33,200 --> 02:25:35,200
now accessible to you that you couldn't

3226
02:25:35,200 --> 02:25:36,399
do before because you didn't know

3227
02:25:36,399 --> 02:25:39,520
JavaScript as all and so I recommend you

3228
02:25:39,520 --> 02:25:42,600
can go here but what I recommend more uh

3229
02:25:42,600 --> 02:25:46,680
at first maybe uh is to actually no you

3230
02:25:46,680 --> 02:25:49,319
can watch my tutorials uh immediately

3231
02:25:49,319 --> 02:25:51,920
after this one but you can also check

3232
02:25:51,920 --> 02:25:53,920
this interesting resource called the

3233
02:25:53,920 --> 02:25:57,000
modern JavaScript tutorial which

3234
02:25:57,000 --> 02:26:00,399
contains everything about JavaScript

3235
02:26:00,399 --> 02:26:03,040
classes error handling things promise

3236
02:26:03,040 --> 02:26:05,399
promises a syn weight something I did

3237
02:26:05,399 --> 02:26:09,640
not cover at all in this project in this

3238
02:26:09,640 --> 02:26:12,200
sorry this crash course but is very

3239
02:26:12,200 --> 02:26:15,479
present in my tutorials I I think I

3240
02:26:15,479 --> 02:26:18,520
spent some time uh explaining it but not

3241
02:26:18,520 --> 02:26:21,319
all the time not in every tutorial

3242
02:26:21,319 --> 02:26:24,000
so that's something you can I recommend

3243
02:26:24,000 --> 02:26:26,680
you just look through and I think it's

3244
02:26:26,680 --> 02:26:29,680
going to really round up your knowledge

3245
02:26:29,680 --> 02:26:31,160
and what's really great about this

3246
02:26:31,160 --> 02:26:33,439
resource the javascript. info is that

3247
02:26:33,439 --> 02:26:35,040
you have a search bar so you can search

3248
02:26:35,040 --> 02:26:37,399
specific Concepts so for example if I se

3249
02:26:37,399 --> 02:26:39,200
search

3250
02:26:39,200 --> 02:26:41,880
promises I'm going to get specific like

3251
02:26:41,880 --> 02:26:44,960
the specific text that explains how it

3252
02:26:44,960 --> 02:26:48,760
works now yep so this resource along

3253
02:26:48,760 --> 02:26:51,120
with the mdn

3254
02:26:51,120 --> 02:26:55,680
MDM M mdn web

3255
02:26:55,680 --> 02:27:00,520
docs Mo yep these are I would say the

3256
02:27:00,520 --> 02:27:02,680
highest quality docs you can find

3257
02:27:02,680 --> 02:27:05,560
regarding JavaScript hi everyone welcome

3258
02:27:05,560 --> 02:27:07,399
to this new video and today it's going

3259
02:27:07,399 --> 02:27:10,840
to be a crash course on the Klay Library

3260
02:27:10,840 --> 02:27:13,399
so Klay is a library for making games in

3261
02:27:13,399 --> 02:27:15,680
JavaScript and in this video we're going

3262
02:27:15,680 --> 02:27:18,880
to go over the various concepts of this

3263
02:27:18,880 --> 02:27:21,240
library and it's not going to be the

3264
02:27:21,240 --> 02:27:23,560
usual Project based tutorials but if

3265
02:27:23,560 --> 02:27:25,560
you're interested in more Project based

3266
02:27:25,560 --> 02:27:28,240
tutorials uh where you learn the the

3267
02:27:28,240 --> 02:27:31,040
concepts as you go feel free to watch my

3268
02:27:31,040 --> 02:27:33,479
previous video so I have pre prepared a

3269
02:27:33,479 --> 02:27:35,520
list of Concepts and things I want to

3270
02:27:35,520 --> 02:27:38,240
talk about uh regarding K playay so this

3271
02:27:38,240 --> 02:27:42,040
video is more meant to be watched as a

3272
02:27:42,040 --> 02:27:44,520
something that you watch passively and

3273
02:27:44,520 --> 02:27:48,279
you refer to later on so here we go so

3274
02:27:48,279 --> 02:27:51,560
first of all I'm on the KL GS website

3275
02:27:51,560 --> 02:27:54,560
and this KS website is very important

3276
02:27:54,560 --> 02:27:55,560
because this is where you're going to

3277
02:27:55,560 --> 02:27:57,920
see the documentation and access to the

3278
02:27:57,920 --> 02:28:00,920
playground Etc so it's not fully

3279
02:28:00,920 --> 02:28:04,439
complete yet so before continuing I need

3280
02:28:04,439 --> 02:28:07,240
to explain more in detail the origin

3281
02:28:07,240 --> 02:28:11,000
story of Klay so Klay was previously

3282
02:28:11,000 --> 02:28:13,840
called Kaboom JZ and Kaboom JZ was a

3283
02:28:13,840 --> 02:28:15,960
library for making games which was

3284
02:28:15,960 --> 02:28:19,160
maintained by repet if you watch my

3285
02:28:19,160 --> 02:28:21,200
previous video on the topic where I

3286
02:28:21,200 --> 02:28:23,479
explain why the Rebrand you're going to

3287
02:28:23,479 --> 02:28:25,319
see that there's a bit of context here

3288
02:28:25,319 --> 02:28:28,200
but for now it's the same thing as

3289
02:28:28,200 --> 02:28:30,640
Kaboom but with just a new

3290
02:28:30,640 --> 02:28:36,279
name so let's jump right into the um

3291
02:28:36,279 --> 02:28:39,720
installation process so to install K

3292
02:28:39,720 --> 02:28:42,520
playay there are many ways and I'm going

3293
02:28:42,520 --> 02:28:45,319
to talk about three ways and I think

3294
02:28:45,319 --> 02:28:48,960
there's two ways or yeah I think there's

3295
02:28:48,960 --> 02:28:51,439
like two ways mentioned here or three so

3296
02:28:51,439 --> 02:28:53,279
anyway I think both the three ways are

3297
02:28:53,279 --> 02:28:56,680
going to be mentioned so you can use a

3298
02:28:56,680 --> 02:28:59,319
package called create K play to create

3299
02:28:59,319 --> 02:29:01,200
maybe I should increase the font size

3300
02:29:01,200 --> 02:29:05,240
here we go so you can use

3301
02:29:05,240 --> 02:29:09,080
a a package called create capl to create

3302
02:29:09,080 --> 02:29:11,080
to scaffold your capl

3303
02:29:11,080 --> 02:29:13,920
project and uh I personally don't use

3304
02:29:13,920 --> 02:29:17,920
this method uh simply because it uses es

3305
02:29:17,920 --> 02:29:20,640
build as the bundler and you have to

3306
02:29:20,640 --> 02:29:24,439
refresh manually your browser to see the

3307
02:29:24,439 --> 02:29:26,680
changes I prefer to use vit which is

3308
02:29:26,680 --> 02:29:28,840
another bundler but this option if

3309
02:29:28,840 --> 02:29:30,200
you're a beginner you're just starting

3310
02:29:30,200 --> 02:29:32,920
with npm and you don't know this uh

3311
02:29:32,920 --> 02:29:35,560
bundler Etc it's a very straightforward

3312
02:29:35,560 --> 02:29:39,240
way of using so it's a CLI tool so if i

3313
02:29:39,240 --> 02:29:41,040
y so I think this just will Point

3314
02:29:41,040 --> 02:29:44,600
towards uh the package on npm so if I

3315
02:29:44,600 --> 02:29:47,160
open that up you can see the various

3316
02:29:47,160 --> 02:29:49,040
options you can add typescript you can

3317
02:29:49,040 --> 02:29:52,680
even add uh Tori which is a technology I

3318
02:29:52,680 --> 02:29:56,359
used to make the desktop game tutorial

3319
02:29:56,359 --> 02:29:58,240
uh which was the previous video on the

3320
02:29:58,240 --> 02:30:00,960
channel and that's that so you have

3321
02:30:00,960 --> 02:30:02,800
examples you can start with an example

3322
02:30:02,800 --> 02:30:05,600
Etc so very it's Can it can be very

3323
02:30:05,600 --> 02:30:07,200
handy just one thing I don't like about

3324
02:30:07,200 --> 02:30:09,160
it is the fact that you have to refresh

3325
02:30:09,160 --> 02:30:11,439
manually the the

3326
02:30:11,439 --> 02:30:14,720
browser now you can use a CDN this is

3327
02:30:14,720 --> 02:30:17,439
the second option and this option I like

3328
02:30:17,439 --> 02:30:19,560
it and I've used it a lot for my

3329
02:30:19,560 --> 02:30:21,399
tutorial because it's very easy to set

3330
02:30:21,399 --> 02:30:24,120
up so if you don't want to use nodejs

3331
02:30:24,120 --> 02:30:26,640
and you just want to use basic HTML CSS

3332
02:30:26,640 --> 02:30:28,880
and JavaScript well you can use this

3333
02:30:28,880 --> 02:30:31,080
method so this method how it works is

3334
02:30:31,080 --> 02:30:34,680
that you point to this link and here you

3335
02:30:34,680 --> 02:30:38,479
have the version and then yep it will

3336
02:30:38,479 --> 02:30:40,760
load the the file I usually prefer to go

3337
02:30:40,760 --> 02:30:43,479
to that link and then download the file

3338
02:30:43,479 --> 02:30:45,560
itself instead of just pasting the link

3339
02:30:45,560 --> 02:30:47,359
here but you can do both and the

3340
02:30:47,359 --> 02:30:49,160
advantage of this method is that really

3341
02:30:49,160 --> 02:30:52,279
it's uh dep dependent from node and it

3342
02:30:52,279 --> 02:30:55,920
will actually work I think if you don't

3343
02:30:55,920 --> 02:30:57,520
I think it's more maintainable in the

3344
02:30:57,520 --> 02:30:59,880
sense so what I mean here is that if I

3345
02:30:59,880 --> 02:31:02,359
don't touch the project like in five

3346
02:31:02,359 --> 02:31:04,359
years and I come back it's going to

3347
02:31:04,359 --> 02:31:06,160
still work exactly the same there's

3348
02:31:06,160 --> 02:31:09,040
nothing to update Etc because it it

3349
02:31:09,040 --> 02:31:11,640
freezes it takes a specific version Etc

3350
02:31:11,640 --> 02:31:14,040
and then you but you can also do that

3351
02:31:14,040 --> 02:31:15,640
with nodejs but you don't have like the

3352
02:31:15,640 --> 02:31:16,920
node thing you don't have to install

3353
02:31:16,920 --> 02:31:20,640
node Etc so that's the advantage

3354
02:31:20,640 --> 02:31:24,439
so here it's using the module type uh in

3355
02:31:24,439 --> 02:31:26,640
JavaScript so it's a JavaScript

3356
02:31:26,640 --> 02:31:29,560
JavaScript n native modules so you can

3357
02:31:29,560 --> 02:31:31,560
do both here either the old way where

3358
02:31:31,560 --> 02:31:33,880
you just load the thing here this time

3359
02:31:33,880 --> 02:31:35,319
around you need the GS instead of the

3360
02:31:35,319 --> 02:31:37,439
MGs and then you use it in another

3361
02:31:37,439 --> 02:31:40,600
script tag or another JS file that you

3362
02:31:40,600 --> 02:31:42,600
load through a script tag or you use

3363
02:31:42,600 --> 02:31:45,120
this new method newer way of having a

3364
02:31:45,120 --> 02:31:47,600
type module with all which allows you to

3365
02:31:47,600 --> 02:31:50,680
use import statements

3366
02:31:50,680 --> 02:31:56,160
and then finally it's the um npm way

3367
02:31:56,160 --> 02:31:58,520
with vit where you first need to install

3368
02:31:58,520 --> 02:32:01,359
V and then you use npm install K play

3369
02:32:01,359 --> 02:32:02,720
and then you can specify a version by

3370
02:32:02,720 --> 02:32:05,720
using this notation here and then here

3371
02:32:05,720 --> 02:32:07,760
there's a it's a bit more complex to

3372
02:32:07,760 --> 02:32:10,319
explain how to do it uh but if you look

3373
02:32:10,319 --> 02:32:15,680
at any my uh web developer as a game uh

3374
02:32:15,680 --> 02:32:19,960
portfolio my my portfolio game tutorial

3375
02:32:19,960 --> 02:32:23,479
or even I think I used it in the Tor

3376
02:32:23,479 --> 02:32:25,800
tutorial where VT is used but I think

3377
02:32:25,800 --> 02:32:29,840
you should really refer to the uh build

3378
02:32:29,840 --> 02:32:32,240
a developer portfolio as a 2d game

3379
02:32:32,240 --> 02:32:34,560
tutorial on my channel which really goes

3380
02:32:34,560 --> 02:32:38,680
through how to set up uh K playay with

3381
02:32:38,680 --> 02:32:41,279
well Kaboom but it's the same thing so

3382
02:32:41,279 --> 02:32:42,160
with

3383
02:32:42,160 --> 02:32:44,960
V all right so now that we know how to

3384
02:32:44,960 --> 02:32:47,080
install K play how do you deploy your

3385
02:32:47,080 --> 02:32:49,920
games so this is a question that uh you

3386
02:32:49,920 --> 02:32:52,800
might be wondering how to answer and

3387
02:32:52,800 --> 02:32:54,840
then depending of course on the tool you

3388
02:32:54,840 --> 02:32:56,680
use it's going to be different but for

3389
02:32:56,680 --> 02:32:59,600
the simple the simplest way the CDN is

3390
02:32:59,600 --> 02:33:03,120
you just zip that file and zip your your

3391
02:33:03,120 --> 02:33:05,600
code base basically and then put it on

3392
02:33:05,600 --> 02:33:08,920
.io or on GitHub Pages Etc as long as

3393
02:33:08,920 --> 02:33:11,680
there is an index.html file it should be

3394
02:33:11,680 --> 02:33:15,120
very straightforward um not going to

3395
02:33:15,120 --> 02:33:18,120
really dive deep into how to do this

3396
02:33:18,120 --> 02:33:20,560
here um I think because maybe it could

3397
02:33:20,560 --> 02:33:23,319
can change in the future depending on

3398
02:33:23,319 --> 02:33:26,399
the tools you're using so if you want I

3399
02:33:26,399 --> 02:33:28,920
could write a blog post on it uh by the

3400
02:33:28,920 --> 02:33:32,520
way I make written tutorials on uh

3401
02:33:32,520 --> 02:33:35,000
substack which is my newsletter you can

3402
02:33:35,000 --> 02:33:36,960
follow Link in the description so if you

3403
02:33:36,960 --> 02:33:40,080
want more written content and the place

3404
02:33:40,080 --> 02:33:41,399
of written content is that if you want

3405
02:33:41,399 --> 02:33:43,479
to learn how to do something specific

3406
02:33:43,479 --> 02:33:45,439
it's very it's more convenient because

3407
02:33:45,439 --> 02:33:48,680
you can easily refer back to a text

3408
02:33:48,680 --> 02:33:51,359
rather than a video and for more Project

3409
02:33:51,359 --> 02:33:53,439
based tutorials this is better as a

3410
02:33:53,439 --> 02:33:55,359
video because you know I can just show

3411
02:33:55,359 --> 02:33:57,560
you how to build a project from from a

3412
02:33:57,560 --> 02:33:59,439
toz and it would take too long to write

3413
02:33:59,439 --> 02:34:01,680
it out now this video I'm currently

3414
02:34:01,680 --> 02:34:04,000
recording is the exception because

3415
02:34:04,000 --> 02:34:06,000
normally this would be in a text format

3416
02:34:06,000 --> 02:34:07,439
but because there is a lot of content I

3417
02:34:07,439 --> 02:34:09,840
want to cover I would never have the

3418
02:34:09,840 --> 02:34:12,240
time to write it out so maybe I will

3419
02:34:12,240 --> 02:34:15,040
write parts of it uh in the future as a

3420
02:34:15,040 --> 02:34:18,560
written content all right so now that we

3421
02:34:18,560 --> 02:34:20,840
have covered how uh the various ways you

3422
02:34:20,840 --> 02:34:23,960
can install K play Etc let's go to the

3423
02:34:23,960 --> 02:34:26,000
playground so the playground is

3424
02:34:26,000 --> 02:34:28,279
basically an editor that you can use

3425
02:34:28,279 --> 02:34:29,920
online without having to install

3426
02:34:29,920 --> 02:34:34,040
anything just to try out capl so here

3427
02:34:34,040 --> 02:34:35,880
you can see that capl is imported by

3428
02:34:35,880 --> 02:34:37,040
default you don't see the import

3429
02:34:37,040 --> 02:34:38,880
statement that's uh that is something

3430
02:34:38,880 --> 02:34:41,560
specific to this playground but in when

3431
02:34:41,560 --> 02:34:43,319
you're using vs code you'll have to do

3432
02:34:43,319 --> 02:34:47,520
like cap play from capl Etc so how do

3433
02:34:47,520 --> 02:34:50,160
you initialize the canvas in a Play

3434
02:34:50,160 --> 02:34:53,520
Project well you call the K playay

3435
02:34:53,520 --> 02:34:55,760
method uh function sorry and then this

3436
02:34:55,760 --> 02:34:59,720
Klay function has various options and

3437
02:34:59,720 --> 02:35:02,520
let's dive into those options so of

3438
02:35:02,520 --> 02:35:03,720
course I need

3439
02:35:03,720 --> 02:35:07,680
to increase the font size like that

3440
02:35:07,680 --> 02:35:10,600
sorry so that you can see I'm assuming

3441
02:35:10,600 --> 02:35:13,000
maybe you're watching this on mobile and

3442
02:35:13,000 --> 02:35:17,560
yep so here we go we have a a big text

3443
02:35:17,560 --> 02:35:20,960
so let's write it out so here the play

3444
02:35:20,960 --> 02:35:25,000
function takes in optionally an object

3445
02:35:25,000 --> 02:35:27,359
which you can specify a bunch of params

3446
02:35:27,359 --> 02:35:30,120
by default the canvas when initialized

3447
02:35:30,120 --> 02:35:33,279
will take the whole uh available space

3448
02:35:33,279 --> 02:35:34,840
however if you want to specify specific

3449
02:35:34,840 --> 02:35:36,760
width and height you can do so using the

3450
02:35:36,760 --> 02:35:40,460
width property for example

3451
02:35:40,460 --> 02:35:42,000
[Music]

3452
02:35:42,000 --> 02:35:45,640
1,280 and the height I'm going to use

3453
02:35:45,640 --> 02:35:50,319
720 and if you do that and refresh well

3454
02:35:50,319 --> 02:35:54,359
because I'm zoomed in a lot if I do

3455
02:35:54,359 --> 02:35:56,880
zooom I get maybe

3456
02:35:56,880 --> 02:36:01,000
a with yeah I refresh so there's a bug

3457
02:36:01,000 --> 02:36:05,160
with the the playground at this size so

3458
02:36:05,160 --> 02:36:05,880
yeah

3459
02:36:05,880 --> 02:36:08,920
sorry can I increase the font size

3460
02:36:08,920 --> 02:36:11,600
anyway you can see that it takes

3461
02:36:11,600 --> 02:36:15,920
uh the the appropriate width and height

3462
02:36:15,920 --> 02:36:19,720
however if you want your canvas to be

3463
02:36:19,720 --> 02:36:23,560
scalable in the sense that it will adapt

3464
02:36:23,560 --> 02:36:27,200
its size regardless of the window size

3465
02:36:27,200 --> 02:36:30,279
Etc you can use the letter box option

3466
02:36:30,279 --> 02:36:32,240
which will make sure that the canvas

3467
02:36:32,240 --> 02:36:33,880
will scale

3468
02:36:33,880 --> 02:36:36,720
accordingly but while remaining

3469
02:36:36,720 --> 02:36:39,080
retaining the aspect ratio so you do

3470
02:36:39,080 --> 02:36:42,399
letter box true and it's going to add

3471
02:36:42,399 --> 02:36:47,760
black bars uh elsewhere when when

3472
02:36:47,760 --> 02:36:50,560
uh when there's nothing to but so what I

3473
02:36:50,560 --> 02:36:54,399
mean is that if the as long as the

3474
02:36:54,399 --> 02:36:57,080
aspect ratio is respected so if it it

3475
02:36:57,080 --> 02:36:59,120
would it will not expand further

3476
02:36:59,120 --> 02:37:00,720
otherwise it would violate the aspect

3477
02:37:00,720 --> 02:37:03,920
ratio so this is how you get a scalable

3478
02:37:03,920 --> 02:37:06,600
canvas that retain an aspect

3479
02:37:06,600 --> 02:37:10,120
ratio now there's also something a the

3480
02:37:10,120 --> 02:37:12,840
debug option by default it is true is

3481
02:37:12,840 --> 02:37:15,720
said it is set to true and allows you to

3482
02:37:15,720 --> 02:37:19,359
open up debug mode by using the F1 key

3483
02:37:19,359 --> 02:37:23,080
now now here I recommend that when you

3484
02:37:23,080 --> 02:37:26,040
finish your kabo uh capl sorry project

3485
02:37:26,040 --> 02:37:29,120
you set it to false so that you prevent

3486
02:37:29,120 --> 02:37:31,240
the player the end user to be able to

3487
02:37:31,240 --> 02:37:33,840
access this debug mode which is done by

3488
02:37:33,840 --> 02:37:37,240
pressing the F1 key so here I can I have

3489
02:37:37,240 --> 02:37:39,040
can I modify the

3490
02:37:39,040 --> 02:37:46,120
font font zoom in okay and then if I

3491
02:37:46,120 --> 02:37:49,520
just put the window as it was initially

3492
02:37:49,520 --> 02:37:51,080
C I'm going to

3493
02:37:51,080 --> 02:37:54,080
refresh and then here so I just

3494
02:37:54,080 --> 02:37:57,399
discovered this

3495
02:37:57,399 --> 02:38:01,240
font zoom in and then you can you have

3496
02:38:01,240 --> 02:38:05,880
to do this manually yeah can I have a

3497
02:38:05,880 --> 02:38:07,880
shortcut

3498
02:38:07,880 --> 02:38:12,800
font recently used editor font zoom

3499
02:38:12,800 --> 02:38:16,000
in okay I'm just going to set this up so

3500
02:38:16,000 --> 02:38:17,840
that I don't have to zoom in the window

3501
02:38:17,840 --> 02:38:21,439
the whole thing uh

3502
02:38:22,319 --> 02:38:24,640
so I think it's using the same uh

3503
02:38:24,640 --> 02:38:27,920
underlying editor as BS

3504
02:38:27,920 --> 02:38:30,920
code okay let's do this more

3505
02:38:30,920 --> 02:38:33,520
quickly I think that's fine all right

3506
02:38:33,520 --> 02:38:35,680
now it's it's very nice okay so you have

3507
02:38:35,680 --> 02:38:37,479
the width height layer box and debug

3508
02:38:37,479 --> 02:38:40,680
option and now the other thing I want to

3509
02:38:40,680 --> 02:38:43,920
mention is the global property so by the

3510
02:38:43,920 --> 02:38:45,880
way let's first look at debug mode so if

3511
02:38:45,880 --> 02:38:48,160
you pre you click on your canvas press

3512
02:38:48,160 --> 02:38:50,880
F1

3513
02:38:50,880 --> 02:38:53,160
uh oops I need to First remove this this

3514
02:38:53,160 --> 02:38:57,160
part which is invalid code right to here

3515
02:38:57,160 --> 02:39:00,520
press F1 nothing happens oh because I I

3516
02:39:00,520 --> 02:39:02,800
set it to false so by default it's true

3517
02:39:02,800 --> 02:39:04,439
so when you do not specify it's going to

3518
02:39:04,439 --> 02:39:06,560
be true and then you can see the FPS

3519
02:39:06,560 --> 02:39:08,399
counter and then you can see hit boxes

3520
02:39:08,399 --> 02:39:10,720
when we going to use that so for now I'm

3521
02:39:10,720 --> 02:39:13,520
going to set it to True uh but when you

3522
02:39:13,520 --> 02:39:15,359
finish your project I really really

3523
02:39:15,359 --> 02:39:19,560
recommend that you do false here now the

3524
02:39:19,560 --> 02:39:22,960
last option I want to talk about is the

3525
02:39:22,960 --> 02:39:27,040
global option property and I usually set

3526
02:39:27,040 --> 02:39:29,359
it to false what this means is that if

3527
02:39:29,359 --> 02:39:32,000
you set this to false playay methods and

3528
02:39:32,000 --> 02:39:35,120
functions can only be utilized uh I mean

3529
02:39:35,120 --> 02:39:37,000
true sorry I want to make it true by

3530
02:39:37,000 --> 02:39:40,479
default it is false but if you make no

3531
02:39:40,479 --> 02:39:42,920
never mind sorry I'm confused myself

3532
02:39:42,920 --> 02:39:44,399
it's false because we don't want it to

3533
02:39:44,399 --> 02:39:47,279
be Global so if it were Global which it

3534
02:39:47,279 --> 02:39:49,800
is by default is that you can use Klay

3535
02:39:49,800 --> 02:39:52,040
methods and functions outside of this

3536
02:39:52,040 --> 02:39:54,240
context however if you set Global to

3537
02:39:54,240 --> 02:39:57,520
false all Kaboom uh Klay methods and

3538
02:39:57,520 --> 02:40:00,479
functions must be used through this so

3539
02:40:00,479 --> 02:40:04,200
you do K dot the name of the function

3540
02:40:04,200 --> 02:40:05,960
and the method

3541
02:40:05,960 --> 02:40:09,000
Etc okay so now that I have covered this

3542
02:40:09,000 --> 02:40:13,040
let's uh show you how to load Assets in

3543
02:40:13,040 --> 02:40:16,279
capl so loading assets I think there's

3544
02:40:16,279 --> 02:40:19,319
an example we can take a look at and uh

3545
02:40:19,319 --> 02:40:20,720
let me just look it up so I don't have

3546
02:40:20,720 --> 02:40:24,640
to find new assets to show you um Sprite

3547
02:40:24,640 --> 02:40:27,399
Atlas Sprite maybe it's the Sprite

3548
02:40:27,399 --> 02:40:29,880
example by the way use this site it's

3549
02:40:29,880 --> 02:40:32,240
very handy it has a lot of examples you

3550
02:40:32,240 --> 02:40:34,960
can look at uh

3551
02:40:34,960 --> 02:40:38,439
okay particles shaders

3552
02:40:38,439 --> 02:40:41,319
bright post effect

3553
02:40:41,319 --> 02:40:43,520
RPG

3554
02:40:43,520 --> 02:40:45,080
Bene

3555
02:40:45,080 --> 02:40:49,520
okay all right so

3556
02:40:49,760 --> 02:40:52,240
now we have this okay

3557
02:40:52,240 --> 02:40:56,399
so it's not what I want

3558
02:41:00,080 --> 02:41:03,479
now here we go all right so this is the

3559
02:41:03,479 --> 02:41:06,279
buil-in Sprite example and it really

3560
02:41:06,279 --> 02:41:09,760
shows you how to load Sprites so here

3561
02:41:09,760 --> 02:41:12,600
ignored the C things here you can also

3562
02:41:12,600 --> 02:41:15,479
set of scaling and a default font which

3563
02:41:15,479 --> 02:41:17,760
are other options but I felt it weren

3564
02:41:17,760 --> 02:41:20,520
wasn't very important the scale is

3565
02:41:20,520 --> 02:41:23,319
somewhat important but the rest isn't

3566
02:41:23,319 --> 02:41:26,439
because um loading a default font you

3567
02:41:26,439 --> 02:41:28,520
can just do this elsewhere you can load

3568
02:41:28,520 --> 02:41:31,680
the specific F when you need it under a

3569
02:41:31,680 --> 02:41:33,560
specific text component later on we will

3570
02:41:33,560 --> 02:41:36,000
be looking at the various components we

3571
02:41:36,000 --> 02:41:38,279
need so the most important part here is

3572
02:41:38,279 --> 02:41:40,800
the load part so here uh since K play is

3573
02:41:40,800 --> 02:41:43,279
used globally and without a context we

3574
02:41:43,279 --> 02:41:45,399
can just immediately use the load Sprite

3575
02:41:45,399 --> 02:41:47,600
fun uh method however if you were to use

3576
02:41:47,600 --> 02:41:49,520
the setup we I've shown you earlier you

3577
02:41:49,520 --> 02:41:51,319
would write const

3578
02:41:51,319 --> 02:41:55,399
k.l I would put the global here to being

3579
02:41:55,399 --> 02:41:58,479
false and then here I would have to do

3580
02:41:58,479 --> 02:42:03,160
k. load Etc but I will not like redo the

3581
02:42:03,160 --> 02:42:06,240
the whole thing the whole example um you

3582
02:42:06,240 --> 02:42:08,000
know what since we have the the link

3583
02:42:08,000 --> 02:42:11,680
here let's do it so that you you really

3584
02:42:11,680 --> 02:42:14,720
understand everything so I'm going to

3585
02:42:14,720 --> 02:42:16,960
remove all of that and I'm going to show

3586
02:42:16,960 --> 02:42:20,319
you so here we

3587
02:42:20,319 --> 02:42:22,200
so first of all I'm just going to paste

3588
02:42:22,200 --> 02:42:26,359
here the the link towards the the Sprite

3589
02:42:26,359 --> 02:42:29,640
so I don't have to look out uh look for

3590
02:42:29,640 --> 02:42:33,279
another Sprite sheet so first of all

3591
02:42:33,279 --> 02:42:36,319
let's import let's use the let's

3592
02:42:36,319 --> 02:42:38,680
initialize our

3593
02:42:38,680 --> 02:42:42,760
canvas and then with a const K Etc now

3594
02:42:42,760 --> 02:42:46,960
if I uh hit control s when writing code

3595
02:42:46,960 --> 02:42:49,439
it's going to be like this

3596
02:42:49,439 --> 02:42:51,120
now what I'm going to do here is I'm

3597
02:42:51,120 --> 02:42:54,680
going to set the oh I'm just going to

3598
02:42:54,680 --> 02:42:56,520
set the

3599
02:42:56,520 --> 02:42:59,279
global property to being

3600
02:42:59,279 --> 02:43:02,479
false and that's it so and then now I'm

3601
02:43:02,479 --> 02:43:04,960
going to start use loading the Sprite so

3602
02:43:04,960 --> 02:43:08,399
k. load Sprite is the usual method you

3603
02:43:08,399 --> 02:43:11,040
use to load assets there's also Sprite

3604
02:43:11,040 --> 02:43:13,920
Atlas but I don't think you'll for now

3605
02:43:13,920 --> 02:43:15,520
I'm just going to present the load

3606
02:43:15,520 --> 02:43:17,720
Sprite function because the Sprite Atlas

3607
02:43:17,720 --> 02:43:19,359
is when you have a Sprite sheet with

3608
02:43:19,359 --> 02:43:21,319
various an image with various Sprite

3609
02:43:21,319 --> 02:43:23,439
sheets in the same image and you want to

3610
02:43:23,439 --> 02:43:25,560
cut out specific portions and make them

3611
02:43:25,560 --> 02:43:27,840
their own Sprite sheets so this is what

3612
02:43:27,840 --> 02:43:30,279
it is useful for maybe I'm I'm going to

3613
02:43:30,279 --> 02:43:33,000
dive into the the example that uses

3614
02:43:33,000 --> 02:43:35,080
Sprite Atlas later but for now it's

3615
02:43:35,080 --> 02:43:37,319
really important to understand how to

3616
02:43:37,319 --> 02:43:40,160
load the Sprite sheets and or just basic

3617
02:43:40,160 --> 02:43:43,680
Sprite so you use this load Sprite

3618
02:43:43,680 --> 02:43:45,840
method and then the first param it takes

3619
02:43:45,840 --> 02:43:48,120
is the key you want to use so it's a

3620
02:43:48,120 --> 02:43:49,840
name that you're going to use use in

3621
02:43:49,840 --> 02:43:52,080
your code to refer to that Sprite here

3622
02:43:52,080 --> 02:43:53,760
I'm going to call it Dino because it's a

3623
02:43:53,760 --> 02:43:56,040
dinosaur and then the second param is

3624
02:43:56,040 --> 02:43:58,600
the path towards that image in your file

3625
02:43:58,600 --> 02:44:00,600
system in your codebase but here we

3626
02:44:00,600 --> 02:44:02,760
already have something provided by the

3627
02:44:02,760 --> 02:44:04,840
playground so I'm going to use that and

3628
02:44:04,840 --> 02:44:07,640
then for now you could use both these

3629
02:44:07,640 --> 02:44:11,399
two prams and call it a day so now I'm

3630
02:44:11,399 --> 02:44:13,680
going to create a game object I'm going

3631
02:44:13,680 --> 02:44:16,439
to talk about more what game objects are

3632
02:44:16,439 --> 02:44:19,640
in Kaboom later on but I'm going to just

3633
02:44:19,640 --> 02:44:21,279
actually I don't even need to assign it

3634
02:44:21,279 --> 02:44:24,840
to a constant but just to keep it simple

3635
02:44:24,840 --> 02:44:27,399
to create a game object in K play you

3636
02:44:27,399 --> 02:44:30,200
use the ad method and then you pass in

3637
02:44:30,200 --> 02:44:31,960
an array of components those components

3638
02:44:31,960 --> 02:44:34,600
are provided mostly by K play but you

3639
02:44:34,600 --> 02:44:37,279
can create your own custom components so

3640
02:44:37,279 --> 02:44:39,960
one of the offered components is the

3641
02:44:39,960 --> 02:44:43,240
Sprite component and you pass in as the

3642
02:44:43,240 --> 02:44:45,359
param the name of the Sprite you want to

3643
02:44:45,359 --> 02:44:47,800
display now if I hit control save you

3644
02:44:47,800 --> 02:44:49,760
can see the whole Sprite sheet has been

3645
02:44:49,760 --> 02:44:51,640
displayed here by default when you

3646
02:44:51,640 --> 02:44:55,840
create a game object that isn't a in a

3647
02:44:55,840 --> 02:44:57,479
position uh you don't specify the

3648
02:44:57,479 --> 02:44:58,840
positional component it's going to put

3649
02:44:58,840 --> 02:45:01,080
it at the top left corner now here it's

3650
02:45:01,080 --> 02:45:02,920
where it's handy to maybe have the scale

3651
02:45:02,920 --> 02:45:05,200
property here and scale it four times so

3652
02:45:05,200 --> 02:45:07,200
that you can see it better so this is

3653
02:45:07,200 --> 02:45:10,359
the whole Sprite sheet now what how

3654
02:45:10,359 --> 02:45:12,479
would you go about setting specific

3655
02:45:12,479 --> 02:45:15,279
animations so here you have an optional

3656
02:45:15,279 --> 02:45:19,840
third Pam for the load Sprite at uh

3657
02:45:19,840 --> 02:45:23,359
load spr method where you can specify

3658
02:45:23,359 --> 02:45:26,880
the slice X property and the slice y

3659
02:45:26,880 --> 02:45:28,960
property the slice X property basically

3660
02:45:28,960 --> 02:45:32,160
you tell it how many uh frames there are

3661
02:45:32,160 --> 02:45:36,240
in the x axis horizontally so one 2 3 4

3662
02:45:36,240 --> 02:45:39,200
5 6 7 8 nine there's nine frames so I'm

3663
02:45:39,200 --> 02:45:42,120
going to have nine here and then slice

3664
02:45:42,120 --> 02:45:45,200
Y is going to be one because there's

3665
02:45:45,200 --> 02:45:49,439
only one um uh one

3666
02:45:49,439 --> 02:45:55,000
um one frame per uh row I guess per

3667
02:45:55,000 --> 02:45:57,279
column so here we go by default it's

3668
02:45:57,279 --> 02:45:59,240
going to take the first part and cut out

3669
02:45:59,240 --> 02:46:01,279
the rest now how do you define an

3670
02:46:01,279 --> 02:46:05,880
animation well you can have the anims

3671
02:46:05,880 --> 02:46:08,920
property and then here you choose on

3672
02:46:08,920 --> 02:46:11,080
name so here I'm just going to do the uh

3673
02:46:11,080 --> 02:46:13,080
running run animation I'm going to call

3674
02:46:13,080 --> 02:46:15,760
it run and it's another object and then

3675
02:46:15,760 --> 02:46:18,640
you specify the two the front key which

3676
02:46:18,640 --> 02:46:20,840
is the initial frame it's going to be

3677
02:46:20,840 --> 02:46:24,319
frame zero to the last frame which is

3678
02:46:24,319 --> 02:46:27,560
going to be frame index 8 because in cap

3679
02:46:27,560 --> 02:46:29,800
play um

3680
02:46:29,800 --> 02:46:32,960
okay wait a minute why is it highlighted

3681
02:46:32,960 --> 02:46:37,359
this way from two okay so one one thing

3682
02:46:37,359 --> 02:46:40,200
one thing I need to mention is that here

3683
02:46:40,200 --> 02:46:44,080
uh frames are computed have a number on

3684
02:46:44,080 --> 02:46:46,160
a Sprite sheet that always starts with

3685
02:46:46,160 --> 02:46:50,040
zero so it's zero indexed so here 0 to 8

3686
02:46:50,040 --> 02:46:52,600
is actually nine frames so now what I'm

3687
02:46:52,600 --> 02:46:54,800
going to do is now that you have this

3688
02:46:54,800 --> 02:46:57,760
you can in the Sprite component uh pass

3689
02:46:57,760 --> 02:47:01,040
a second param and specify an animation

3690
02:47:01,040 --> 02:47:03,840
and you use the Run animation name and

3691
02:47:03,840 --> 02:47:06,040
then you can see here now here by

3692
02:47:06,040 --> 02:47:07,479
default the animation will only play

3693
02:47:07,479 --> 02:47:10,080
once and then stop you can use the speed

3694
02:47:10,080 --> 02:47:12,640
property uh not the speed sorry the loop

3695
02:47:12,640 --> 02:47:16,279
property to Define if it runs only once

3696
02:47:16,279 --> 02:47:19,080
or it Loops infinitely so now it loops

3697
02:47:19,080 --> 02:47:20,279
and

3698
02:47:20,279 --> 02:47:22,760
Finly now there's something wrong with

3699
02:47:22,760 --> 02:47:25,359
the animation it doesn't look that good

3700
02:47:25,359 --> 02:47:28,520
uh so what I'm going to do here is I'm

3701
02:47:28,520 --> 02:47:30,960
going to do this I'm going to comment

3702
02:47:30,960 --> 02:47:33,520
that out I'm going to comment that out

3703
02:47:33,520 --> 02:47:35,680
as

3704
02:47:36,960 --> 02:47:39,560
well so we

3705
02:47:39,560 --> 02:47:43,240
have jumping

3706
02:47:43,240 --> 02:47:48,319
Landing jumping and then like that so

3707
02:47:48,319 --> 02:47:51,439
it's a strange animation I don't see

3708
02:47:51,439 --> 02:47:53,880
where where is the beginning and the end

3709
02:47:53,880 --> 02:47:57,240
so is this is this only one animation I

3710
02:47:57,240 --> 02:47:58,640
think it

3711
02:47:58,640 --> 02:48:01,680
is okay never mind animation is fine

3712
02:48:01,680 --> 02:48:04,359
it's just a a some a dinosaur that will

3713
02:48:04,359 --> 02:48:05,640
jump and

3714
02:48:05,640 --> 02:48:09,880
then jump again I guess anyway so I'm

3715
02:48:09,880 --> 02:48:12,279
going to put it back and

3716
02:48:12,279 --> 02:48:15,279
then I'm looping it but this animation

3717
02:48:15,279 --> 02:48:17,640
clearly doesn't seem it is designed to

3718
02:48:17,640 --> 02:48:20,920
be looped but anyway you can also

3719
02:48:20,920 --> 02:48:22,720
increase the frame rate here I'm going

3720
02:48:22,720 --> 02:48:27,160
to have a 10 uh speed of 10 and then for

3721
02:48:27,160 --> 02:48:30,000
example the higher you go for example 60

3722
02:48:30,000 --> 02:48:33,520
it's very fast three frames per

3723
02:48:33,520 --> 02:48:39,040
second very slow Etc so yeah so feel

3724
02:48:39,040 --> 02:48:42,640
free to configure that as you see fit so

3725
02:48:42,640 --> 02:48:46,120
this is how you load Sprites in KL how

3726
02:48:46,120 --> 02:48:48,479
you load assets more generally uh there

3727
02:48:48,479 --> 02:48:51,680
are other methods to load assets so for

3728
02:48:51,680 --> 02:48:54,439
fonts if I go to the font example is

3729
02:48:54,439 --> 02:48:57,760
there is there one text

3730
02:48:57,760 --> 02:49:00,359
maybe you can see that you can load a

3731
02:49:00,359 --> 02:49:02,600
font by passing in the key you want to

3732
02:49:02,600 --> 02:49:05,040
use and then the path to it and that's

3733
02:49:05,040 --> 02:49:06,880
it and then there's two types of font

3734
02:49:06,880 --> 02:49:09,040
there's the bit map font as well which

3735
02:49:09,040 --> 02:49:12,200
you can load which is an image of

3736
02:49:12,200 --> 02:49:14,920
characters and then you specify the

3737
02:49:14,920 --> 02:49:16,880
width and height of each of those

3738
02:49:16,880 --> 02:49:19,600
characters so those are your options

3739
02:49:19,600 --> 02:49:22,520
when it comes to fonts now so for except

3740
02:49:22,520 --> 02:49:26,439
for images Etc images and

3741
02:49:26,439 --> 02:49:30,600
uh text and there's also audio that you

3742
02:49:30,600 --> 02:49:32,600
want to learn how to load you can use

3743
02:49:32,600 --> 02:49:36,520
the load sound method and then here the

3744
02:49:36,520 --> 02:49:40,000
same structure the the the name you want

3745
02:49:40,000 --> 02:49:42,840
to use the key then the path towards the

3746
02:49:42,840 --> 02:49:44,319
the sound

3747
02:49:44,319 --> 02:49:48,880
itself and then you can also here that's

3748
02:49:48,880 --> 02:49:50,840
for loading for playing though you Ed to

3749
02:49:50,840 --> 02:49:52,760
use the play

3750
02:49:52,760 --> 02:49:55,520
function the C playay function this you

3751
02:49:55,520 --> 02:49:57,680
shouldn't confuse this with the play

3752
02:49:57,680 --> 02:50:00,439
Method later on I'm going to see for

3753
02:50:00,439 --> 02:50:02,760
playing the animation so one thing I

3754
02:50:02,760 --> 02:50:05,600
should have shown in the

3755
02:50:05,600 --> 02:50:08,560
Sprite example is that you can specify

3756
02:50:08,560 --> 02:50:11,520
the animation by default in the uh

3757
02:50:11,520 --> 02:50:14,000
second paramet of the Sprite component

3758
02:50:14,000 --> 02:50:18,200
but you can also call a play Method on

3759
02:50:18,200 --> 02:50:20,399
your game object so maybe later on I'm

3760
02:50:20,399 --> 02:50:22,479
going to show an example so for playing

3761
02:50:22,479 --> 02:50:24,880
the sound you pass in the name the key

3762
02:50:24,880 --> 02:50:26,760
and then as the second Pam you have your

3763
02:50:26,760 --> 02:50:28,760
options you can pass as well optionally

3764
02:50:28,760 --> 02:50:31,000
you can decide whatever to Loop or if

3765
02:50:31,000 --> 02:50:32,840
it's paused and even the volume you can

3766
02:50:32,840 --> 02:50:34,800
set the volume or you can adjust the

3767
02:50:34,800 --> 02:50:37,239
global volume by using the volume method

3768
02:50:37,239 --> 02:50:41,840
in K play all right so now let's uh look

3769
02:50:41,840 --> 02:50:44,000
at some let's write our own code so I'm

3770
02:50:44,000 --> 02:50:45,960
just going to take the shortest example

3771
02:50:45,960 --> 02:50:48,760
possible here and just redo everything

3772
02:50:48,760 --> 02:50:55,680
so cons k k play and then your

3773
02:50:55,680 --> 02:50:59,720
global global

3774
02:50:59,720 --> 02:51:01,680
false all

3775
02:51:01,680 --> 02:51:05,120
right so now one other thing I want to

3776
02:51:05,120 --> 02:51:07,160
talk about is how scenes work in K

3777
02:51:07,160 --> 02:51:09,080
playay so now you know how to load fonts

3778
02:51:09,080 --> 02:51:11,080
now it's time to look at very how to

3779
02:51:11,080 --> 02:51:13,920
manage scenes so by default what you see

3780
02:51:13,920 --> 02:51:16,279
on the canvas is the default scene

3781
02:51:16,279 --> 02:51:18,279
however you can specify specific scenes

3782
02:51:18,279 --> 02:51:20,239
so so the way you do that is by using

3783
02:51:20,239 --> 02:51:24,200
the scene method in Klay it takes as the

3784
02:51:24,200 --> 02:51:26,120
first param the name you want to use

3785
02:51:26,120 --> 02:51:28,279
this is a pattern that you see often

3786
02:51:28,279 --> 02:51:30,120
where for a lot of those things like

3787
02:51:30,120 --> 02:51:32,920
load Sprite load font load bitmat font

3788
02:51:32,920 --> 02:51:35,479
load sound Etc you have the first param

3789
02:51:35,479 --> 02:51:37,399
which is always the name you want to use

3790
02:51:37,399 --> 02:51:40,200
for that specific thing you're creating

3791
02:51:40,200 --> 02:51:42,160
and then second param is the path but

3792
02:51:42,160 --> 02:51:44,200
for here uh for creating a scene the

3793
02:51:44,200 --> 02:51:45,680
first param is the name you want to use

3794
02:51:45,680 --> 02:51:49,880
let's call it uh test scene and then the

3795
02:51:49,880 --> 02:51:52,319
second param is going to be a function

3796
02:51:52,319 --> 02:51:54,000
here it's preferable to use an arrow

3797
02:51:54,000 --> 02:51:56,439
function because it's more Compact and

3798
02:51:56,439 --> 02:51:59,000
the code within that function here is

3799
02:51:59,000 --> 02:52:01,800
going to be the logic for that scene so

3800
02:52:01,800 --> 02:52:04,600
here uh one thing I want to show uh

3801
02:52:04,600 --> 02:52:07,200
showcase is that in K playay there is

3802
02:52:07,200 --> 02:52:09,880
default Sprites you can use and one of

3803
02:52:09,880 --> 02:52:12,600
them I think it's the only one available

3804
02:52:12,600 --> 02:52:15,200
can be accessed by calling the load Bean

3805
02:52:15,200 --> 02:52:18,000
method and then you have access to let

3806
02:52:18,000 --> 02:52:21,439
me create a game object here k.

3807
02:52:21,439 --> 02:52:24,520
Sprite adding my first component

3808
02:52:24,520 --> 02:52:29,319
here and then here I'm going to call

3809
02:52:29,319 --> 02:52:30,840
it

3810
02:52:30,840 --> 02:52:34,720
um Bean well by default when you use the

3811
02:52:34,720 --> 02:52:37,560
load Bean method its name is going to be

3812
02:52:37,560 --> 02:52:41,239
Bean so now if I refresh this we aren't

3813
02:52:41,239 --> 02:52:43,040
in that scene yet that's why nothing

3814
02:52:43,040 --> 02:52:46,640
appears on the screen here in the Klay

3815
02:52:46,640 --> 02:52:49,680
uh initializer I'm going to also make

3816
02:52:49,680 --> 02:52:51,640
the scale four times so things are

3817
02:52:51,640 --> 02:52:54,760
clearly visible and then here to go to a

3818
02:52:54,760 --> 02:52:57,720
specific scene you do K.O and then the

3819
02:52:57,720 --> 02:52:59,160
name of the scene and here you can see

3820
02:52:59,160 --> 02:53:02,160
the bean character so now if you add

3821
02:53:02,160 --> 02:53:04,600
another scene k.

3822
02:53:04,600 --> 02:53:09,960
scene um so test two and then you could

3823
02:53:09,960 --> 02:53:13,479
have another here and then here I could

3824
02:53:13,479 --> 02:53:15,640
use the

3825
02:53:15,640 --> 02:53:19,239
add uh method and then add this time

3826
02:53:19,239 --> 02:53:23,200
around a text component and hello

3827
02:53:23,200 --> 02:53:26,319
world so now here instead of going to

3828
02:53:26,319 --> 02:53:28,800
test two I'm going to go to test one so

3829
02:53:28,800 --> 02:53:31,960
what you can do for example is that we

3830
02:53:31,960 --> 02:53:35,279
first go to the test scene then we by

3831
02:53:35,279 --> 02:53:39,239
using the wait method in KL and we can

3832
02:53:39,239 --> 02:53:43,319
just wait 3 seconds and then go to call

3833
02:53:43,319 --> 02:53:46,800
the following function

3834
02:53:46,800 --> 02:53:51,040
K.O with test two so now if I put test

3835
02:53:51,040 --> 02:53:54,200
here refresh so one two and three

3836
02:53:54,200 --> 02:53:56,239
seconds and then it goes to the other

3837
02:53:56,239 --> 02:53:58,880
scene so here how it

3838
02:53:58,880 --> 02:54:02,960
works so this is how scenes work in

3839
02:54:02,960 --> 02:54:06,800
KL now let's look at how game objects

3840
02:54:06,800 --> 02:54:10,120
work in Klay so game objects are I would

3841
02:54:10,120 --> 02:54:13,200
say the core concept of Klay so

3842
02:54:13,200 --> 02:54:15,920
everything is game object a game object

3843
02:54:15,920 --> 02:54:19,840
is created as I mentioned earlier on by

3844
02:54:19,840 --> 02:54:23,640
using the ad function ad method uh and

3845
02:54:23,640 --> 02:54:25,160
usually the way you do it is for example

3846
02:54:25,160 --> 02:54:28,359
I create a player a game object and I

3847
02:54:28,359 --> 02:54:31,160
use the k. add and then it takes an

3848
02:54:31,160 --> 02:54:33,439
array of components that is going to

3849
02:54:33,439 --> 02:54:35,040
determine various behaviors and

3850
02:54:35,040 --> 02:54:37,960
attributes of that game object and those

3851
02:54:37,960 --> 02:54:39,840
components later on we're going to watch

3852
02:54:39,840 --> 02:54:41,840
the I'm going to talk about the major

3853
02:54:41,840 --> 02:54:43,160
components that you're going to need

3854
02:54:43,160 --> 02:54:44,640
when you're making a game there are many

3855
02:54:44,640 --> 02:54:47,160
of them but I'm going to uh talk about a

3856
02:54:47,160 --> 02:54:50,680
very specific subset so here you use the

3857
02:54:50,680 --> 02:54:53,279
ad function and pass in a an array of

3858
02:54:53,279 --> 02:54:55,920
components and then here for example I'm

3859
02:54:55,920 --> 02:54:59,479
going to create a a player the the way

3860
02:54:59,479 --> 02:55:01,359
the components I usually use for the

3861
02:55:01,359 --> 02:55:03,479
players first is the positional

3862
02:55:03,479 --> 02:55:06,120
component so I specify a position on the

3863
02:55:06,120 --> 02:55:10,359
canvas so let's say 100 by 100 I usually

3864
02:55:10,359 --> 02:55:13,000
I usually do this last but I've always

3865
02:55:13,000 --> 02:55:15,160
first start with the Sprite and if there

3866
02:55:15,160 --> 02:55:17,520
is no Sprite you can use the rectangle

3867
02:55:17,520 --> 02:55:18,920
component which which is just going to

3868
02:55:18,920 --> 02:55:20,720
draw a rectangle which is going to act

3869
02:55:20,720 --> 02:55:23,760
as our base uh our placeholder Graphics

3870
02:55:23,760 --> 02:55:27,479
I guess and then here I also can use the

3871
02:55:27,479 --> 02:55:29,040
area component which creates

3872
02:55:29,040 --> 02:55:31,160
automatically a hitbox for our player

3873
02:55:31,160 --> 02:55:33,120
you can configure it later on so when

3874
02:55:33,120 --> 02:55:34,800
I'm going to talk about the major

3875
02:55:34,800 --> 02:55:37,160
components in K play I'm going to do

3876
02:55:37,160 --> 02:55:40,960
that and then here so rectangle Etc so

3877
02:55:40,960 --> 02:55:44,279
if I just do this you can see a

3878
02:55:44,279 --> 02:55:45,800
rectangle appearing here and if you

3879
02:55:45,800 --> 02:55:48,760
press F1 you can see the hit box here

3880
02:55:48,760 --> 02:55:51,239
so this how you create a game object uh

3881
02:55:51,239 --> 02:55:53,479
optionally also you have another option

3882
02:55:53,479 --> 02:55:55,960
uh instead of just adding it directly to

3883
02:55:55,960 --> 02:55:56,640
the

3884
02:55:56,640 --> 02:55:59,680
scene what you canot do what you can do

3885
02:55:59,680 --> 02:56:02,399
is use the make function so make what it

3886
02:56:02,399 --> 02:56:04,680
does it will create the game object but

3887
02:56:04,680 --> 02:56:07,120
not put it on the scene so you have to

3888
02:56:07,120 --> 02:56:09,840
later on in your code do a k. add

3889
02:56:09,840 --> 02:56:12,399
yourself and then pass in the player

3890
02:56:12,399 --> 02:56:14,080
reference and then it's going to add it

3891
02:56:14,080 --> 02:56:16,040
this is useful in certain cases where

3892
02:56:16,040 --> 02:56:19,000
you want to create uh make Constructor

3893
02:56:19,000 --> 02:56:21,720
functions that will make the The Entity

3894
02:56:21,720 --> 02:56:24,359
for you and then later on add it to the

3895
02:56:24,359 --> 02:56:26,920
various scenes you want so I prefer to

3896
02:56:26,920 --> 02:56:29,319
use ad most of the time though and then

3897
02:56:29,319 --> 02:56:31,680
after you create the ad after using the

3898
02:56:31,680 --> 02:56:34,279
ad function it it passes it returns a

3899
02:56:34,279 --> 02:56:35,720
reference to the game object that can

3900
02:56:35,720 --> 02:56:39,080
store in a variable or a

3901
02:56:39,080 --> 02:56:41,000
constant and then one thing I want to

3902
02:56:41,000 --> 02:56:44,000
showcase is that you can not only pass

3903
02:56:44,000 --> 02:56:46,000
just components but you can also pass

3904
02:56:46,000 --> 02:56:49,040
objects which you can use to add custom

3905
02:56:49,040 --> 02:56:52,279
properties to your the game object so by

3906
02:56:52,279 --> 02:56:57,359
default if I do this and I just

3907
02:56:57,359 --> 02:57:00,720
console.log the player we we're going to

3908
02:57:00,720 --> 02:57:03,080
be able to see the shape of

3909
02:57:03,080 --> 02:57:08,319
a um well actually where where are

3910
02:57:08,319 --> 02:57:11,399
console.log supposed to appear in the

3911
02:57:11,399 --> 02:57:14,720
playground so yeah so maybe like if you

3912
02:57:14,720 --> 02:57:19,200
use this H console lot instead of log so

3913
02:57:19,200 --> 02:57:20,880
now it should appear in the console yeah

3914
02:57:20,880 --> 02:57:22,920
you can see so here I'm just going to

3915
02:57:22,920 --> 02:57:24,960
increase the font size so you can

3916
02:57:24,960 --> 02:57:29,040
clearly see so here it's an object and

3917
02:57:29,040 --> 02:57:30,520
then you have the various methods

3918
02:57:30,520 --> 02:57:31,960
available so you can see that there is

3919
02:57:31,960 --> 02:57:34,239
the add method in the player because you

3920
02:57:34,239 --> 02:57:37,800
can add children to game objects so you

3921
02:57:37,800 --> 02:57:39,800
can do player. add and then create

3922
02:57:39,800 --> 02:57:42,080
another game object as a child and then

3923
02:57:42,080 --> 02:57:43,840
you have a bunch of properties and stuff

3924
02:57:43,840 --> 02:57:46,239
like that that are default basically

3925
02:57:46,239 --> 02:57:49,560
provided by Kay uh for example the width

3926
02:57:49,560 --> 02:57:51,520
or the position screen position you can

3927
02:57:51,520 --> 02:57:53,239
access the position property for example

3928
02:57:53,239 --> 02:57:55,239
if I I I want to know what is the

3929
02:57:55,239 --> 02:57:56,880
position of the Cur the player currently

3930
02:57:56,880 --> 02:58:00,880
I can just do player. pause and it will

3931
02:58:00,880 --> 02:58:05,920
appear you can see here x 100 y 100 okay

3932
02:58:05,920 --> 02:58:07,960
so now that you have a basic

3933
02:58:07,960 --> 02:58:09,720
understanding of what a game object is

3934
02:58:09,720 --> 02:58:12,960
and how to create one um let's let's

3935
02:58:12,960 --> 02:58:14,840
actually give you an example of a child

3936
02:58:14,840 --> 02:58:16,359
game object so if I want to create a

3937
02:58:16,359 --> 02:58:18,160
child game object what I'm going to do

3938
02:58:18,160 --> 02:58:19,720
do is I'm going to take for example the

3939
02:58:19,720 --> 02:58:23,359
player and use the ad method again this

3940
02:58:23,359 --> 02:58:26,120
add method this time around is from the

3941
02:58:26,120 --> 02:58:28,800
game object and not the global one the

3942
02:58:28,800 --> 02:58:32,600
one from cap but they work the same way

3943
02:58:32,600 --> 02:58:34,600
so I can create another rectangle game

3944
02:58:34,600 --> 02:58:37,160
object 10 x 10 however the position for

3945
02:58:37,160 --> 02:58:39,920
example I can also specify the area if I

3946
02:58:39,920 --> 02:58:42,520
want and then here the

3947
02:58:42,520 --> 02:58:45,520
position what is going what is special

3948
02:58:45,520 --> 02:58:47,840
here is that the position is relative to

3949
02:58:47,840 --> 02:58:52,279
the parent so if I do 0 0 it's going to

3950
02:58:52,279 --> 02:58:54,439
appear on on the parent by the way I'm

3951
02:58:54,439 --> 02:58:55,840
just going to change the color you can

3952
02:58:55,840 --> 02:58:59,239
do so by using the color

3953
02:58:59,239 --> 02:59:02,319
component and you can use that uh

3954
02:59:02,319 --> 02:59:04,960
specify RGB values but you can also

3955
02:59:04,960 --> 02:59:08,359
specify hexadecimal values by using the

3956
02:59:08,359 --> 02:59:11,279
color from hex and then passing in the

3957
02:59:11,279 --> 02:59:14,279
hexadecimal code but here just to keep

3958
02:59:14,279 --> 02:59:16,720
it simple I'm just going to do it 0 0 0

3959
02:59:16,720 --> 02:59:19,200
so it should be black

3960
02:59:19,200 --> 02:59:21,800
and you can see it's on top of the the

3961
02:59:21,800 --> 02:59:26,479
parent game object now if I offset this

3962
02:59:26,479 --> 02:59:28,680
by 10 you can see it going to move to

3963
02:59:28,680 --> 02:59:31,600
the side 20 Etc but it's relative to the

3964
02:59:31,600 --> 02:59:34,239
parent which is very useful and so the

3965
02:59:34,239 --> 02:59:36,640
cases where you want for example let's

3966
02:59:36,640 --> 02:59:39,319
say you have a player you have a player

3967
02:59:39,319 --> 02:59:42,040
with a a weapon that turns around them

3968
02:59:42,040 --> 02:59:44,479
and follows them so you could have you

3969
02:59:44,479 --> 02:59:46,080
implement this this

3970
02:59:46,080 --> 02:59:49,399
way all right so now now it's time to

3971
02:59:49,399 --> 02:59:52,359
introduce the major components uh so the

3972
02:59:52,359 --> 02:59:54,880
Sprite component was the main one I

3973
02:59:54,880 --> 02:59:57,560
wanted to talk about the first one

3974
02:59:57,560 --> 03:00:00,960
actually so let's say I have my

3975
03:00:00,960 --> 03:00:04,120
player and then I have my bean so I'm

3976
03:00:04,120 --> 03:00:07,840
just going to load the bean here load

3977
03:00:07,840 --> 03:00:11,880
bean and then here I'm going to do k.

3978
03:00:11,880 --> 03:00:15,359
add and then here I'm going to use the

3979
03:00:15,359 --> 03:00:17,520
Sprite Bean here as I explained it's a

3980
03:00:17,520 --> 03:00:20,200
default Sprite available in K playay so

3981
03:00:20,200 --> 03:00:21,479
that's why I'm using it so I don't have

3982
03:00:21,479 --> 03:00:24,600
to search online for a Sprite sheet uh

3983
03:00:24,600 --> 03:00:26,120
there's also the Sprite sheet I've used

3984
03:00:26,120 --> 03:00:27,880
in the dino example which is available

3985
03:00:27,880 --> 03:00:30,239
in the playground so you can use that as

3986
03:00:30,239 --> 03:00:33,800
well so here I used the Sprite bean and

3987
03:00:33,800 --> 03:00:36,040
then well actually I'm going to need an

3988
03:00:36,040 --> 03:00:38,640
animation otherwise it's not going to

3989
03:00:38,640 --> 03:00:43,840
work so I'm going to just copy this and

3990
03:00:43,840 --> 03:00:46,560
paste it just so I can have two

3991
03:00:46,560 --> 03:00:48,319
instances of the playground where I can

3992
03:00:48,319 --> 03:00:53,040
see the code so in the

3993
03:00:53,040 --> 03:00:55,880
Sprite just need the path

3994
03:00:55,880 --> 03:00:58,560
here then if I go back here I'm going to

3995
03:00:58,560 --> 03:01:00,640
just load it load the assets properly so

3996
03:01:00,640 --> 03:01:02,960
load

3997
03:01:03,000 --> 03:01:04,520
Sprite

3998
03:01:04,520 --> 03:01:06,760
dyo and

3999
03:01:06,760 --> 03:01:10,560
then the path and

4000
03:01:10,560 --> 03:01:15,239
then we said slice X is nine there's

4001
03:01:15,239 --> 03:01:20,720
nine frame nine frames sorry slice Y is

4002
03:01:20,720 --> 03:01:23,680
one because we have one frame per column

4003
03:01:23,680 --> 03:01:26,319
and then the animation we only had one

4004
03:01:26,319 --> 03:01:29,439
so anims and then here I'm going to

4005
03:01:29,439 --> 03:01:32,439
specify the Run animation by the way as

4006
03:01:32,439 --> 03:01:34,279
long as you don't have you have single

4007
03:01:34,279 --> 03:01:37,200
word at properties you can just use you

4008
03:01:37,200 --> 03:01:40,040
don't have to use quotation marks then

4009
03:01:40,040 --> 03:01:46,840
from zero 2 8 and then let's Loop the

4010
03:01:46,840 --> 03:01:49,640
animation Loop the animation so by by

4011
03:01:49,640 --> 03:01:52,600
the way something I probably forgot to

4012
03:01:52,600 --> 03:01:56,239
mention I'm just going to use Dino

4013
03:01:56,239 --> 03:01:59,359
here is if I

4014
03:01:59,359 --> 03:02:02,680
just y put that in here so this is frame

4015
03:02:02,680 --> 03:02:08,040
zero one 2 3 4 5 6 7 and eight so it

4016
03:02:08,040 --> 03:02:10,640
starts from zero just wanted to show it

4017
03:02:10,640 --> 03:02:13,239
visually so you don't get

4018
03:02:13,239 --> 03:02:15,239
confused

4019
03:02:15,239 --> 03:02:18,120
oops okay so now let's say we have our

4020
03:02:18,120 --> 03:02:22,200
Sprite player Sprite here let's add a an

4021
03:02:22,200 --> 03:02:25,960
area to it a positional component as

4022
03:02:25,960 --> 03:02:29,640
well let's put it at 100 by 100 so the

4023
03:02:29,640 --> 03:02:31,600
first param is the x coordinate the

4024
03:02:31,600 --> 03:02:33,720
second param is the y-coordinate sorry

4025
03:02:33,720 --> 03:02:36,439
if I didn't mention this earlier on so

4026
03:02:36,439 --> 03:02:39,560
here we have our Sprite if I press F1

4027
03:02:39,560 --> 03:02:41,520
you can see that the hitbox is slightly

4028
03:02:41,520 --> 03:02:45,040
taller than the Sprite itself and this

4029
03:02:45,040 --> 03:02:46,560
is where you're going to need to twe

4030
03:02:46,560 --> 03:02:48,840
tweak it yourself

4031
03:02:48,840 --> 03:02:51,439
so let's talk about the area component

4032
03:02:51,439 --> 03:02:54,840
as well so the area component you can

4033
03:02:54,840 --> 03:02:58,080
change it shape by passing in an object

4034
03:02:58,080 --> 03:03:01,800
and then specifying the shape property

4035
03:03:01,800 --> 03:03:04,680
and you need to use the re Constructor

4036
03:03:04,680 --> 03:03:09,120
so you can use new. k. rect this is from

4037
03:03:09,120 --> 03:03:12,600
KL and this is going to specify a

4038
03:03:12,600 --> 03:03:15,880
rectangular hitbox the first Pam is

4039
03:03:15,880 --> 03:03:18,479
going to be a vector two so another

4040
03:03:18,479 --> 03:03:20,399
Common Sense concept I need to talk

4041
03:03:20,399 --> 03:03:23,640
about but usually Vector 2 in K is just

4042
03:03:23,640 --> 03:03:25,760
an X and Y values just as a data

4043
03:03:25,760 --> 03:03:28,840
structure that holds an X and A Y value

4044
03:03:28,840 --> 03:03:31,720
so here you can create a vector 2 like

4045
03:03:31,720 --> 03:03:33,359
this by just calling the component

4046
03:03:33,359 --> 03:03:35,800
itself and then here I'm just going to

4047
03:03:35,800 --> 03:03:38,800
put it at 0 0 because this first param

4048
03:03:38,800 --> 03:03:41,479
of the rectangle is just going to

4049
03:03:41,479 --> 03:03:44,439
position offset relative to the game

4050
03:03:44,439 --> 03:03:48,200
object I don't want it to be offset it I

4051
03:03:48,200 --> 03:03:49,680
just want the position to be the same

4052
03:03:49,680 --> 03:03:51,920
that's why I put a zero here so it's

4053
03:03:51,920 --> 03:03:54,200
going to be 0 0 uh it's not going to

4054
03:03:54,200 --> 03:03:55,760
change it's not going to be different

4055
03:03:55,760 --> 03:03:59,560
from the original 100 by 100 position of

4056
03:03:59,560 --> 03:04:02,439
the game object the player game object

4057
03:04:02,439 --> 03:04:04,600
and then the second Pam here is going to

4058
03:04:04,600 --> 03:04:06,200
be

4059
03:04:06,200 --> 03:04:09,560
a the width and the height of the hbox

4060
03:04:09,560 --> 03:04:11,640
so the width is going to be let's say

4061
03:04:11,640 --> 03:04:15,000
let's start with 16 by 16 and then if I

4062
03:04:15,000 --> 03:04:17,239
press F1 you can see that it's a bit

4063
03:04:17,239 --> 03:04:19,520
taller that's why here you can actually

4064
03:04:19,520 --> 03:04:22,279
decide to offset this by 16 and it's

4065
03:04:22,279 --> 03:04:25,880
going to drop down so 16 is too

4066
03:04:25,880 --> 03:04:29,359
much by the way in game development the

4067
03:04:29,359 --> 03:04:32,040
farther you go down the higher the value

4068
03:04:32,040 --> 03:04:37,200
of y the yeah so the farther you go now

4069
03:04:37,200 --> 03:04:39,359
it might not be intuitive but yeah

4070
03:04:39,359 --> 03:04:41,880
that's the that's how it works so here

4071
03:04:41,880 --> 03:04:43,920
we have our hitbox that is relatively

4072
03:04:43,920 --> 03:04:46,479
well POS positioned you can decide

4073
03:04:46,479 --> 03:04:48,080
whether or not to reduce the with maybe

4074
03:04:48,080 --> 03:04:49,000
to

4075
03:04:49,000 --> 03:04:52,760
12 and then push

4076
03:04:52,760 --> 03:04:56,040
the the hitbox forward by

4077
03:04:56,040 --> 03:04:59,200
two and or maybe three or four let's

4078
03:04:59,200 --> 03:05:01,239
let's starty four four is too much so

4079
03:05:01,239 --> 03:05:03,680
let's start with three so this tweaking

4080
03:05:03,680 --> 03:05:06,800
game is what you need to do to really

4081
03:05:06,800 --> 03:05:09,359
have set your headbox

4082
03:05:09,359 --> 03:05:12,399
correctly uh all right so you have your

4083
03:05:12,399 --> 03:05:15,760
hitbox you have the player okay

4084
03:05:15,760 --> 03:05:18,080
everything is fine

4085
03:05:18,080 --> 03:05:20,880
and now just to show you you can play

4086
03:05:20,880 --> 03:05:25,000
animations by doing player do an uh

4087
03:05:25,000 --> 03:05:27,439
playay and then specify the animation

4088
03:05:27,439 --> 03:05:28,760
name you could have done this in the

4089
03:05:28,760 --> 03:05:30,359
second param here as the default

4090
03:05:30,359 --> 03:05:31,800
animation but just show you if you have

4091
03:05:31,800 --> 03:05:33,200
multiple animations you can switch

4092
03:05:33,200 --> 03:05:36,319
between them by using this so play and

4093
03:05:36,319 --> 03:05:38,080
then the name of the animation so the

4094
03:05:38,080 --> 03:05:41,439
animation is going to to be a dino no no

4095
03:05:41,439 --> 03:05:42,760
that's the Sprite sorry the Run

4096
03:05:42,760 --> 03:05:44,840
animation sorry and then you have the

4097
03:05:44,840 --> 03:05:47,439
animation play all right so that's how

4098
03:05:47,439 --> 03:05:51,479
you you use the area component and the

4099
03:05:51,479 --> 03:05:53,640
Sprite component now there's also the

4100
03:05:53,640 --> 03:05:57,000
body component and the body component is

4101
03:05:57,000 --> 03:06:00,239
used to have collisions so while the

4102
03:06:00,239 --> 03:06:03,680
area component creates a hitbox it will

4103
03:06:03,680 --> 03:06:06,200
only make sure like you can check like

4104
03:06:06,200 --> 03:06:08,520
overlap between your game object and

4105
03:06:08,520 --> 03:06:10,720
other game objects using the UN Collide

4106
03:06:10,720 --> 03:06:12,200
methods but you can use the body

4107
03:06:12,200 --> 03:06:16,960
component to uh make it solid or

4108
03:06:16,960 --> 03:06:18,960
affected by gravity so let's using the

4109
03:06:18,960 --> 03:06:21,760
same example let's uh add a platform

4110
03:06:21,760 --> 03:06:24,080
right below so I'm going to create a

4111
03:06:24,080 --> 03:06:25,279
game

4112
03:06:25,279 --> 03:06:27,840
object uh under which is going to be the

4113
03:06:27,840 --> 03:06:30,160
platform I'm going to use a rectangle

4114
03:06:30,160 --> 03:06:34,200
I'm going to set it to be 1,000 of width

4115
03:06:34,200 --> 03:06:36,439
Maybe 1,00 by

4116
03:06:36,439 --> 03:06:39,720
50 I'm going to use the area component

4117
03:06:39,720 --> 03:06:41,399
it's going to perfectly fit the

4118
03:06:41,399 --> 03:06:43,760
rectangle so I don't need to specify a

4119
03:06:43,760 --> 03:06:46,560
custom shape as for the position I'm

4120
03:06:46,560 --> 03:06:50,359
going to set it to zero as the X and

4121
03:06:50,359 --> 03:06:53,479
here maybe 400 as the Y maybe it's too

4122
03:06:53,479 --> 03:06:55,920
much so

4123
03:06:55,920 --> 03:06:57,439
300

4124
03:06:57,439 --> 03:07:02,520
100 100 is too okay too much 150 okay so

4125
03:07:02,520 --> 03:07:04,720
we have our platform here additionally

4126
03:07:04,720 --> 03:07:08,840
if you use the area component you can uh

4127
03:07:08,840 --> 03:07:12,279
use the uh so if you use the rectangle

4128
03:07:12,279 --> 03:07:14,439
rect component and the ARA component

4129
03:07:14,439 --> 03:07:16,920
together you can use the outline

4130
03:07:16,920 --> 03:07:19,319
component and then specify an now line

4131
03:07:19,319 --> 03:07:23,520
so with a boldness of three for example

4132
03:07:23,520 --> 03:07:25,640
now there's a lot of things like that

4133
03:07:25,640 --> 03:07:27,760
happen in K playay where you cannot use

4134
03:07:27,760 --> 03:07:29,680
certain components if other components

4135
03:07:29,680 --> 03:07:31,560
are not added to the component array

4136
03:07:31,560 --> 03:07:33,680
here so you're going to have an error

4137
03:07:33,680 --> 03:07:35,520
message that is going to tell you what

4138
03:07:35,520 --> 03:07:39,319
is wrong so you can easily fix it so now

4139
03:07:39,319 --> 03:07:41,399
here in our player so here I did not

4140
03:07:41,399 --> 03:07:43,680
assign it to a constant because I don't

4141
03:07:43,680 --> 03:07:46,520
need it uh it's just a throw throwaway

4142
03:07:46,520 --> 03:07:48,439
platform game object

4143
03:07:48,439 --> 03:07:50,960
so here let's say I add the body

4144
03:07:50,960 --> 03:07:53,640
component so by adding the body

4145
03:07:53,640 --> 03:07:55,680
component it's going to be affected by

4146
03:07:55,680 --> 03:07:57,680
gravity but you can see that nothing

4147
03:07:57,680 --> 03:07:59,920
happens that's because you need to set

4148
03:07:59,920 --> 03:08:03,399
the gravity and by the way in the scene

4149
03:08:03,399 --> 03:08:05,239
example I've shown earlier you would

4150
03:08:05,239 --> 03:08:08,000
write all this logic not the asset

4151
03:08:08,000 --> 03:08:10,319
loading logic but for example this logic

4152
03:08:10,319 --> 03:08:13,359
inside of its own scene so let's do that

4153
03:08:13,359 --> 03:08:16,439
just to to be like clean so I'm going to

4154
03:08:16,439 --> 03:08:18,200
define a scene I'm going to call it game

4155
03:08:18,200 --> 03:08:20,399
you can Define it however you'd like I'm

4156
03:08:20,399 --> 03:08:22,200
going to pass in this as a second par in

4157
03:08:22,200 --> 03:08:24,600
the function and then here I'm just

4158
03:08:24,600 --> 03:08:28,120
going to include everything we have

4159
03:08:28,120 --> 03:08:31,960
here inside so now and then finally

4160
03:08:31,960 --> 03:08:34,640
don't forget to go to that scene from

4161
03:08:34,640 --> 03:08:37,640
the main context from the the the root

4162
03:08:37,640 --> 03:08:40,359
so game so basically this does the same

4163
03:08:40,359 --> 03:08:42,359
thing I just wanted to make things clear

4164
03:08:42,359 --> 03:08:45,080
so maybe I have to reformat this

4165
03:08:45,080 --> 03:08:48,279
code oh no that's what that was mistake

4166
03:08:48,279 --> 03:08:50,399
here we

4167
03:08:50,399 --> 03:08:54,680
go okay so now for the gravity you

4168
03:08:54,680 --> 03:08:57,560
usually need to set it I you cannot set

4169
03:08:57,560 --> 03:08:59,080
it there are certain things that you

4170
03:08:59,080 --> 03:09:01,200
have to reset from scene from within the

4171
03:09:01,200 --> 03:09:04,200
scene so if I try to set the gravity

4172
03:09:04,200 --> 03:09:06,439
using the set gravity method offered by

4173
03:09:06,439 --> 03:09:08,880
cap and set for example to

4174
03:09:08,880 --> 03:09:12,399
1,000 actually works okay so it works uh

4175
03:09:12,399 --> 03:09:14,319
so you can set the gravity outside of

4176
03:09:14,319 --> 03:09:17,120
the the scene so that's good so if you

4177
03:09:17,120 --> 03:09:19,680
want to have a global gravity that is in

4178
03:09:19,680 --> 03:09:22,000
this all levels you can do that once and

4179
03:09:22,000 --> 03:09:24,520
then Define your code so usually this

4180
03:09:24,520 --> 03:09:26,640
function you might need to if you want

4181
03:09:26,640 --> 03:09:28,319
to organize your code later on you would

4182
03:09:28,319 --> 03:09:30,080
create a SE a separate file and then

4183
03:09:30,080 --> 03:09:32,319
import that function and then pass it

4184
03:09:32,319 --> 03:09:35,439
here as a second param for example so

4185
03:09:35,439 --> 03:09:37,319
now you can see that our player just

4186
03:09:37,319 --> 03:09:40,000
passed through the platform that's

4187
03:09:40,000 --> 03:09:43,160
because we need to also add the body

4188
03:09:43,160 --> 03:09:47,720
component to the platform itself however

4189
03:09:47,720 --> 03:09:49,479
this is where A New Concept is going to

4190
03:09:49,479 --> 03:09:52,680
occur is that you see both were affected

4191
03:09:52,680 --> 03:09:54,399
by gravity but if you want to use

4192
03:09:54,399 --> 03:09:57,000
platforms Etc you need to specify a

4193
03:09:57,000 --> 03:09:59,439
param from within the body body

4194
03:09:59,439 --> 03:10:03,200
component and here this Pam is called is

4195
03:10:03,200 --> 03:10:06,680
static and you need to set it to

4196
03:10:06,680 --> 03:10:10,239
true so here you can see that our

4197
03:10:10,239 --> 03:10:12,960
dinosaur is on the platform so by

4198
03:10:12,960 --> 03:10:15,120
default the body just adding the body

4199
03:10:15,120 --> 03:10:17,640
component and specifying a gravity will

4200
03:10:17,640 --> 03:10:20,359
make the the the game object dynamic or

4201
03:10:20,359 --> 03:10:22,560
affected by gravity so it will fall but

4202
03:10:22,560 --> 03:10:24,439
you can specify an option called is

4203
03:10:24,439 --> 03:10:27,120
static from within the body component

4204
03:10:27,120 --> 03:10:30,640
and this is going to make sure that the

4205
03:10:30,640 --> 03:10:33,080
game object is going to remain unfaced

4206
03:10:33,080 --> 03:10:35,000
by gravity and it's going to act as a

4207
03:10:35,000 --> 03:10:38,760
wall basically or a platform in that

4208
03:10:38,760 --> 03:10:43,359
case all right so that's it and then

4209
03:10:43,359 --> 03:10:45,840
let's look at so I've already talked

4210
03:10:45,840 --> 03:10:47,760
about major components like the color

4211
03:10:47,760 --> 03:10:51,600
component uh to change color the outline

4212
03:10:51,600 --> 03:10:54,080
components I've also mentioned the

4213
03:10:54,080 --> 03:10:56,680
rectangular component the text component

4214
03:10:56,680 --> 03:10:58,720
you have seen me use it yeah let's dive

4215
03:10:58,720 --> 03:11:01,720
into the text component a bit more so

4216
03:11:01,720 --> 03:11:04,479
here is an example that used like G

4217
03:11:04,479 --> 03:11:07,359
global K playay so without having global

4218
03:11:07,359 --> 03:11:10,239
false Etc uh one thing I want to mention

4219
03:11:10,239 --> 03:11:12,239
is that after you have loaded your font

4220
03:11:12,239 --> 03:11:14,800
here is the basic usage so I'm just

4221
03:11:14,800 --> 03:11:18,760
going to try to just just going to take

4222
03:11:18,760 --> 03:11:20,880
this copy

4223
03:11:20,880 --> 03:11:24,080
this create a new example I should have

4224
03:11:24,080 --> 03:11:26,479
not done that actually I

4225
03:11:26,479 --> 03:11:30,160
realized can I go back no I cannot okay

4226
03:11:30,160 --> 03:11:33,000
let's uh go back to rewriting our

4227
03:11:33,000 --> 03:11:35,640
example cons K instead of using the

4228
03:11:35,640 --> 03:11:38,920
second type I had open to just pick the

4229
03:11:38,920 --> 03:11:42,920
the things I needed I just lost my

4230
03:11:42,920 --> 03:11:45,680
progress so here

4231
03:11:45,680 --> 03:11:49,239
Global false

4232
03:11:49,279 --> 03:11:52,000
and then here I'm just going to paste

4233
03:11:52,000 --> 03:11:53,720
the statement I had here I'm just going

4234
03:11:53,720 --> 03:11:55,600
to add K in front of it so I'm going to

4235
03:11:55,600 --> 03:11:58,720
load the flower sketches font flower

4236
03:11:58,720 --> 03:12:02,479
sketches. ttf that's the the full path

4237
03:12:02,479 --> 03:12:04,439
and then here just to show you how to

4238
03:12:04,439 --> 03:12:07,560
use it I'm going to create a game object

4239
03:12:07,560 --> 03:12:10,960
and use the text component so you need

4240
03:12:10,960 --> 03:12:12,600
to create a game object to be able to

4241
03:12:12,600 --> 03:12:14,359
use the text component you cannot just

4242
03:12:14,359 --> 03:12:17,279
call k. text I don't because you need to

4243
03:12:17,279 --> 03:12:19,160
also specify the position of that text

4244
03:12:19,160 --> 03:12:20,760
for example by default if you don't

4245
03:12:20,760 --> 03:12:22,200
specify it it's going to be at the top

4246
03:12:22,200 --> 03:12:24,040
left corner but here let's put it at the

4247
03:12:24,040 --> 03:12:26,560
center this is how can do with the

4248
03:12:26,560 --> 03:12:29,279
center component something new uh here

4249
03:12:29,279 --> 03:12:31,239
it's undefined for now because nothing

4250
03:12:31,239 --> 03:12:35,359
like we haven't specified a text here so

4251
03:12:35,359 --> 03:12:37,319
here you specify the content of your

4252
03:12:37,319 --> 03:12:40,439
text as the first Pam I'm just going to

4253
03:12:40,439 --> 03:12:41,520
modify

4254
03:12:41,520 --> 03:12:45,960
this oops modify this to be clearly

4255
03:12:45,960 --> 03:12:50,319
visible um more like pretty I guess uh

4256
03:12:50,319 --> 03:12:52,120
usually my code editor takes care of

4257
03:12:52,120 --> 03:12:54,239
doing this but since I'm teaching this

4258
03:12:54,239 --> 03:12:58,080
whole crash course on the playground so

4259
03:12:58,080 --> 03:13:01,479
I have to do it manually so here let's

4260
03:13:01,479 --> 03:13:04,880
type in hello world as our default text

4261
03:13:04,880 --> 03:13:07,680
if I do this you can see that you have

4262
03:13:07,680 --> 03:13:09,439
our hello word at the center but you can

4263
03:13:09,439 --> 03:13:12,560
see that it is the origin of the text is

4264
03:13:12,560 --> 03:13:14,239
going to be at the top left corner by

4265
03:13:14,239 --> 03:13:16,520
default game objects have their origin

4266
03:13:16,520 --> 03:13:18,920
at the top left corner what if you want

4267
03:13:18,920 --> 03:13:20,760
the origin to be at the center so that

4268
03:13:20,760 --> 03:13:22,600
the hello word position is actually

4269
03:13:22,600 --> 03:13:24,000
going to be centered the text is going

4270
03:13:24,000 --> 03:13:26,359
to be centered this is where the anchor

4271
03:13:26,359 --> 03:13:29,399
component is going to come into play so

4272
03:13:29,399 --> 03:13:31,640
here you need to use the anchor

4273
03:13:31,640 --> 03:13:33,520
component you need to specify an area

4274
03:13:33,520 --> 03:13:36,040
component beforehand so here by default

4275
03:13:36,040 --> 03:13:37,920
it's just going to make a hitbox around

4276
03:13:37,920 --> 03:13:41,640
our text and then right below you can

4277
03:13:41,640 --> 03:13:44,720
actually the order of the of the the

4278
03:13:44,720 --> 03:13:46,640
components you put them in the array is

4279
03:13:46,640 --> 03:13:48,479
not important you can put them in any

4280
03:13:48,479 --> 03:13:50,520
order it's just that usually I prefer

4281
03:13:50,520 --> 03:13:52,000
like you know I use the text component

4282
03:13:52,000 --> 03:13:54,239
the array component I usually put put

4283
03:13:54,239 --> 03:13:56,800
them in the order of usage but you're

4284
03:13:56,800 --> 03:14:01,840
free to dis place them however you you'd

4285
03:14:01,840 --> 03:14:05,200
like all right so now what I wanted to

4286
03:14:05,200 --> 03:14:11,040
do is we have the area okay

4287
03:14:11,040 --> 03:14:14,479
now I can call the anchor component and

4288
03:14:14,479 --> 03:14:16,640
then you can specify the anchor to being

4289
03:14:16,640 --> 03:14:18,279
sent

4290
03:14:18,279 --> 03:14:20,080
and this way the origin is going to be

4291
03:14:20,080 --> 03:14:22,279
at the center now our text is centered

4292
03:14:22,279 --> 03:14:24,279
you can have top left top right but you

4293
03:14:24,279 --> 03:14:27,279
can also use a vector twos so by calling

4294
03:14:27,279 --> 03:14:30,439
Vector two you can specify a specific

4295
03:14:30,439 --> 03:14:34,120
position uh maybe that maybe was an old

4296
03:14:34,120 --> 03:14:35,720
Behavior I don't think it's what this

4297
03:14:35,720 --> 03:14:39,319
works here so forget that but here we go

4298
03:14:39,319 --> 03:14:41,200
so hello world

4299
03:14:41,200 --> 03:14:45,399
Etc now now that we have hello world uh

4300
03:14:45,399 --> 03:14:46,720
what I wanted to do is to show you how

4301
03:14:46,720 --> 03:14:49,439
to change change the font so you can do

4302
03:14:49,439 --> 03:14:51,279
as we saw in the example have a default

4303
03:14:51,279 --> 03:14:54,160
font here but I don't prefer to do this

4304
03:14:54,160 --> 03:14:56,840
I prefer to change the font per text

4305
03:14:56,840 --> 03:14:58,880
component so here as the second param

4306
03:14:58,880 --> 03:15:00,880
you can pass an object and then specify

4307
03:15:00,880 --> 03:15:03,640
the font name by passing either font

4308
03:15:03,640 --> 03:15:07,279
property and putting the exact same key

4309
03:15:07,279 --> 03:15:11,279
key here we use to load our spread so

4310
03:15:11,279 --> 03:15:13,560
here's the the font uh it's a flowery

4311
03:15:13,560 --> 03:15:16,399
font I'm going to you can also increase

4312
03:15:16,399 --> 03:15:18,399
the font size by

4313
03:15:18,399 --> 03:15:23,600
doing adding these the size I think

4314
03:15:23,600 --> 03:15:26,279
32 maybe

4315
03:15:26,279 --> 03:15:29,880
64 yeah it's the

4316
03:15:29,880 --> 03:15:33,520
96 hello world so that's the font all

4317
03:15:33,520 --> 03:15:35,600
right maybe the background by default

4318
03:15:35,600 --> 03:15:39,560
you can set the background being like

4319
03:15:39,560 --> 03:15:43,399
black here we go you can do this but

4320
03:15:43,399 --> 03:15:45,439
usually I prefer to create a game object

4321
03:15:45,439 --> 03:15:47,479
that takes the whole screen and then

4322
03:15:47,479 --> 03:15:50,199
just change the rectangle's color that

4323
03:15:50,199 --> 03:15:52,800
rectangle so this game object rectangle

4324
03:15:52,800 --> 03:15:53,880
is going to take the whole screen

4325
03:15:53,880 --> 03:15:56,680
because if you use the set background

4326
03:15:56,680 --> 03:16:00,600
method offered by KL it's going to um

4327
03:16:00,600 --> 03:16:02,239
color everything and if you use the

4328
03:16:02,239 --> 03:16:04,279
letter box King I mentioned earlier you

4329
03:16:04,279 --> 03:16:06,520
will not no longer have the black bars

4330
03:16:06,520 --> 03:16:08,479
it's just going to be the same color

4331
03:16:08,479 --> 03:16:10,800
even though so it's going to look very

4332
03:16:10,800 --> 03:16:12,880
weird where your Sprite character for

4333
03:16:12,880 --> 03:16:15,160
example will move offscreen but it's

4334
03:16:15,160 --> 03:16:17,080
it's going to seem that as if like the

4335
03:16:17,080 --> 03:16:18,439
background is the same so the screen

4336
03:16:18,439 --> 03:16:21,080
should continue but it won't so that's

4337
03:16:21,080 --> 03:16:24,600
why I prefer to just create a rectangle

4338
03:16:24,600 --> 03:16:26,520
game object that uses a rectangle and

4339
03:16:26,520 --> 03:16:28,520
the size of the rectangle is the whole

4340
03:16:28,520 --> 03:16:31,439
width and height of this the

4341
03:16:31,439 --> 03:16:35,040
canvas all right so one thing I want to

4342
03:16:35,040 --> 03:16:38,960
also mention and I forgot to do it is I

4343
03:16:38,960 --> 03:16:41,479
told you earlier on that you don't you

4344
03:16:41,479 --> 03:16:45,439
don't need to only add

4345
03:16:45,439 --> 03:16:48,279
um component so you don't need to only

4346
03:16:48,279 --> 03:16:52,479
add components to the array of G uh here

4347
03:16:52,479 --> 03:16:55,520
you can also add an object which can

4348
03:16:55,520 --> 03:16:58,439
store custom properties you want to

4349
03:16:58,439 --> 03:17:00,760
Define so think of it as if you were

4350
03:17:00,760 --> 03:17:03,160
using objectoriented programming and you

4351
03:17:03,160 --> 03:17:05,520
had your uh various properties

4352
03:17:05,520 --> 03:17:08,040
attributes you can Define them here so

4353
03:17:08,040 --> 03:17:10,720
for example you could have the HP or

4354
03:17:10,720 --> 03:17:12,680
your name Etc and then you pass in the

4355
03:17:12,680 --> 03:17:14,760
values you want and then later on you

4356
03:17:14,760 --> 03:17:17,120
can access those properties by just

4357
03:17:17,120 --> 03:17:19,800
storing that game object so let's say I

4358
03:17:19,800 --> 03:17:23,560
store it in my text I guess I'm going to

4359
03:17:23,560 --> 03:17:28,040
call it then you can have like a second

4360
03:17:28,040 --> 03:17:33,199
text or second text and then here hello

4361
03:17:33,199 --> 03:17:34,640
world

4362
03:17:34,640 --> 03:17:37,279
again and then

4363
03:17:37,279 --> 03:17:40,760
here right below I can do my

4364
03:17:40,760 --> 03:17:45,520
text and then access the current text by

4365
03:17:45,520 --> 03:17:47,359
doing. text

4366
03:17:47,359 --> 03:17:50,040
and then replace that with the new text

4367
03:17:50,040 --> 03:17:52,000
with a second text and I can access that

4368
03:17:52,000 --> 03:17:54,279
by using my text and then the name of

4369
03:17:54,279 --> 03:17:56,960
the property I have defined here so

4370
03:17:56,960 --> 03:17:59,160
second text this

4371
03:17:59,160 --> 03:18:02,080
is and you can see hello world again

4372
03:18:02,080 --> 03:18:05,120
this is pretty powerful because this

4373
03:18:05,120 --> 03:18:07,520
allows you to bypass the need to use

4374
03:18:07,520 --> 03:18:11,000
classes and while still having code that

4375
03:18:11,000 --> 03:18:12,239
looks

4376
03:18:12,239 --> 03:18:14,840
clean looks uh understandable and easy

4377
03:18:14,840 --> 03:18:17,920
to read and modify

4378
03:18:17,920 --> 03:18:20,319
all right so one thing I want to mention

4379
03:18:20,319 --> 03:18:23,040
again is that here this the center

4380
03:18:23,040 --> 03:18:24,840
component you can use it to have the

4381
03:18:24,840 --> 03:18:27,080
center of the canvas uh the positional

4382
03:18:27,080 --> 03:18:28,800
component either takes two values like

4383
03:18:28,800 --> 03:18:31,800
that or takes a vector two so Vector 2

4384
03:18:31,800 --> 03:18:34,160
is something that comes up a lot so here

4385
03:18:34,160 --> 03:18:38,840
you can do the same 100 by 100 um so

4386
03:18:38,840 --> 03:18:41,040
that's the data structure uh there's no

4387
03:18:41,040 --> 03:18:43,279
reason to do it this way instead of just

4388
03:18:43,279 --> 03:18:46,279
100 passing 100 by 100 so you should do

4389
03:18:46,279 --> 03:18:47,399
that when

4390
03:18:47,399 --> 03:18:49,000
when whenever

4391
03:18:49,000 --> 03:18:52,640
possible all right so yeah but k. Center

4392
03:18:52,640 --> 03:18:54,520
if you look at the return value maybe

4393
03:18:54,520 --> 03:18:56,080
not in this editor you're going to see

4394
03:18:56,080 --> 03:18:59,720
it returns a vector to all

4395
03:18:59,720 --> 03:19:03,640
right okay so now I want to talk about

4396
03:19:03,640 --> 03:19:06,399
tags as well so this is going to come

4397
03:19:06,399 --> 03:19:10,279
handy in Collision detection so I'm

4398
03:19:10,279 --> 03:19:13,479
going to talk about this component later

4399
03:19:13,479 --> 03:19:16,960
on so here the next thing I want to

4400
03:19:16,960 --> 03:19:19,520
teach is how to when you create game

4401
03:19:19,520 --> 03:19:23,160
objects how to get them how to like

4402
03:19:23,160 --> 03:19:25,520
basically query them so let's say I

4403
03:19:25,520 --> 03:19:27,199
create a bunch of game

4404
03:19:27,199 --> 03:19:30,040
objects actually the tags is going to

4405
03:19:30,040 --> 03:19:33,359
come in in handy right now so let's say

4406
03:19:33,359 --> 03:19:35,279
I create game objects let's say I create

4407
03:19:35,279 --> 03:19:37,800
three game

4408
03:19:37,800 --> 03:19:41,840
objects they're empty for now and uh

4409
03:19:41,840 --> 03:19:44,239
let's say they're all rectangles of 10 x

4410
03:19:44,239 --> 03:19:47,199
10 so they're all 10 x 10 squares

4411
03:19:47,199 --> 03:19:50,359
so here we go maybe the formatting is

4412
03:19:50,359 --> 03:19:52,960
not good you know but it doesn't

4413
03:19:52,960 --> 03:19:55,920
matter and for each of them I'm going to

4414
03:19:55,920 --> 03:19:59,720
give them a tag so not only can you add

4415
03:19:59,720 --> 03:20:03,080
objects in that area of components but

4416
03:20:03,080 --> 03:20:04,840
you can also add a string which is going

4417
03:20:04,840 --> 03:20:07,840
to act as an identifier for that game

4418
03:20:07,840 --> 03:20:11,359
object so here let's say I going to

4419
03:20:11,359 --> 03:20:13,359
create a tag called Square and I'm going

4420
03:20:13,359 --> 03:20:14,760
to assign it

4421
03:20:14,760 --> 03:20:17,920
to all the game objects I created

4422
03:20:17,920 --> 03:20:20,439
here square square

4423
03:20:20,439 --> 03:20:22,600
square so we have our Square here they

4424
03:20:22,600 --> 03:20:24,319
are all in the same position it's very

4425
03:20:24,319 --> 03:20:27,680
small so maybe let's scale the canvas

4426
03:20:27,680 --> 03:20:31,600
more times so it's clearly

4427
03:20:32,479 --> 03:20:35,199
visible uh it's doesn't help much but

4428
03:20:35,199 --> 03:20:36,800
does it's not that important you know

4429
03:20:36,800 --> 03:20:40,040
maybe off let's offset

4430
03:20:41,319 --> 03:20:44,640
them uh okay that I haven't specified

4431
03:20:44,640 --> 03:20:46,279
the position so that's why so the

4432
03:20:46,279 --> 03:20:48,000
position component here let's keep it at

4433
03:20:48,000 --> 03:20:50,279
0 0 by the way if you want a 0 0

4434
03:20:50,279 --> 03:20:52,199
position you don't need to specify the

4435
03:20:52,199 --> 03:20:54,040
positional component but let's do it

4436
03:20:54,040 --> 03:20:56,479
just to be like clear and then let's

4437
03:20:56,479 --> 03:21:00,279
copy that over

4438
03:21:00,279 --> 03:21:04,120
whoops so let's copy that over to the

4439
03:21:04,120 --> 03:21:07,319
other stuff here we go and then here we

4440
03:21:07,319 --> 03:21:10,720
go so here let's offset this by 50 and

4441
03:21:10,720 --> 03:21:13,439
then here by 100 so now we have our

4442
03:21:13,439 --> 03:21:15,399
three squares here this is where the

4443
03:21:15,399 --> 03:21:17,760
tags come in handy there's this I'm

4444
03:21:17,760 --> 03:21:19,760
going to store my

4445
03:21:19,760 --> 03:21:24,760
squares and use a the get method offered

4446
03:21:24,760 --> 03:21:29,160
by Klay to query fetch all the game

4447
03:21:29,160 --> 03:21:32,920
objects that have the square tag added

4448
03:21:32,920 --> 03:21:35,319
to them so the way you do this you do it

4449
03:21:35,319 --> 03:21:37,319
Square you pass in the tag and it's

4450
03:21:37,319 --> 03:21:40,600
going to return an array so if I use k.

4451
03:21:40,600 --> 03:21:43,680
debug.log this is another way of logging

4452
03:21:43,680 --> 03:21:48,000
things and then just pass in the Square

4453
03:21:48,000 --> 03:21:50,399
when you you can see object object

4454
03:21:50,399 --> 03:21:52,439
object object and object object you have

4455
03:21:52,439 --> 03:21:54,199
your three objects so the the k.

4456
03:21:54,199 --> 03:21:56,239
debug.log is when you want to display

4457
03:21:56,239 --> 03:21:58,880
things on the canvas itself you would

4458
03:21:58,880 --> 03:22:01,479
use console.log if you want to just

4459
03:22:01,479 --> 03:22:04,479
display it in the console here so we

4460
03:22:04,479 --> 03:22:06,520
have an array three of them and each of

4461
03:22:06,520 --> 03:22:09,359
the objects we have them now one Nuance

4462
03:22:09,359 --> 03:22:12,399
I want to talk about the get method here

4463
03:22:12,399 --> 03:22:16,080
is what if you had a game object that is

4464
03:22:16,080 --> 03:22:18,920
apparent a child of another game object

4465
03:22:18,920 --> 03:22:21,040
so let's say I add

4466
03:22:21,040 --> 03:22:24,960
this this first game object is the

4467
03:22:24,960 --> 03:22:26,800
parent of that second game

4468
03:22:26,800 --> 03:22:31,040
object so now if I look at the result by

4469
03:22:31,040 --> 03:22:33,720
pressing F12 you can see that we only

4470
03:22:33,720 --> 03:22:37,720
have two game objects no longer three if

4471
03:22:37,720 --> 03:22:40,080
you want to get all game objects

4472
03:22:40,080 --> 03:22:41,600
regardless of there if there are

4473
03:22:41,600 --> 03:22:43,319
children of other game objects you need

4474
03:22:43,319 --> 03:22:46,760
to pass the second param an object as an

4475
03:22:46,760 --> 03:22:50,040
object and specify the recursive

4476
03:22:50,040 --> 03:22:53,120
property to being true if you do so what

4477
03:22:53,120 --> 03:22:56,199
will happen is if I press F12 you'll

4478
03:22:56,199 --> 03:22:57,880
have your array with all your three

4479
03:22:57,880 --> 03:23:01,800
objects what happens if you want to use

4480
03:23:01,800 --> 03:23:05,399
a component after the fact after having

4481
03:23:05,399 --> 03:23:08,040
created your game object so let's remove

4482
03:23:08,040 --> 03:23:09,720
all of

4483
03:23:09,720 --> 03:23:13,359
this and let's say we have our Square

4484
03:23:13,359 --> 03:23:16,640
here as a single game object let's

4485
03:23:16,640 --> 03:23:19,720
increase being a 100 by 100 just so

4486
03:23:19,720 --> 03:23:21,160
things are CLE

4487
03:23:21,160 --> 03:23:24,399
visible and I after having created the

4488
03:23:24,399 --> 03:23:26,680
game object later on in my code base I

4489
03:23:26,680 --> 03:23:29,120
want to dynamically add a new component

4490
03:23:29,120 --> 03:23:30,720
let's say I want to change its color

4491
03:23:30,720 --> 03:23:32,279
after the fact for example if the player

4492
03:23:32,279 --> 03:23:34,800
clicks on it I'm we're going to later on

4493
03:23:34,800 --> 03:23:36,600
see how to handle input where we're

4494
03:23:36,600 --> 03:23:38,279
going to see like how to make things

4495
03:23:38,279 --> 03:23:40,760
like clicking clicking moving around

4496
03:23:40,760 --> 03:23:44,520
pressing keys Etc but for now if you

4497
03:23:44,520 --> 03:23:46,760
have your Square here you can and use

4498
03:23:46,760 --> 03:23:50,279
the use function uh use method to add a

4499
03:23:50,279 --> 03:23:52,120
new component so here I'm going to add

4500
03:23:52,120 --> 03:23:55,160
the k. color component that we looked at

4501
03:23:55,160 --> 03:23:58,239
uh earlier on and I'm going to put it at

4502
03:23:58,239 --> 03:24:02,239
a color RGB of two red so this should be

4503
03:24:02,239 --> 03:24:04,199
red so now it will use that comp

4504
03:24:04,199 --> 03:24:06,399
component after the fact there's also

4505
03:24:06,399 --> 03:24:10,160
the square. unuse and then you can pass

4506
03:24:10,160 --> 03:24:12,640
in the the name of the color the

4507
03:24:12,640 --> 03:24:14,960
component you use and it's going to

4508
03:24:14,960 --> 03:24:17,439
unuse that component so let's say I'm

4509
03:24:17,439 --> 03:24:19,000
going to use the

4510
03:24:19,000 --> 03:24:21,359
weight something offered by Kaboom

4511
03:24:21,359 --> 03:24:24,080
instead of having to use set timer set

4512
03:24:24,080 --> 03:24:27,960
forgot the name anyway they capl offers

4513
03:24:27,960 --> 03:24:30,239
their own timers so you can just use

4514
03:24:30,239 --> 03:24:31,840
this like that so what will happen is

4515
03:24:31,840 --> 03:24:34,399
we'll wait 3 seconds before unusing the

4516
03:24:34,399 --> 03:24:36,239
color component and the that means the

4517
03:24:36,239 --> 03:24:38,880
rectangle will go back to its original

4518
03:24:38,880 --> 03:24:40,920
shape here we

4519
03:24:40,920 --> 03:24:43,479
go all right so the first param is the

4520
03:24:43,479 --> 03:24:44,920
number of seconds to wait and then the

4521
03:24:44,920 --> 03:24:47,000
second param is the

4522
03:24:47,000 --> 03:24:49,120
function to run when the timer is over

4523
03:24:49,120 --> 03:24:51,720
and there's also an asynchronous form of

4524
03:24:51,720 --> 03:24:53,359
that function where you use await and

4525
03:24:53,359 --> 03:24:56,800
then you just uh call have one paramin

4526
03:24:56,800 --> 03:24:59,880
then you would call this they on under

4527
03:24:59,880 --> 03:25:02,040
so I'm not going to go over this you can

4528
03:25:02,040 --> 03:25:04,160
see in my tutorials by the way all my

4529
03:25:04,160 --> 03:25:06,760
Kaboom tutorials are applicable to Kay

4530
03:25:06,760 --> 03:25:09,279
so you can follow them just do this the

4531
03:25:09,279 --> 03:25:11,120
setup the initial setup differently

4532
03:25:11,120 --> 03:25:12,960
install K play instead of KaBoom so now

4533
03:25:12,960 --> 03:25:15,680
let's look at how to handle collisions

4534
03:25:15,680 --> 03:25:16,920
so

4535
03:25:16,920 --> 03:25:19,880
you know to handle collisions let's um

4536
03:25:19,880 --> 03:25:21,560
the way I'm going to do it is I'm going

4537
03:25:21,560 --> 03:25:23,640
to also introduce the move component

4538
03:25:23,640 --> 03:25:26,800
which is something I didn't do so let's

4539
03:25:26,800 --> 03:25:28,640
let's dive into that so let's say we

4540
03:25:28,640 --> 03:25:31,040
have still R square let's reduce the

4541
03:25:31,040 --> 03:25:34,520
size to being 50 by

4542
03:25:35,399 --> 03:25:38,840
50 and now this Square I'm going to use

4543
03:25:38,840 --> 03:25:41,279
uh remove that it's no longer needed and

4544
03:25:41,279 --> 03:25:44,960
I'm going to add in area component to

4545
03:25:44,960 --> 03:25:47,279
it so it's going to have a default

4546
03:25:47,279 --> 03:25:49,600
hitbox remember you can access the

4547
03:25:49,600 --> 03:25:53,080
hitbox uh the debug mode by pressing the

4548
03:25:53,080 --> 03:25:55,640
F1 key I think the debug mode is one of

4549
03:25:55,640 --> 03:25:58,000
the most powerful and useful thing that

4550
03:25:58,000 --> 03:26:00,359
K play offers that I don't see in other

4551
03:26:00,359 --> 03:26:02,479
Li libraries for making games you don't

4552
03:26:02,479 --> 03:26:07,040
see a as handy debug mode I I would say

4553
03:26:07,040 --> 03:26:10,279
so now that we have this and that let's

4554
03:26:10,279 --> 03:26:12,199
write our logic so what we're going to

4555
03:26:12,199 --> 03:26:14,720
do is we're going to create a second

4556
03:26:14,720 --> 03:26:16,800
game object I'm going to call it

4557
03:26:16,800 --> 03:26:20,319
Target and it's going to be a small

4558
03:26:20,319 --> 03:26:23,560
rectangle 20x 20 and we're going to

4559
03:26:23,560 --> 03:26:25,520
place it so I'm going to also specify

4560
03:26:25,520 --> 03:26:27,439
the

4561
03:26:27,439 --> 03:26:31,600
area and I'm also going to place it at a

4562
03:26:31,600 --> 03:26:37,560
position of 30 by zero so maybe not 30

4563
03:26:37,560 --> 03:26:41,640
more than that 130 maybe all right so we

4564
03:26:41,640 --> 03:26:43,520
have our second Square

4565
03:26:43,520 --> 03:26:48,479
here so yeah now that we have that what

4566
03:26:48,479 --> 03:26:51,439
I'm going to do

4567
03:26:51,439 --> 03:26:54,439
is write our first Collision logic so

4568
03:26:54,439 --> 03:26:57,840
how do you do Collision detection in cap

4569
03:26:57,840 --> 03:27:00,640
playay there are many methods you can

4570
03:27:00,640 --> 03:27:03,199
use but the most important one is the

4571
03:27:03,199 --> 03:27:05,960
uncollided method and the uncollided end

4572
03:27:05,960 --> 03:27:09,520
method so uncollided end is a method

4573
03:27:09,520 --> 03:27:13,279
that is attached to the game object so

4574
03:27:13,279 --> 03:27:16,720
let's say I want to check if the target

4575
03:27:16,720 --> 03:27:20,560
get has collided so you do on collide

4576
03:27:20,560 --> 03:27:22,760
with and then the second param the first

4577
03:27:22,760 --> 03:27:26,319
param of that function is the tag of the

4578
03:27:26,319 --> 03:27:28,600
game object uh of the game object you

4579
03:27:28,600 --> 03:27:31,160
want to check collisions with so here

4580
03:27:31,160 --> 03:27:35,439
Target on collide with the square tag so

4581
03:27:35,439 --> 03:27:37,920
you can see that you only need a tag for

4582
03:27:37,920 --> 03:27:40,399
the second game object you want to check

4583
03:27:40,399 --> 03:27:42,359
collisions with and then the second

4584
03:27:42,359 --> 03:27:44,960
param is going to be the function that

4585
03:27:44,960 --> 03:27:46,720
is going to run when the Collision

4586
03:27:46,720 --> 03:27:50,279
happens here I'm just going to debug log

4587
03:27:50,279 --> 03:27:53,120
uh Collision happened a message that

4588
03:27:53,120 --> 03:27:54,399
says

4589
03:27:54,399 --> 03:27:57,120
that so here nothing happens because the

4590
03:27:57,120 --> 03:27:59,439
square doesn't move and we need to move

4591
03:27:59,439 --> 03:28:01,560
it so the way to move a

4592
03:28:01,560 --> 03:28:04,800
square is you can use the move component

4593
03:28:04,800 --> 03:28:06,600
so I'm going to maybe have an example

4594
03:28:06,600 --> 03:28:08,680
when we're going to use input detection

4595
03:28:08,680 --> 03:28:12,040
so I'm going to talk about how to handle

4596
03:28:12,040 --> 03:28:15,279
input I mean move things around uh using

4597
03:28:15,279 --> 03:28:17,279
the arrow keys and and in that move

4598
03:28:17,279 --> 03:28:20,120
component is really used a lot so you do

4599
03:28:20,120 --> 03:28:23,640
KLA move and this is the first form of

4600
03:28:23,640 --> 03:28:26,640
it and then you can move I actually

4601
03:28:26,640 --> 03:28:29,279
don't remember the

4602
03:28:29,279 --> 03:28:30,840
um uh what's

4603
03:28:30,840 --> 03:28:32,040
[Music]

4604
03:28:32,040 --> 03:28:33,550
the

4605
03:28:33,550 --> 03:28:36,040
[Music]

4606
03:28:36,040 --> 03:28:38,680
particle let's try let's try it out and

4607
03:28:38,680 --> 03:28:42,680
then if there's an issue so 100 by

4608
03:28:44,120 --> 03:28:46,760
zero maybe this second param is the

4609
03:28:46,760 --> 03:28:47,840
speed I

4610
03:28:47,840 --> 03:28:52,120
think all right so if if I put it to

4611
03:28:52,120 --> 03:28:54,800
here okay second param is the speed the

4612
03:28:54,800 --> 03:28:57,479
SEC the first Pam I think it's a vector

4613
03:28:57,479 --> 03:29:01,800
2 and let's say yeah so here Vector 2

4614
03:29:01,800 --> 03:29:04,560
comes in handy so the first param of the

4615
03:29:04,560 --> 03:29:07,800
move component here is the direction in

4616
03:29:07,800 --> 03:29:10,840
which you want the Collision to uh the

4617
03:29:10,840 --> 03:29:13,479
the game object to move to towards to

4618
03:29:13,479 --> 03:29:16,760
towards and then the second Ram is the

4619
03:29:16,760 --> 03:29:19,600
speed so here at the speed of 10 I could

4620
03:29:19,600 --> 03:29:22,319
increase that to 50 and then you can see

4621
03:29:22,319 --> 03:29:24,600
when it collides you see the message

4622
03:29:24,600 --> 03:29:27,960
Collision happen at the bottom of the

4623
03:29:27,960 --> 03:29:31,359
screen so yeah uh the reason it's

4624
03:29:31,359 --> 03:29:33,000
overlapping is because we Haven to use

4625
03:29:33,000 --> 03:29:35,120
the body components so if we were to use

4626
03:29:35,120 --> 03:29:37,319
the body component for both of them so

4627
03:29:37,319 --> 03:29:40,920
let's say I add the body component

4628
03:29:41,160 --> 03:29:43,920
here and I also add the body component

4629
03:29:43,920 --> 03:29:47,080
to the Target

4630
03:29:47,080 --> 03:29:49,479
they're going to push push it each other

4631
03:29:49,479 --> 03:29:52,680
I think yep you can see

4632
03:29:52,680 --> 03:29:56,600
that all right so the other uh form of

4633
03:29:56,600 --> 03:29:59,399
the on Collide is you can use the on

4634
03:29:59,399 --> 03:30:02,319
colide from cap directly but you need to

4635
03:30:02,319 --> 03:30:04,960
specify the tag of the first game object

4636
03:30:04,960 --> 03:30:06,960
want to check collisions with and then

4637
03:30:06,960 --> 03:30:09,479
the second one as well before passing in

4638
03:30:09,479 --> 03:30:14,000
the the function I rarely use this form

4639
03:30:14,000 --> 03:30:15,279
uh because it's often just more

4640
03:30:15,279 --> 03:30:18,319
convenient convenient to use that so

4641
03:30:18,319 --> 03:30:23,120
here we go so the other one is Target on

4642
03:30:23,120 --> 03:30:24,760
Collide

4643
03:30:24,760 --> 03:30:28,279
end and it will run when the Collision

4644
03:30:28,279 --> 03:30:31,080
ends and it can be useful when you want

4645
03:30:31,080 --> 03:30:34,000
to for example finish an attack uh for

4646
03:30:34,000 --> 03:30:36,359
example yeah uh it's it's useful for

4647
03:30:36,359 --> 03:30:37,640
example when you want to finish an

4648
03:30:37,640 --> 03:30:39,960
attack your player finishes an attack

4649
03:30:39,960 --> 03:30:43,279
and then uh how how do you say put back

4650
03:30:43,279 --> 03:30:45,960
their swords or something so here I'm

4651
03:30:45,960 --> 03:30:47,800
I'm just going to put a debug log

4652
03:30:47,800 --> 03:30:49,720
message as well

4653
03:30:49,720 --> 03:30:51,960
Collision

4654
03:30:51,960 --> 03:30:54,680
ended and then here it's never going to

4655
03:30:54,680 --> 03:30:57,040
happen because the objects are pushing

4656
03:30:57,040 --> 03:30:58,120
each other because of the body

4657
03:30:58,120 --> 03:31:00,120
components but if I remove for example

4658
03:31:00,120 --> 03:31:02,319
for Target I remove it you can see

4659
03:31:02,319 --> 03:31:05,040
Collision happened and then Collision

4660
03:31:05,040 --> 03:31:07,720
ended I did type

4661
03:31:07,720 --> 03:31:11,640
over all right so that's uh that's that

4662
03:31:11,640 --> 03:31:14,080
now you have an idea how to handle

4663
03:31:14,080 --> 03:31:16,760
corations etc etc now now how do you

4664
03:31:16,760 --> 03:31:19,920
handle user input so Onkey down on key

4665
03:31:19,920 --> 03:31:22,600
press on key release and you can even

4666
03:31:22,600 --> 03:31:25,000
have like controller support and Etc I'm

4667
03:31:25,000 --> 03:31:26,520
not going to dive into controller

4668
03:31:26,520 --> 03:31:29,080
support by the way really this tutorial

4669
03:31:29,080 --> 03:31:31,520
is meant as like a starting point but

4670
03:31:31,520 --> 03:31:33,120
afterwards you can check the

4671
03:31:33,120 --> 03:31:35,560
documentation and by the way if the

4672
03:31:35,560 --> 03:31:37,760
documentation is still not complete you

4673
03:31:37,760 --> 03:31:40,279
can still refer to the original Kaboom

4674
03:31:40,279 --> 03:31:43,640
JS documentation so if I go to Kaboom

4675
03:31:43,640 --> 03:31:47,720
JS oops I written I did typo here again

4676
03:31:47,720 --> 03:31:50,239
so if I go to Kaboom JS you can search

4677
03:31:50,239 --> 03:31:52,800
it and by the way a trick here is that

4678
03:31:52,800 --> 03:31:55,479
it's more efficient to search don't use

4679
03:31:55,479 --> 03:31:58,080
this it's not that effective you do

4680
03:31:58,080 --> 03:32:00,279
contrl F and then you search what you

4681
03:32:00,279 --> 03:32:03,760
need for example button and then you'll

4682
03:32:03,760 --> 03:32:06,640
get using the buttons here you can see

4683
03:32:06,640 --> 03:32:09,080
like the document it's a it's a much

4684
03:32:09,080 --> 03:32:11,239
more comprehensive search it's a better

4685
03:32:11,239 --> 03:32:13,040
search than this because certain things

4686
03:32:13,040 --> 03:32:14,920
don't surface when you use the search

4687
03:32:14,920 --> 03:32:17,640
bar here so I recommend still using the

4688
03:32:17,640 --> 03:32:19,720
Kaboom JS documentation if there

4689
03:32:19,720 --> 03:32:21,600
something missing out in the cap playay

4690
03:32:21,600 --> 03:32:23,399
documentation because it's not yet

4691
03:32:23,399 --> 03:32:25,800
finished but it's mostly like the same

4692
03:32:25,800 --> 03:32:28,279
thing so yeah so now let's see how to

4693
03:32:28,279 --> 03:32:30,640
handle user input I'm going to cover the

4694
03:32:30,640 --> 03:32:33,920
basic version of it and now K playay has

4695
03:32:33,920 --> 03:32:37,760
a new system for uh inputs uh which

4696
03:32:37,760 --> 03:32:40,520
allows you to specify buttons for both

4697
03:32:40,520 --> 03:32:42,000
multiple different buttons for the

4698
03:32:42,000 --> 03:32:44,520
keyboard for the controller and for the

4699
03:32:44,520 --> 03:32:47,040
mouse all at the same time time uh

4700
03:32:47,040 --> 03:32:49,720
because this feature is an alpha I will

4701
03:32:49,720 --> 03:32:52,000
not cover it in this video so I'm going

4702
03:32:52,000 --> 03:32:55,040
to wait for uh cap play to release its

4703
03:32:55,040 --> 03:32:57,560
3001 version by the way cap the way it

4704
03:32:57,560 --> 03:33:01,239
works is that it works in thousands so

4705
03:33:01,239 --> 03:33:03,040
uh there were when it was Kaboom it was

4706
03:33:03,040 --> 03:33:05,640
Kaboom 2000 then Kaboom 3000 and now

4707
03:33:05,640 --> 03:33:09,080
it's Kaboom the version here I think

4708
03:33:09,080 --> 03:33:10,360
it's still

4709
03:33:10,360 --> 03:33:11,680
[Music]

4710
03:33:11,680 --> 03:33:14,960
3.1.7 and then it's the development for

4711
03:33:14,960 --> 03:33:17,560
version three 01 is active and is

4712
03:33:17,560 --> 03:33:18,800
currently

4713
03:33:18,800 --> 03:33:22,479
ongoing all right so now let's load the

4714
03:33:22,479 --> 03:33:24,560
bean uh I'm going to use it as the

4715
03:33:24,560 --> 03:33:28,120
placeholder asset and I'm going to

4716
03:33:28,120 --> 03:33:29,680
create our

4717
03:33:29,680 --> 03:33:33,399
player and create the game object for it

4718
03:33:33,399 --> 03:33:35,479
and then here I'm going to use that as

4719
03:33:35,479 --> 03:33:37,319
the Sprite the bean

4720
03:33:37,319 --> 03:33:40,040
Sprite now I'm going to maybe scale it

4721
03:33:40,040 --> 03:33:43,880
twice instead all right now here I'm

4722
03:33:43,880 --> 03:33:45,319
going to remove the black background

4723
03:33:45,319 --> 03:33:48,399
just to make things more

4724
03:33:48,600 --> 03:33:52,279
visible and then I'm going to

4725
03:33:52,279 --> 03:33:55,920
add the I think that's it

4726
03:33:55,920 --> 03:33:58,680
so so just

4727
03:33:58,680 --> 03:34:02,800
to handle positions so to handle input

4728
03:34:02,800 --> 03:34:06,120
it is preferable to have to use the

4729
03:34:06,120 --> 03:34:08,920
Onkey down Onkey press Onkey release

4730
03:34:08,920 --> 03:34:11,920
methods directly from the player so the

4731
03:34:11,920 --> 03:34:14,239
the game object so the game object offer

4732
03:34:14,239 --> 03:34:15,960
those methods but you can also use the

4733
03:34:15,960 --> 03:34:18,239
global version of those game objects now

4734
03:34:18,239 --> 03:34:20,199
the reason why I'm not actually sure so

4735
03:34:20,199 --> 03:34:22,760
if I go to the documentation there is a

4736
03:34:22,760 --> 03:34:27,120
guide so the guide section you have the

4737
03:34:27,120 --> 03:34:30,439
um so installation basic concepts data

4738
03:34:30,439 --> 03:34:33,040
between scenes Etc debug mode so data

4739
03:34:33,040 --> 03:34:34,479
between scenes you maybe you should give

4740
03:34:34,479 --> 03:34:36,560
that a read I haven't covered it uh it's

4741
03:34:36,560 --> 03:34:38,520
very simple so I might cover it later on

4742
03:34:38,520 --> 03:34:41,479
but in case I forget uh input binding

4743
03:34:41,479 --> 03:34:43,760
which is the new I think this is a new

4744
03:34:43,760 --> 03:34:46,120
feature Etc then shaders which is

4745
03:34:46,120 --> 03:34:47,680
something I'm not going to cover in this

4746
03:34:47,680 --> 03:34:49,239
tutorial but it's very handy to make

4747
03:34:49,239 --> 03:34:51,600
your games look good but one thing I'm

4748
03:34:51,600 --> 03:34:54,160
going to talk about is the optimizations

4749
03:34:54,160 --> 03:34:56,880
so here they recommend that you avoid

4750
03:34:56,880 --> 03:34:59,560
the global name St uh no that you where

4751
03:34:59,560 --> 03:35:02,920
is it uh use the game object local input

4752
03:35:02,920 --> 03:35:04,720
handlers similar to above it's often

4753
03:35:04,720 --> 03:35:06,600
better to use local input handlers as

4754
03:35:06,600 --> 03:35:09,040
opposed to Global ones uh one thing

4755
03:35:09,040 --> 03:35:11,359
though is that it's not explain why uh

4756
03:35:11,359 --> 03:35:13,800
why it's better it's just mentioned that

4757
03:35:13,800 --> 03:35:15,880
it is so there's probably a reason but I

4758
03:35:15,880 --> 03:35:17,920
don't know why and uh if you're a

4759
03:35:17,920 --> 03:35:21,199
maintainer of the KL Library please tell

4760
03:35:21,199 --> 03:35:24,920
us why uh why and I might ask this in

4761
03:35:24,920 --> 03:35:27,279
the Discord by the way uh it's a bit too

4762
03:35:27,279 --> 03:35:31,160
late to promote this but the Discord

4763
03:35:31,160 --> 03:35:34,319
server is there's a Discord server for K

4764
03:35:34,319 --> 03:35:36,600
play and uh the link is going to be in

4765
03:35:36,600 --> 03:35:37,920
the description and in the comments I

4766
03:35:37,920 --> 03:35:39,920
recommend that you join it because it

4767
03:35:39,920 --> 03:35:41,800
where it's where you can ask questions

4768
03:35:41,800 --> 03:35:44,319
see questions that were asked by other

4769
03:35:44,319 --> 03:35:46,640
people in the past and and really it's

4770
03:35:46,640 --> 03:35:50,000
uh the most efficient way to get help uh

4771
03:35:50,000 --> 03:35:52,920
I would say let's go back to our example

4772
03:35:52,920 --> 03:35:56,120
so here I'm going to call player. Onkey

4773
03:35:56,120 --> 03:35:58,520
down and then the Onkey down method in K

4774
03:35:58,520 --> 03:36:01,160
play has multiple forms the two main

4775
03:36:01,160 --> 03:36:03,000
forms I would say it's either you

4776
03:36:03,000 --> 03:36:04,840
specify as the first pram the key you

4777
03:36:04,840 --> 03:36:08,439
want to listen on or you just specify

4778
03:36:08,439 --> 03:36:10,319
directly the the function that is going

4779
03:36:10,319 --> 03:36:12,600
to run when any key is down and it's

4780
03:36:12,600 --> 03:36:14,359
going to take care of passing to the

4781
03:36:14,359 --> 03:36:15,880
first param of your function fun that

4782
03:36:15,880 --> 03:36:18,199
you pass to the unkey down the key

4783
03:36:18,199 --> 03:36:20,560
itself this is something I prefer to use

4784
03:36:20,560 --> 03:36:23,800
mostly to have the specific there there

4785
03:36:23,800 --> 03:36:25,520
to have the specific uh to have this

4786
03:36:25,520 --> 03:36:27,319
form instead of the other one where you

4787
03:36:27,319 --> 03:36:30,160
you specify a specific key so that you

4788
03:36:30,160 --> 03:36:32,199
don't have to call Onkey down multiple

4789
03:36:32,199 --> 03:36:34,960
times so but there might be some cases

4790
03:36:34,960 --> 03:36:37,160
where it's preferable maybe to use the

4791
03:36:37,160 --> 03:36:39,279
first form so in this tutorial I'm just

4792
03:36:39,279 --> 03:36:41,399
going to use the second one so here if

4793
03:36:41,399 --> 03:36:44,120
you do for example if you console debug

4794
03:36:44,120 --> 03:36:46,760
blug k. debug

4795
03:36:46,760 --> 03:36:50,439
do log and then log the key you can see

4796
03:36:50,439 --> 03:36:54,239
that as I press you can have space up

4797
03:36:54,239 --> 03:36:56,239
down left right

4798
03:36:56,239 --> 03:36:59,000
Etc so as I said I'm not going to dwell

4799
03:36:59,000 --> 03:37:02,640
much on this uh system input system

4800
03:37:02,640 --> 03:37:06,560
because it there's a new one that is an

4801
03:37:06,560 --> 03:37:08,640
expansion on that and it's going to

4802
03:37:08,640 --> 03:37:11,160
probably be more used for professional

4803
03:37:11,160 --> 03:37:12,920
games because you want to be able to

4804
03:37:12,920 --> 03:37:15,640
specify multiple inputs things at at

4805
03:37:15,640 --> 03:37:18,359
once multiple different Keys Etc and on

4806
03:37:18,359 --> 03:37:20,279
key down Etc doesn't allow you to do

4807
03:37:20,279 --> 03:37:24,120
that so uh just to remind you it's just

4808
03:37:24,120 --> 03:37:26,920
go to input bindings this is offered in

4809
03:37:26,920 --> 03:37:30,560
the newest version here so you have B

4810
03:37:30,560 --> 03:37:32,319
bindings you specify an action then you

4811
03:37:32,319 --> 03:37:33,720
can specify various keys for the

4812
03:37:33,720 --> 03:37:35,279
keyboard various for the GamePad and

4813
03:37:35,279 --> 03:37:38,000
even for the mouse but as I said it's

4814
03:37:38,000 --> 03:37:39,319
still in

4815
03:37:39,319 --> 03:37:41,680
development okay so on key down you have

4816
03:37:41,680 --> 03:37:44,040
the key here and uh what I'm going to do

4817
03:37:44,040 --> 03:37:45,520
is I'm going to have a simple if

4818
03:37:45,520 --> 03:37:49,840
statement if the key is equal equal to

4819
03:37:49,840 --> 03:37:51,720
let's say the right

4820
03:37:51,720 --> 03:37:54,840
key then I'm going to take my player and

4821
03:37:54,840 --> 03:37:57,199
going to use the move method so you can

4822
03:37:57,199 --> 03:38:00,600
use the move method uh not only there

4823
03:38:00,600 --> 03:38:02,720
was a move component where you can just

4824
03:38:02,720 --> 03:38:04,920
specify immediate movement that happens

4825
03:38:04,920 --> 03:38:06,920
as soon as the game object is created

4826
03:38:06,920 --> 03:38:08,760
but you can use the move method to

4827
03:38:08,760 --> 03:38:10,120
actually move the player in a certain

4828
03:38:10,120 --> 03:38:13,080
direction now in conjunction with that

4829
03:38:13,080 --> 03:38:15,680
you can as I said pass an an object your

4830
03:38:15,680 --> 03:38:17,359
array of component to specify custom

4831
03:38:17,359 --> 03:38:19,880
properties and this is where I'd like to

4832
03:38:19,880 --> 03:38:21,800
create a speed property and specify a

4833
03:38:21,800 --> 03:38:24,600
value and then here I can refer to it by

4834
03:38:24,600 --> 03:38:27,720
doing player. speeed and then you can

4835
03:38:27,720 --> 03:38:30,279
specify as the first pram the speed that

4836
03:38:30,279 --> 03:38:32,439
is going to navigate that the player is

4837
03:38:32,439 --> 03:38:35,640
going to navigate on the x-axis and then

4838
03:38:35,640 --> 03:38:37,439
uh zero on the y- axis because we just

4839
03:38:37,439 --> 03:38:39,840
want to move horizontally so if I press

4840
03:38:39,840 --> 03:38:43,560
the the the right arrow key uh maybe I

4841
03:38:43,560 --> 03:38:46,359
got it uh got it wrong

4842
03:38:46,359 --> 03:38:48,960
uh probably that's because I missing I'm

4843
03:38:48,960 --> 03:38:51,040
missing a component Player move is not a

4844
03:38:51,040 --> 03:38:53,120
function so this method is only

4845
03:38:53,120 --> 03:38:56,760
available if you use the I think the

4846
03:38:56,760 --> 03:38:58,359
body component and you can only use the

4847
03:38:58,359 --> 03:38:59,760
body component if you use the area

4848
03:38:59,760 --> 03:39:04,199
component so we need to add both of them

4849
03:39:04,640 --> 03:39:07,640
here this move is not a function

4850
03:39:07,640 --> 03:39:10,920
really um what's the

4851
03:39:10,920 --> 03:39:14,359
issue um Let me refresh here okay

4852
03:39:14,359 --> 03:39:17,000
there's a

4853
03:39:17,000 --> 03:39:19,720
this move is not a

4854
03:39:19,720 --> 03:39:23,199
function player. move okay well it

4855
03:39:23,199 --> 03:39:26,640
should be what am doing

4856
03:39:27,160 --> 03:39:31,439
wrong this used to work so ah you

4857
03:39:31,439 --> 03:39:33,640
probably need to specify position the

4858
03:39:33,640 --> 03:39:36,199
positional component as well and you

4859
03:39:36,199 --> 03:39:38,239
need to add your commas so be careful

4860
03:39:38,239 --> 03:39:41,560
with that and if I press here we go so

4861
03:39:41,560 --> 03:39:43,640
the positional components is mandatory

4862
03:39:43,640 --> 03:39:46,640
even if you're not going to specify a

4863
03:39:46,640 --> 03:39:48,920
position so it's going to keep to put it

4864
03:39:48,920 --> 03:39:50,960
at the top left corner but if you don't

4865
03:39:50,960 --> 03:39:53,000
use the positional component you can't

4866
03:39:53,000 --> 03:39:54,760
modify the position after the fact

4867
03:39:54,760 --> 03:39:56,760
because remember to access the position

4868
03:39:56,760 --> 03:39:58,359
once you use the position component you

4869
03:39:58,359 --> 03:40:00,840
can use player. pause but if you don't

4870
03:40:00,840 --> 03:40:03,359
use the positional component at all even

4871
03:40:03,359 --> 03:40:06,000
if you want to like you don't even leave

4872
03:40:06,000 --> 03:40:08,600
it empty then player. pause is not going

4873
03:40:08,600 --> 03:40:10,560
to work so that mean under the hood it's

4874
03:40:10,560 --> 03:40:13,080
not going to be let you move the player

4875
03:40:13,080 --> 03:40:15,160
so here I press to the right and I can

4876
03:40:15,160 --> 03:40:17,080
move move to the right so that's uh

4877
03:40:17,080 --> 03:40:18,880
that's cool uh by the way I just wanted

4878
03:40:18,880 --> 03:40:21,080
to Showcase a new blog post I've written

4879
03:40:21,080 --> 03:40:22,960
on how to fix diagonal movement into the

4880
03:40:22,960 --> 03:40:25,960
top down top down games because in 2D

4881
03:40:25,960 --> 03:40:29,600
topown games if you implement uh using a

4882
03:40:29,600 --> 03:40:31,600
naive approach what happens is that

4883
03:40:31,600 --> 03:40:33,640
you're going to move faster diagonally

4884
03:40:33,640 --> 03:40:37,439
than uh on each side so you're going to

4885
03:40:37,439 --> 03:40:39,080
move faster diagonally than if you were

4886
03:40:39,080 --> 03:40:41,560
to move only to the right for example so

4887
03:40:41,560 --> 03:40:43,680
here I've written a block post on how to

4888
03:40:43,680 --> 03:40:46,840
fix this um not going to dive into it so

4889
03:40:46,840 --> 03:40:48,760
feel free to check my substack the link

4890
03:40:48,760 --> 03:40:50,560
is also in the description and hopefully

4891
03:40:50,560 --> 03:40:52,479
in the pinned comment as

4892
03:40:52,479 --> 03:40:56,359
well so here we go so this is how you do

4893
03:40:56,359 --> 03:40:58,680
like on key down same thing with Onkey

4894
03:40:58,680 --> 03:41:00,880
press really works the same way the only

4895
03:41:00,880 --> 03:41:03,640
difference is that Onkey press which is

4896
03:41:03,640 --> 03:41:07,080
written like that it's just going to run

4897
03:41:07,080 --> 03:41:09,960
once immediately and then then yep so

4898
03:41:09,960 --> 03:41:13,120
you can you will you will only like

4899
03:41:13,120 --> 03:41:16,160
Jitter like that so it's useful for

4900
03:41:16,160 --> 03:41:19,960
attacks Etc and Y so on key down on key

4901
03:41:19,960 --> 03:41:22,159
press and there's also on key release so

4902
03:41:22,159 --> 03:41:24,640
for example if you want to only move to

4903
03:41:24,640 --> 03:41:28,479
the right when the right key is released

4904
03:41:28,479 --> 03:41:30,960
it's going to do that so it's a strange

4905
03:41:30,960 --> 03:41:32,920
Behavior but I just want to show show

4906
03:41:32,920 --> 03:41:34,600
you how to use those

4907
03:41:34,600 --> 03:41:37,279
methods all right so that's that and

4908
03:41:37,279 --> 03:41:41,359
then for animations as I've shown you

4909
03:41:41,359 --> 03:41:43,399
here in this example you don't have any

4910
03:41:43,399 --> 03:41:45,359
but you use the play Method on your

4911
03:41:45,359 --> 03:41:47,800
player so imagine that the bean had an

4912
03:41:47,800 --> 03:41:49,439
animation so you would play and then

4913
03:41:49,439 --> 03:41:51,600
play that animation but for example you

4914
03:41:51,600 --> 03:41:53,399
would have another input Handler for

4915
03:41:53,399 --> 03:41:56,960
example player on key release which for

4916
03:41:56,960 --> 03:41:59,800
example would set back the animation to

4917
03:41:59,800 --> 03:42:02,279
default to the default animation so you

4918
03:42:02,279 --> 03:42:07,120
would do like player. stop or to stop

4919
03:42:07,120 --> 03:42:10,239
the animation or change it with another

4920
03:42:10,239 --> 03:42:13,120
animation by play and instead Idol for

4921
03:42:13,120 --> 03:42:15,199
example so this is how you would go

4922
03:42:15,199 --> 03:42:17,479
about it one thing I want to mention of

4923
03:42:17,479 --> 03:42:20,640
course is that it's wise to always check

4924
03:42:20,640 --> 03:42:22,880
beforehand what the current animation is

4925
03:42:22,880 --> 03:42:24,560
playing and you can do this by having

4926
03:42:24,560 --> 03:42:27,880
player. Cur anim and it's going to give

4927
03:42:27,880 --> 03:42:29,880
you the name of the current animation

4928
03:42:29,880 --> 03:42:31,239
and then you can check it as long as

4929
03:42:31,239 --> 03:42:33,000
it's not equal to the animation you want

4930
03:42:33,000 --> 03:42:35,880
to actually play right now then you can

4931
03:42:35,880 --> 03:42:37,840
play that animation the reason you do

4932
03:42:37,840 --> 03:42:40,439
this is because you don't want to

4933
03:42:40,439 --> 03:42:43,439
interrupt an animation mid play so let's

4934
03:42:43,439 --> 03:42:45,680
say my idol animation is already playing

4935
03:42:45,680 --> 03:42:47,960
and is at frame three you don't want to

4936
03:42:47,960 --> 03:42:51,520
restart the animation again don't want

4937
03:42:51,520 --> 03:42:55,560
that all right so that's that and um yep

4938
03:42:55,560 --> 03:42:57,760
now I've already covered how to play

4939
03:42:57,760 --> 03:43:01,199
sounds and going forward there is a

4940
03:43:01,199 --> 03:43:03,199
couple of things couple of advanced more

4941
03:43:03,199 --> 03:43:05,680
advanced features I would say you should

4942
03:43:05,680 --> 03:43:07,479
better like watch my Project based

4943
03:43:07,479 --> 03:43:09,279
tutorials or just look at the examples

4944
03:43:09,279 --> 03:43:13,080
here so one of them is the tween um uh

4945
03:43:13,080 --> 03:43:15,800
feature so let me just find it so tween

4946
03:43:15,800 --> 03:43:18,840
is very handy it allows you to have like

4947
03:43:18,840 --> 03:43:21,840
transitions like that so like

4948
03:43:21,840 --> 03:43:25,439
that and then he's out those various

4949
03:43:25,439 --> 03:43:28,479
trans transitions they're very useful so

4950
03:43:28,479 --> 03:43:30,880
here's an example on how to use them

4951
03:43:30,880 --> 03:43:34,359
there's also Mouse press uh and onclick

4952
03:43:34,359 --> 03:43:37,279
uh handlers I forgot to mention onclick

4953
03:43:37,279 --> 03:43:39,760
is just as onke keep down Onkey press

4954
03:43:39,760 --> 03:43:43,319
just you use on click so not much to say

4955
03:43:43,319 --> 03:43:46,399
for example here if I click on the

4956
03:43:46,399 --> 03:43:48,439
player uh you probably need the area

4957
03:43:48,439 --> 03:43:52,319
component for this onclick let's say

4958
03:43:52,319 --> 03:43:53,359
it's going

4959
03:43:53,359 --> 03:43:58,720
to do k. debug.log and then let's say

4960
03:43:58,720 --> 03:44:03,080
test so as all every time I click on the

4961
03:44:03,080 --> 03:44:04,840
game object it's going to do this so

4962
03:44:04,840 --> 03:44:08,159
yeah you can also use the global k. on

4963
03:44:08,159 --> 03:44:10,600
click as well but as I said it seems to

4964
03:44:10,600 --> 03:44:13,439
be more performant to use the methods

4965
03:44:13,439 --> 03:44:16,640
offered by the game object itself

4966
03:44:16,640 --> 03:44:18,600
all right uh so let's go back to Tween

4967
03:44:18,600 --> 03:44:20,640
so here I recommend like looking at the

4968
03:44:20,640 --> 03:44:22,640
example so

4969
03:44:22,640 --> 03:44:26,319
tween has this is a tween so this thing

4970
03:44:26,319 --> 03:44:30,040
here is tween it has four one two three

4971
03:44:30,040 --> 03:44:32,600
four so maybe I should increase the font

4972
03:44:32,600 --> 03:44:34,319
here so what I'm going to do is I'm

4973
03:44:34,319 --> 03:44:38,840
going to press F1 and then zoom

4974
03:44:38,840 --> 03:44:43,880
in and I do this again

4975
03:44:45,840 --> 03:44:48,279
so just ignore all this clutter and look

4976
03:44:48,279 --> 03:44:50,800
at this part this is the actual very

4977
03:44:50,800 --> 03:44:53,439
important part so the first Pam is the

4978
03:44:53,439 --> 03:44:55,760
start value the second so the the

4979
03:44:55,760 --> 03:44:57,760
current position of the bean the initial

4980
03:44:57,760 --> 03:45:00,000
position of the bean then you have the

4981
03:45:00,000 --> 03:45:01,960
destination value you want the final

4982
03:45:01,960 --> 03:45:03,800
value to be the mouse position so Mouse

4983
03:45:03,800 --> 03:45:08,000
pause is an a play Method you can use to

4984
03:45:08,000 --> 03:45:10,800
get the current Mouse position so you do

4985
03:45:10,800 --> 03:45:12,680
K if you don't if you're not using

4986
03:45:12,680 --> 03:45:16,560
global K playay you do. k so yeah

4987
03:45:16,560 --> 03:45:19,960
um and then the duration is in seconds

4988
03:45:19,960 --> 03:45:21,640
so you specify a value let's say three

4989
03:45:21,640 --> 03:45:24,199
seconds the transition between the

4990
03:45:24,199 --> 03:45:26,399
original position and the final value

4991
03:45:26,399 --> 03:45:28,960
you want and then the value this is how

4992
03:45:28,960 --> 03:45:30,560
the value should be updated this is

4993
03:45:30,560 --> 03:45:31,800
where you actually write the function

4994
03:45:31,800 --> 03:45:33,199
that is going to change the value

4995
03:45:33,199 --> 03:45:36,399
gradually so here we modify the position

4996
03:45:36,399 --> 03:45:40,439
of the bean as the value change here and

4997
03:45:40,439 --> 03:45:42,399
then the interpolation function there

4998
03:45:42,399 --> 03:45:44,520
are many easing types and the way you

4999
03:45:44,520 --> 03:45:47,120
access you can do this like that so here

5000
03:45:47,120 --> 03:45:50,040
k. eings so if you're using non-global

5001
03:45:50,040 --> 03:45:52,960
kaboo and then you have linear you have

5002
03:45:52,960 --> 03:45:54,880
a bunch of them they're all documented

5003
03:45:54,880 --> 03:45:58,199
in the documentation so that's here if I

5004
03:45:58,199 --> 03:45:59,479
do

5005
03:45:59,479 --> 03:46:02,159
tween maybe not the reference dock I

5006
03:46:02,159 --> 03:46:05,680
think that's the if I do

5007
03:46:05,680 --> 03:46:08,279
tween you can have the tween in math

5008
03:46:08,279 --> 03:46:11,120
section and then you can see here tween

5009
03:46:11,120 --> 03:46:14,080
controller uh not here uh it's not you

5010
03:46:14,080 --> 03:46:16,720
can have using out quad you can see that

5011
03:46:16,720 --> 03:46:19,080
it's not very convenient here uh if you

5012
03:46:19,080 --> 03:46:21,080
look at the Kaboom Jazz documentation

5013
03:46:21,080 --> 03:46:23,600
though uh let's say I'm going to remove

5014
03:46:23,600 --> 03:46:26,880
that okay boom JS

5015
03:46:26,880 --> 03:46:29,760
documentation and then type in here

5016
03:46:29,760 --> 03:46:33,239
using contrl F the tween you can go here

5017
03:46:33,239 --> 03:46:36,080
and you can see that here in the easing

5018
03:46:36,080 --> 03:46:37,840
function you can see like tween

5019
03:46:37,840 --> 03:46:41,120
controller uh okay it's not here uh

5020
03:46:41,120 --> 03:46:43,479
eings it's the eings thing easing and

5021
03:46:43,479 --> 03:46:45,120
then you have the name of the all the

5022
03:46:45,120 --> 03:46:48,199
eing functions can use so maybe here as

5023
03:46:48,199 --> 03:46:50,439
well in the documentation could have

5024
03:46:50,439 --> 03:46:53,560
here if I type in eings you would have

5025
03:46:53,560 --> 03:46:56,880
it okay so but you would have all the

5026
03:46:56,880 --> 03:46:59,880
name for them so yeah uh for now it's a

5027
03:46:59,880 --> 03:47:02,080
work in progress the documentations for

5028
03:47:02,080 --> 03:47:04,520
K so feel free to use the kabon Jazz

5029
03:47:04,520 --> 03:47:06,120
documentation which are more complete

5030
03:47:06,120 --> 03:47:07,640
for now all right so this is how you use

5031
03:47:07,640 --> 03:47:11,279
a tween and yep so it's a nice feature

5032
03:47:11,279 --> 03:47:14,640
uh to transition things and yep the

5033
03:47:14,640 --> 03:47:17,439
other other things for levels so for

5034
03:47:17,439 --> 03:47:20,080
making your map and layout there is the

5035
03:47:20,080 --> 03:47:23,120
add level method that allows you to

5036
03:47:23,120 --> 03:47:27,479
create levels using arrays of strings I

5037
03:47:27,479 --> 03:47:30,239
maybe there's a example here the level

5038
03:47:30,239 --> 03:47:32,640
example you can see how it's used you

5039
03:47:32,640 --> 03:47:34,399
use these symbols and then you for each

5040
03:47:34,399 --> 03:47:36,600
symbol you specify a game object I

5041
03:47:36,600 --> 03:47:38,680
personally never use this I never use it

5042
03:47:38,680 --> 03:47:41,120
because it's not performant but I do

5043
03:47:41,120 --> 03:47:43,239
recognize that it is handy I used it in

5044
03:47:43,239 --> 03:47:45,439
a tutorial and uh my JavaScript

5045
03:47:45,439 --> 03:47:48,000
platformer tutorial this was be before I

5046
03:47:48,000 --> 03:47:51,000
figured out how to use til so here again

5047
03:47:51,000 --> 03:47:52,840
my substack is very useful here because

5048
03:47:52,840 --> 03:47:55,319
I've written a whole post on how to use

5049
03:47:55,319 --> 03:47:57,680
tile with kabon JS it's the exact same

5050
03:47:57,680 --> 03:48:01,199
logic for CA where you can use tile

5051
03:48:01,199 --> 03:48:03,239
which is an external program where you

5052
03:48:03,239 --> 03:48:05,239
can draw your your levels and then you

5053
03:48:05,239 --> 03:48:08,040
can import that into your as a Json file

5054
03:48:08,040 --> 03:48:10,199
then import that into your your game and

5055
03:48:10,199 --> 03:48:13,080
here I show the code and explain it so

5056
03:48:13,080 --> 03:48:15,479
hope you yeah this I'm going to just

5057
03:48:15,479 --> 03:48:18,399
link the general G Legend Dev substack

5058
03:48:18,399 --> 03:48:20,880
here and then you can go and search for

5059
03:48:20,880 --> 03:48:21,920
those

5060
03:48:21,920 --> 03:48:24,640
posts all right maybe I'm I'm put the

5061
03:48:24,640 --> 03:48:27,080
link for each things though so maybe

5062
03:48:27,080 --> 03:48:28,960
yeah just to be more convenient we have

5063
03:48:28,960 --> 03:48:31,520
covered the most important parts um for

5064
03:48:31,520 --> 03:48:33,199
the shaders I just want to give you a

5065
03:48:33,199 --> 03:48:35,800
taste just look at the examples you can

5066
03:48:35,800 --> 03:48:38,279
change the color Etc there are more

5067
03:48:38,279 --> 03:48:40,840
interesting examples in the playground I

5068
03:48:40,840 --> 03:48:43,279
don't know if they're here though uh

5069
03:48:43,279 --> 03:48:46,640
ghost hunting what is that

5070
03:48:46,640 --> 03:48:49,159
oh there there are new examples so

5071
03:48:49,159 --> 03:48:51,880
that's nice uh so yeah feel free to

5072
03:48:51,880 --> 03:48:54,159
check the the these examples there are

5073
03:48:54,159 --> 03:48:56,239
pretty a lot of pretty cool things you

5074
03:48:56,239 --> 03:48:59,120
can take inspiration from for your games

5075
03:48:59,120 --> 03:49:01,199
so for example this uses shaders and

5076
03:49:01,199 --> 03:49:04,040
this very impressive very nice so if you

5077
03:49:04,040 --> 03:49:06,000
do up and down you can have various

5078
03:49:06,000 --> 03:49:08,880
different effects even like the the

5079
03:49:08,880 --> 03:49:12,840
light Etc so that's that's nice so yeah

5080
03:49:12,840 --> 03:49:15,080
I'm not very familiar with shap shaders

5081
03:49:15,080 --> 03:49:17,399
I don't know the Shader land glsl I

5082
03:49:17,399 --> 03:49:19,040
haven't learned shaders that's why I

5083
03:49:19,040 --> 03:49:20,520
didn't want to cover it but I know how

5084
03:49:20,520 --> 03:49:23,840
to use them how to load them and a k

5085
03:49:23,840 --> 03:49:26,479
play for example so maybe I'm going to

5086
03:49:26,479 --> 03:49:29,239
dive in and read the book of shaders

5087
03:49:29,239 --> 03:49:31,239
which is the recommended material

5088
03:49:31,239 --> 03:49:34,720
usually shown to beginners for this uh

5089
03:49:34,720 --> 03:49:36,239
maybe not beginners but people wanting

5090
03:49:36,239 --> 03:49:39,520
to learn on the subject all right so now

5091
03:49:39,520 --> 03:49:42,520
the last thing is

5092
03:49:42,520 --> 03:49:45,880
to yeah there there there's two things

5093
03:49:45,880 --> 03:49:49,239
uh one is the state machines so how to

5094
03:49:49,239 --> 03:49:52,000
program an AI enemy AI Etc I think it's

5095
03:49:52,000 --> 03:49:54,439
going to be too involved to code in this

5096
03:49:54,439 --> 03:49:56,600
tutorial and maybe there's an example

5097
03:49:56,600 --> 03:50:00,080
here the code here it uses on state

5098
03:50:00,080 --> 03:50:01,960
enter so to use a state machine what is

5099
03:50:01,960 --> 03:50:03,720
a state machine it's a way to program an

5100
03:50:03,720 --> 03:50:06,960
AI you specify various States so here

5101
03:50:06,960 --> 03:50:09,120
Idol attack and move and then you

5102
03:50:09,120 --> 03:50:11,520
specify the default State and then here

5103
03:50:11,520 --> 03:50:13,159
what happens that you enter into the

5104
03:50:13,159 --> 03:50:15,080
default State and then you have have a

5105
03:50:15,080 --> 03:50:18,239
Handler for your your States for example

5106
03:50:18,239 --> 03:50:22,399
when the enemy you enters the idle State

5107
03:50:22,399 --> 03:50:24,800
you will run some logic and then move on

5108
03:50:24,800 --> 03:50:26,560
to another state and this is how AI is

5109
03:50:26,560 --> 03:50:29,199
done so for example this ghost first it

5110
03:50:29,199 --> 03:50:31,680
is in the move state it start moving and

5111
03:50:31,680 --> 03:50:33,760
then at one point it's going to remain

5112
03:50:33,760 --> 03:50:36,040
idle and then after having remained

5113
03:50:36,040 --> 03:50:40,439
idled it's going to move on to a attack

5114
03:50:40,439 --> 03:50:43,239
state so really I recommend just looking

5115
03:50:43,239 --> 03:50:45,680
up this code I in my my Metroid Vania

5116
03:50:45,680 --> 03:50:49,120
tutorial I have written the code I did

5117
03:50:49,120 --> 03:50:52,600
the AI for enemies and Etc so this

5118
03:50:52,600 --> 03:50:54,560
something a bit too involved for me to

5119
03:50:54,560 --> 03:50:57,120
do here uh here is the most basic

5120
03:50:57,120 --> 03:50:58,640
example that is going to give you a

5121
03:50:58,640 --> 03:51:01,920
taste of what it's like to code in EN AI

5122
03:51:01,920 --> 03:51:04,760
so yeah I recommend diving in on that

5123
03:51:04,760 --> 03:51:08,279
and then finally the last um feature I

5124
03:51:08,279 --> 03:51:11,159
want to talk about is

5125
03:51:11,159 --> 03:51:14,279
the uh what is it's the trigger custom

5126
03:51:14,279 --> 03:51:16,399
event in Kaboom Jaz so custom events are

5127
03:51:16,399 --> 03:51:19,439
a way to make your code cleaner and so

5128
03:51:19,439 --> 03:51:21,399
you can trigger those events they're

5129
03:51:21,399 --> 03:51:24,520
similar to signals in kodo so I

5130
03:51:24,520 --> 03:51:28,319
recommend reading that uh that blog post

5131
03:51:28,319 --> 03:51:30,840
here custom event in kabo JS which is

5132
03:51:30,840 --> 03:51:33,279
applicable to KL I might actually edit

5133
03:51:33,279 --> 03:51:37,960
the titles and put in kl/ kabj so that's

5134
03:51:37,960 --> 03:51:40,800
that and that's it I hope this tutorial

5135
03:51:40,800 --> 03:51:44,159
was useful to you uh yep so feel free to

5136
03:51:44,159 --> 03:51:46,720
if you want to dive into project you can

5137
03:51:46,720 --> 03:51:48,239
using just the knowledge in this

5138
03:51:48,239 --> 03:51:51,720
tutorial and using the documentation and

5139
03:51:51,720 --> 03:51:53,840
the playground you can actually start

5140
03:51:53,840 --> 03:51:56,520
working on your first game in K play by

5141
03:51:56,520 --> 03:51:59,920
yourself if you want to see how we do

5142
03:51:59,920 --> 03:52:01,600
things a bit more advanced you can

5143
03:52:01,600 --> 03:52:03,920
follow one of my tutorials and yep so

5144
03:52:03,920 --> 03:52:06,600
I'm hoping to see you in future videos

5145
03:52:06,600 --> 03:52:08,880
so subscribe if you want uh so if you

5146
03:52:08,880 --> 03:52:10,439
want to learn how to make a how to

5147
03:52:10,439 --> 03:52:12,120
transform your C playay game into a

5148
03:52:12,120 --> 03:52:14,319
desktop downloadable game you can watch

5149
03:52:14,319 --> 03:52:17,279
the previous tutorial I did on that so

5150
03:52:17,279 --> 03:52:20,720
yeah thanks for watching
